---
title: "marriage{{< fa heart >}}  & {{< fa heart-crack >}}divorce"
description: "plotting (animated) the marriages and divorces over the years in Uzbekistan using `ggplot2` and `gganimate`"
author: "Fazliddin Sultonov"
date: "2025-03-02"
date-format: "MMM D, YYYY"

filters:
  - lightbox
lightbox: 
  match: auto
  effect: none
  desc-position: top

page-layout: full
reference-location: margin
categories: [barplot, R, ggplot2, gganimate, ggpol]
# Code execute options
execute: 
  echo: true    # Input anzeigen
  eval: true    # Code ausführen
  freeze: true  # never re-render during project render
# Output
format: 
  html:
    theme: cosmo
  # codeb block
    code-fold: true
    code-line-numbers: true
    code-block-border-left: true
  # engine
    engine: knitr
    css: /customs/style.css
# engine: knitr
#jupyter: python3

# Chunk Options
knitr:
  opts_chunk:
    comment: "#>" 

  opts_knit: 
    warning: false
    error: false
    
---


![](gallery_img/marriage.png)
```{r}
#| echo: false           # R-Input NICHT anzeigen      
#| output: false         # R-Output NICHT anzeigen 
#| eval: true            # Code ausführen
#| warning: false

# library pacman to loading and installing packages which are not installed
if(!require("pacman")){
    install.packages("pacman")
    library(pacman)
}
# Load Packages
pacman::p_load(
  tidyverse,   # dataclean, ggplot
  knitr,       # knitter
  fontawesome, # icons
    #> Loading required package: sysfonts
    #> Loading required package: showtextdb
  showtext,    # show icons
  ggtext,      # texte ins plot
  glue,        # für md texte
  gganimate,   # animate plot
  av,         # render/animate plot
  ggpol        # facet_share
)     
##if (!require(c("pkg1", "pkg2"))) install.packages(c("pkg1", "pkg2"))
##
#use_python("C:/Users/sultanov/AppData/Local/Programs/Python/Python313/python.exe") # für Python , required = TRUE
##use_condaenv("base") 
##use_python('/usr/bin/python3')
```


```{r}
#| echo: false           # R-Input NICHT anzeigen      
#| output: false         # R-Output NICHT anzeigen 
#| eval: true            # Code ausführen
#| warning: false

# Variable =====================================================================

# icon ----------------------------------------
f_path <- "C:/Users/sultanov/Documents/fontawesome/otfs/"
font_add('Font Awesome 6 Brands', paste0(f_path, "Font Awesome 6 Brands-Regular-400.otf"))  # social

showtext::showtext_auto()

yt_icon <- "&#xf431" # 167
ins_icon <- "&#xe055"
tg_icon <- "&#xf2c6"
yt_username <- "@hw_sultanov"
ins_username <- "@sultanof.uzb"
tg_username <- "@R4Pythonistas"

# Caption for the plot
# cap <- glue::glue(
#   "Plot by:
#   <span style='color: #C4302B; font-family:\"Font Awesome 6 Brands\";'>{yt_icon};</span>
#   <span style='color: #C4302B'>{yt_username} |</span>|
#   <span style='color: #e1306c; font-family:\"Font Awesome 6 Brands\";'>{ins_icon};</span>
#   <span style='color: #e1306c'>{ins_username} |</span>|
#   <span style='color: #24A1DE; font-family:\"Font Awesome 6 Brands\";'>{tg_icon};</span>
#   <span style='color: #24A1DE'>{tg_username} |</span>|</br></p>"
# )


```


:::: {.column-screen}
::: {.code-r}
# `r fa(name = "r-project",  height = "2.0em", width = "2.0em", fill = "steelblue")`{.center-slide}

:::
::::


Datasource: [Statistics Agency under the President of the Republic of Uzbekistan](https://stat.uz/en/) |
Datastorage: [{{< fa brands square-github >}}GitHub](https://github.com/sultanovf/my_datasets/blob/main/nikohuz_2010_2023.csv)


## data

```{r}
#| column: screen-inset
#| results: hold
#| warning: false

data <- read.csv2("https://raw.githubusercontent.com/sultanovf/my_datasets/main/nikohuz_2010_2023.csv")
years <- paste(2010:2023) #, sep=",", collapse= ","
years <- unlist(strsplit(years, ","))
new_cnames <- c("region", "status", "area",  years)
colnames(data) <- new_cnames


rmarkdown::paged_table(sample_n(data, 10)) # show sample 10 rows
# oder {r, df_print = "paged"}
# sample_n(data_raw, 10

```



## pivot data

```{r}
#| results: hold
#| warning: false

df<- data
# pivot data
df_pv<-
  df |> 
  pivot_longer(
    cols = !c(region, status, area),
    names_to = "year",
    values_to = "value"
  )  

df_pv |> 
  sample_n(7)
```


## prepare data for plot

```{r}
#| results: hold
#| warning: false



df_pl <-
  df|> 
  pivot_longer(
    cols = !c(region, status, area),
    names_to = "year",
    values_to = "value"
  ) |> 
  group_by(year, status) |> 
  summarise(value = sum(value)) |> 
  mutate(
    #frame = row_number(),
    year = as.integer(year),
    value = case_when(
      status == "divorce" ~ round(value/1000, 1)*-1,
      TRUE ~ round(value/1000, 1))
    ) |>
  ungroup()

head(df_pl)




```




## pyramid #1

```{r}
#| output: false         # R-Output NICHT anzeigen 
#| eval: true            # Code ausführen
#| warning: false

# Title/subtitle/datasource
data_source <- "©Statistics Agency under the President of the Republic of Uzbekistan"
p_title <- "<br>Браки и разводы в Узбекистане в 2010-2023 гг."
p_subtitle <- ""

# caption
social_caption <- glue::glue(
  "<span style = 'color:skyblue3;'><i><strong><br>DataSource: {data_source} <br/></strong></i></span>  Plot by:
  <span style='color: #C4302B; font-family:\"Font Awesome 6 Brands\";'>{yt_icon};</span>
  <span style='color: #C4302B'>{yt_username}</span> |
  <span style='color: #e1306c; font-family:\"Font Awesome 6 Brands\";'>{ins_icon};</span>
  <span style='color: #e1306c'>{ins_username}</span> |
  <span style='color: #24A1DE; font-family:\"Font Awesome 6 Brands\";'>{tg_icon};</span>
  <span style='color: #24A1DE'>{tg_username}<br></span>"
)

# caption
social_caption_anim <- glue::glue(
  "  <span style='color: #C4302B; font-family:\"Font Awesome 6 Brands\";'>{yt_icon};</span>
  <span style='color: #C4302B'>{yt_username}</span> |
  <span style='color: #e1306c; font-family:\"Font Awesome 6 Brands\";'>{ins_icon};</span>
  <span style='color: #e1306c'>{ins_username}</span> |
  <span style='color: #24A1DE; font-family:\"Font Awesome 6 Brands\";'>{tg_icon};</span>
  <span style='color: #24A1DE'>{tg_username}<br></span>"
)

f_path <- "C:/Users/sultanov/Documents/fontawesome/otfs/"
sysfonts::font_add(
  family = 'Font Awesome 6 Brands', 
  regular = paste0(f_path, "Font Awesome 6 Brands-Regular-400.otf"))

showtext::showtext_auto()
```



```{r}
#| results: hold
#| warning: false

# create plot
pl <- 
  ggplot(df_pl, aes(x=year, y=value, fill=status)) +
  geom_bar(position = position_dodge(width=1), stat='identity') +
  scale_x_continuous(breaks = c(seq(2010,2023)), labels = c(seq(2010,2023, 1)))+
  geom_label(aes(label = paste(abs(value), "k")),
             colour = "white", fill = "steelblue4", fontface="bold", size=3.5) +
  # facet with ggpol
  facet_share(~status, dir = "h", scales = "free", reverse_num = TRUE)+
  coord_flip() +
  # title, cap, ..
  labs(
    title = p_title,
    caption = social_caption,
    y = "Число браков и разводов в тысячах",
    x = NULL
  ) +
  # theme, format
  theme_update()+
  theme(
    plot.title = element_markdown(
      size = 16, color = "steelblue4", face = "bold", hjust = 0.5),
    plot.caption = ggtext::element_markdown(size = 14, hjust = 0.5),
    legend.position = "none",
    axis.title.x = element_text(size = 12),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.background = element_rect(fill = "ghostwhite"), 
    plot.background = element_rect(fill = "azure2"),
    strip.background = element_rect(fill = "linen", color = "steelblue")
  )

# Show plot
pl

```

## barplot

```{r}
#| results: hold
#| warning: false

pl_2 <-
  ggplot(data = df_pl,
         aes(x = year, y = value, fill = status)) +
  geom_bar(stat = "identity") + #, position = "dodge"
  scale_y_continuous(
    breaks = c(seq(-300, 300, by = 50)), 
    #labels = c(seq(300, 0, -50), seq(50, 300, 50)),
    labels = function(x) paste0(abs(x), "k")) +
  scale_x_continuous(breaks = c(seq(2010,2023)), labels = c(seq(2010,2023, 1)))+
  coord_flip() +
  geom_label(aes(label=abs(value)), color = "white") +
  labs(
    title = p_title,
    caption = social_caption,
    y = NULL,
    x = NULL) +
  
  theme_minimal()+
  theme(
    plot.title = element_textbox(
      size = 14, color = "steelblue4", face = "bold", hjust = 0.5),
    plot.caption = ggtext::element_markdown(size = 12, hjust = 0.5),
    legend.position = "top",
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank()
  )
# show plot
pl_2

```


## animated plot for marriage

```{r}
#| results: hold
#| warning: false

# marriage
plt_anim_mar <-
  df_pl |> 
  filter(status == "marriage") |> 
  mutate(value = abs(value)) |>   # weil df_pl divor values nigativ
  ggplot(aes(x = as_factor(year), y = value, fill = value))+
  geom_col()+
  scale_colour_brewer(type = "div", palette = "BuGn", direction = 1)+
  scale_y_continuous(limits = c(0, 300),breaks = seq(0, 300, 50),
                     labels = function(x) paste0(x, "k"))+
  geom_text(aes(label =  round(value)),
            vjust = 1.5, nudge_y = 0.5, color = "white", size = 4)+
  labs(
    title = "Заключенные браки", #: {closest_state}
    #subtitle = "{closest_state}",
    caption = social_caption_anim,
    y = "Количество браков (в тысячах, k = 1000)",
    x = NULL) +
  theme_minimal()+
  theme(
    plot.title = element_text(size = 16, color = "steelblue4", hjust = 0.5),
    plot.caption = element_textbox(size = 14, hjust = 0.5),
    axis.title.y = element_text(size = 11, vjust = -0.5),
    legend.position = "none",
    panel.grid = element_blank(),
    panel.grid.major.y = element_line(color = "white"),
    panel.ontop = TRUE,
    ) +
  
  #scale_fill_distiller(palette = "red", direction = -1) +
  transition_states(year, wrap = FALSE, transition_length = 14)+
  #ease_aes("cubic-in-out")+
  view_follow(fixed_y = TRUE)+
  shadow_mark()

#plt_anim
anim1 <-   
  animate(
    plt_anim_mar,
    duration = 15,
    start_pause = 5,
    end_pause = 10,
    renderer = gifski_renderer()
  )
anim1
```


## animated plot for divorce

```{r}
#| results: hold
#| warning: false

# divorce
plt_anim_div <-
  df_pl |> 
  filter(status == "divorce") |> 
  mutate(value = abs(value)) |>   # weil df_pl status=divorce values nigativ
  ggplot(aes(x = as_factor(year), y = value, fill = value))+
  geom_col()+
  scale_fill_distiller(palette = "Reds", direction = 1)+
  scale_y_continuous(limits = c(0, 50),breaks = seq(0, 50, 5),
                     labels = function(x) paste0(x, "k"))+
  geom_text(aes(label =  round(value,1)),
            vjust = 2, nudge_y = 0.5, color = "steelblue4", size = 4)+
  labs(
    title = "Разводы", #: {closest_state}
    caption = social_caption_anim,
    y = "Количество разводов (в тысячах, k = 1000)",
    x = NULL) +
  theme_minimal()+
  theme(
    plot.title = element_text(size = 16, color = "steelblue4", hjust = 0.5),
    plot.caption = element_markdown(size = 14, hjust = 0.5),
    axis.title.y = element_text(size = 11, vjust = -0.5),
    legend.position = "none",
    panel.grid = element_blank(),
    panel.grid.major.y = element_line(color = "white"),
    panel.ontop = TRUE) +
  
  #scale_fill_distiller(palette = "red", direction = -1) +
  transition_states(year, wrap = FALSE)+
  #ease_aes("cubic-in-out")+
  view_follow(fixed_y = TRUE)+
  shadow_mark()

#plt_anim
anim2 <-   
  animate(
    plt_anim_div,
    duration = 15,
    start_pause = 5,
    end_pause = 10,
    renderer = gifski_renderer()
  )
anim2
```



