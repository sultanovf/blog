{
  "hash": "5fb727c598563c464403bf8de942dc67",
  "result": {
    "markdown": "---\ntitle: \"mapplot\"\ndescription: \"create a *mapplot*, *bar chart* and *funnel chart* from a real dataset using `ggplot2` and `plotly`\"\nauthor: \"Fazliddin Sultonov\"\ndate: \"2024-12-15\"\ndate-format: \"MMM D, YYYY\"\n\nfilters:\n  - lightbox\nlightbox: \n  match: auto\n  effect: none\n  desc-position: top\n\npage-layout: full\nreference-location: margin\ncategories: [barplot, map, R, Python, ggplot2, plotly, pandas, funnel chart]\n# Code execute options\nexecute: \n  echo: true    # Input anzeigen\n  eval: true    # Code ausführen\n  freeze: true  # never re-render during project render\n# Output\nformat: \n  html:\n    theme: cosmo\n  # codeb block\n    code-fold: true\n    code-line-numbers: true\n    code-block-border-left: true\n  # engine\n    engine: knitr\n    css: /customs/style.css\n# engine: knitr\n#jupyter: python3\n\n# Chunk Options\nknitr:\n  opts_chunk:\n    comment: \"#>\" \n\n  opts_knit: \n    warning: false\n    error: false\n    \n---\n\n\n\n![](gallery_img/map_de.png)\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n:::: {.column-screen-inset}\n::: {.code-r}\n# `<svg preserveAspectRatio=\"none\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:2.0em;width:2.0em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:steelblue;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html}{.center-slide}\n\n:::\n::::\n\n\nDatasource: [Statistisches Bundesamt](https://www-genesis.destatis.de/datenbank/online/) |\nDatastorage: [{{< fa brands square-github >}}GitHub](https://github.com/sultanovf/my_datasets/blob/main/usbekeninde.csv)\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## variables\n\nThe long variable names have been abbreviated to simplify editing and plotting. The names in the analysis and the names in the original are shown below:\n\n\n::: {.cell}\n::: {.cell-output-display}\n|abbreviated variable name |original variable name                  |\n|:-------------------------|:---------------------------------------|\n|AE_family                 |AE, familiäre Gründe                    |\n|Ausbildung                |Ausbildung                              |\n|AE_human                  |AE, human., pol. Gründe                 |\n|Duldung                   |Duldung                                 |\n|AEgestattung              |Aufenthaltsgestattung                   |\n|Antrag                    |Antrag gestellt                         |\n|Ausbildung                |Ausbildung                              |\n|Befristete_AE             |Befristete AE                           |\n|FreizügG/EU               |Aufenthaltsrecht nach FreizügG/EU       |\n|NVisa                     |Befristet, bes. Gründe & nationale Visa |\n|Niederlassungserlaubnis   |Unbefristete Niederlassungserlaubnis    |\n|OhneAT                    |Ohne AE &#124; Duldung oder Gestattung  |\n|Erwerb                    |Befristete AE, Erwerbstätigkeit         |\n:::\n:::\n\n\n\n### Show some sample rows\n\n:::: {.column-screen-inset}\n::: {.code-r}\n\n\n::: {.cell}\n\n:::\n\n\n:::\n::::\n\n\n## dataclean\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pivot data\npiv_data <- \n  data_raw |> \n  pivot_longer(\n    cols = !c(Bundesland, Stadt, Kreis...Landkreis),\n    names_to = \"status\",\n    values_to = \"cnt\"\n    ) |> \n  select(c(1,2,4,5))\n\n#library(stringr)  # string replace, dedect\ndata <- \n  piv_data |> \n  rowwise() |> \n  mutate(\n    geschlecht = ifelse(\n      endsWith(status, \"_m\"),  \"male\",\n        ifelse(\n          endsWith(status, \"_w\"), \"female\"\n        )\n      )\n  ) |> \n  mutate(across(\"status\", str_replace, \"_m|_w\", \"\")) |> \n  rename(\n    \"bundesland\" = \"Bundesland\",\n    \"kreis\" = \"Stadt\")\n\ndata |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 6 × 5\n#> # Rowwise: \n#>   bundesland         kreis     status                    cnt geschlecht\n#>   <chr>              <chr>     <chr>                   <int> <chr>     \n#> 1 Schleswig-Holstein Flensburg FreizügG.EU                 0 male      \n#> 2 Schleswig-Holstein Flensburg FreizügG.EU                 0 female    \n#> 3 Schleswig-Holstein Flensburg Niederlassungserlaubnis     0 male      \n#> 4 Schleswig-Holstein Flensburg Niederlassungserlaubnis     5 female    \n#> 5 Schleswig-Holstein Flensburg Befristete_AE               0 male      \n#> 6 Schleswig-Holstein Flensburg Befristete_AE               5 female\n```\n:::\n:::\n\n\n\n\n::: {.callout-important}\n## Diqqat! Achtung! Bнимание! Attention!\n\nColumname **Kreis / Landkreis** mit `/` gespeichert. Normal R liest die Spalte so wie sie in DF gespeichrt ist, muss aber mit dplyr so angesprochen werden:\n```{{r}}\ndata_raw |> \n  pivot_longer(\n    cols = !c(Bundesland, Stadt, `Kreis / Landkreis`),\n    ....\n\n```\n\nIn Qarto sieht eingelesene Spaltenname **Kreis / Landkreis** -> `Kreis...Landkreis`\n\n:::\n\n\n## mapplot via `ggplot`\n*(data grouped by [Bundesländer])*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# libraries:\n# pkg <- c(\"giscoR\", \"ggtext\", \"glue\", \"syfonts\", \"png\", \"ggimage\", \"fontawesome\")\n# lapply(pkg, library, character.only = TRUE)\n\n\n# Group by bundesland ==========================================================\nd_group <-\n  data |> \n  group_by(bundesland) |> \n  summarise(pop = sum(cnt))\n\n# Geo data for germany =========================================================\n# library(giscoR)\nger <- gisco_get_nuts(\n  year = 2024,\n  epsg = 4326,\n  nuts_level = 1,\n  resolution =  \"01\",\n  country = \"Germany\"\n)\n\n# Merge both data ==============================================================\ndf_de <-\n  ger |> \n  left_join(d_group, by = c(\"NUTS_NAME\" = \"bundesland\"))\n\n# new col mit abkurzung to from bundesländer to df\nL_Abk <- c(\"SH\", \"MV\", \"TH\", \"NI\", \"BW\", \"NW\", \"RP\", \"SL\", \"BY\", \"BE\", \"SN\",\n           \"BB\", \"HB\", \"HH\", \"ST\", \"HE\")\ndf_de$abk <- L_Abk\n\n\n# read image dop\nimg <- readPNG(\"gallery_img/dop.png\")\n\n\n# create mapplot\nmap_plt <-\n  ggplot(df_de) +\n  geom_sf(aes(fill = NUTS_NAME))+  #(aes(fill = NUTS_NAME), show.legend = FALSE) # disable legend \n  geom_sf_label(aes(label = paste(abk, \":\", pop)), fill = \"aliceblue\", col = \"dodgerblue4\") +\n  geom_text(aes(y = 50.1, x =13.8, label = paste(\"Gesamt:\", sum(pop))),\n            stat = \"unique\",\n            size = 3.6, size.unit = \"mm\", col = \"dodgerblue4\", fontface = \"bold\") +\n  annotate(\n    'rect',\n    xmin = 12.4,\n    xmax = 15.2,\n    ymin = 49.9,\n    ymax = 50.3,\n    alpha = 0.5,\n    fill = 'aliceblue',\n    col = 'dodgerblue4',\n  )+\n  annotation_raster(img, xmin = 6, xmax = 8, ymin = 54, ymax = 55.5, interpolate = FALSE) +\n  theme_minimal()+\n  labs(\n    title = \"**Usbeken in Deutschland**\",\n    subtitle = \"nach Bundesländern\",\n    caption = social_caption_map\n  ) + \n  guides(fill = guide_legend(title=\"Bundesland\")) +\n  theme(plot.title = ggtext::element_markdown(size = 13, color = \"steelblue4\", face = \"bold\"),\n        plot.subtitle = element_markdown(),\n        plot.caption = element_markdown(size = 11), # element_textbox_simple()\n        plot.caption.position = \"plot\",             #plot, margin, panel,\n        legend.title = element_text(color = \"darkgrey\", size = 12, face = \"bold\"),\n        axis.text.x=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks=element_blank(),\n        axis.title.x=element_blank(),\n        axis.title.y=element_blank())\n\nmap_plt\n```\n\n::: {.cell-output-display}\n![](usbekeninde_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## barplot via `ggplot`\n*(grouped data by [Aufenthaltsstatus])*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group by Status ==============================================================\ngroup_stat <- \n  data |> \n  group_by(status) |> \n  summarise(n = sum(cnt))\n\n# create plot ------------------------------------------------------------------\nbar_plt <-\n  ggplot(group_stat, aes(x = n, y = reorder(n, status), fill = status))+\n  geom_col()+\n \n  geom_text(aes(label = n), \n            hjust = -0.1, color = \"darkgrey\", fontface = \"bold\")+\n  \n  scale_fill_discrete(name = \"Aeufenthaltsstatus\", labels = legnd) +\n  labs(\n    title = \"Usbeken in Deutschlan, nach Aufenthaltsstatus\",\n    caption = social_caption_map,\n    x = \"Zahl (k = 1000)\" ) +\n  scale_x_continuous(\n    labels = function(x) paste0(x/1000, \"k\"),\n    expand = expansion(c(0.01, 0.05))) +\n  theme_classic() +\n  theme(\n    plot.title = ggtext::element_markdown(\n      size = 13, color = \"steelblue4\", face = \"bold\"),\n    plot.caption = ggtext::element_markdown(size = 11),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.line = element_line(colour = \"gray\"),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    legend.position = c(0.8, 0.40)\n  ) \n\nbar_plt\n```\n\n::: {.cell-output-display}\n![](usbekeninde_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## funnel chart via `ggplot`\n*(grouped data by [Aufenthaltsstatus])*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroup_status <-\n  data |> \n  group_by(status, geschlecht) |> \n  summarise(cnt = sum(cnt)) |> \n  mutate(\n    n = case_when(\n      geschlecht == \"female\" ~ cnt*-1,\n      TRUE ~ cnt\n    )\n  )\n\nbrks <- c(seq(-3000, 3000, by = 500))\nlbls = c(seq(30, 0, -5), seq(5, 30, 5))\np <- group_status |>\n  ggplot(aes(x = reorder(status, n), y =  n, fill = geschlecht))+\n  geom_bar(stat = \"identity\", width = .6) +\n  scale_y_continuous(breaks = brks, labels = lbls) +\n  scale_x_discrete(labels = legnd) +\n  geom_label(aes(label = abs(n)), colour = \"blue\", fontface=\"bold\", size=3.5) +\n  guides(fill = guide_legend(\n    title = \"Geschlecht:\",\n    override.aes = aes(label = \"\"))) +\n  coord_flip() +\n  labs(title=\"Usbeken in Deutschland nach Aufenthaltsstatus\",\n       caption = social_caption_map\n       ) +\n  theme_minimal() +\n  theme(plot.title = ggtext::element_markdown(\n          size = 13, color = \"steelblue4\", face = \"bold\"),\n        plot.caption = ggtext::element_markdown(size = 11),\n        axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        legend.background = element_rect(),\n        legend.position = \"top\")\np\n```\n\n::: {.cell-output-display}\n![](usbekeninde_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## funnel chart via `ggplot`\n*(grouped data by [Aufenthaltsstatus])*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroup_bl <- \n  data |> \n  group_by(bundesland, geschlecht) |> \n  summarise(cnt = sum(cnt)) |> \n  mutate(                          # einen Teil die Daten musste ich negativ machen,\n    n = case_when(                 # weil sons stacked bar wurde\n      geschlecht == \"female\" ~ cnt*-1,\n      TRUE ~ cnt\n    )\n  )\n\ngroup_bl |> \n  ggplot(aes(x = reorder(bundesland,n), y =  n, fill = geschlecht))+\n  geom_bar(stat = \"identity\", width = .6) +\n  scale_y_continuous(breaks = brks, labels = lbls) +\n  geom_label(aes(label = abs(n)), colour = \"floralwhite\", fontface=\"bold\", size=4) +\n  guides(fill = guide_legend(\n    title = \"Geschlecht:\",\n    override.aes = aes(label = \"\"))) +\n  coord_flip() +\n  labs(title=\"Usbeken in Deutschland nach Geschlecht in Bundesländern\") +\n  theme_minimal() +\n  theme(plot.title = ggtext::element_markdown(\n          size = 13, color = \"steelblue4\", face = \"bold\"),\n        plot.caption = ggtext::element_markdown(size = 11),\n        axis.title.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.title.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        legend.background = element_rect(),\n        legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](usbekeninde_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n<!-- ```{r} -->\n<!-- library(ggrepel) -->\n<!-- p <- group_stat_sex |> -->\n<!--   ggplot(aes(x = reorder(status, n), y =  n, group = geschlecht))+ -->\n<!--   geom_col(aes(fill = geschlecht), width = 0.8, -->\n<!--            position = position_dodge()) + -->\n<!--   geom_vline(xintercept = 0)+ -->\n<!--   geom_text( -->\n<!--     aes(label = abs(n), hjust = 0.5), size = 3) + -->\n<!--   coord_flip(expand = FALSE) -->\n<!--   theme_minimal() -->\n<!-- p -->\n<!-- ``` -->\n\n\n\n\n:::: {.column-screen-inset}\n::: {.code-py}\n\n# `<svg preserveAspectRatio=\"none\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:2.0em;width:2.0em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:steelblue;overflow:visible;position:relative;\"><path d=\"M439.8 200.5c-7.7-30.9-22.3-54.2-53.4-54.2h-40.1v47.4c0 36.8-31.2 67.8-66.8 67.8H172.7c-29.2 0-53.4 25-53.4 54.3v101.8c0 29 25.2 46 53.4 54.3 33.8 9.9 66.3 11.7 106.8 0 26.9-7.8 53.4-23.5 53.4-54.3v-40.7H226.2v-13.6h160.2c31.1 0 42.6-21.7 53.4-54.2 11.2-33.5 10.7-65.7 0-108.6zM286.2 404c11.1 0 20.1 9.1 20.1 20.3 0 11.3-9 20.4-20.1 20.4-11 0-20.1-9.2-20.1-20.4.1-11.3 9.1-20.3 20.1-20.3zM167.8 248.1h106.8c29.7 0 53.4-24.5 53.4-54.3V91.9c0-29-24.4-50.7-53.4-55.6-35.8-5.9-74.7-5.6-106.8.1-45.2 8-53.4 24.7-53.4 55.6v40.7h106.9v13.6h-147c-31.1 0-58.3 18.7-66.8 54.2-9.8 40.7-10.2 66.1 0 108.6 7.6 31.6 25.7 54.2 56.8 54.2H101v-48.8c0-35.3 30.5-66.4 66.8-66.4zm-6.7-142.6c-11.1 0-20.1-9.1-20.1-20.3.1-11.3 9-20.4 20.1-20.4 11 0 20.1 9.2 20.1 20.4s-9 20.3-20.1 20.3z\"/></svg>`{=html}{.center-slide}\n\n:::\n::::\n\n## prepare date (use data from R)\n\n### group by *[status]* in `pandas`\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"show the code\"}\nimport numpy as np\nimport pandas as pd\nfrom IPython.display import display, Markdown, HTML\n\nvar_name = {\"AE_family\": \"AE, familiäre Gründe\",\n           \"Ausbildung\": \"Ausbildung \",\n           \"AE_human\": \"AE, human., pol. Gründe\", \n           \"Duldung\": \"Duldung \",\n           \"AEgestattung\": \"Aufenthaltsgestattung\", \n           \"Antrag\": \"Antrag gestellt\", \n           \"Ausbildung\": \"Ausbildung\", \n           \"Befristete_AE\": \"Befristete AE\", \n           \"FreizügG/EU\": \"Aufenthaltsrecht nach FreizügG/EU\",\n           \"NVisa\": \"Befristet, bes. Gründe & nationale Visa\", \n           \"Niederlassungserlaubnis\": \"Unbefristete Niederlassungserlaubnis\", \n           \"OhneAT\": \"Ohne AE oder Duldung oder Gestattung\",\n           \"Erwerb\": \"Befristete AE, Erwerbstätigkeit\"}\n\ndf_r = pd.DataFrame(r.group_status)\n# rename rownames\ndef replace_rname(name):\n    return var_name.get(name, name)\ndf_r[\"status\"] = df_r[\"status\"].apply(replace_rname)\n# pivot wide\ndata = df_r.pivot(index = \"status\", columns = \"geschlecht\", values = \"cnt\").reset_index()\nsumma = np.abs(data.female + data.male)\ndata[\"summa\"] = summa\n\ndf = data.copy()\ndf = df.sort_values(\n    \"summa\",\n    ascending=False,\n    inplace=False,\n    ignore_index=False,\n    key=None\n)\n\nfemale = df.female\nmale = df.male\nlabels = df.status\n\nMarkdown(df.to_markdown(index = False))\n```\n\n::: {.cell-output-display}\n| status                                  |   female |   male |   summa |\n|:----------------------------------------|---------:|-------:|--------:|\n| Befristete AE                           |     2315 |   2605 |    4920 |\n| Unbefristete Niederlassungserlaubnis    |     2570 |   1905 |    4475 |\n| AE, familiäre Gründe                    |     1100 |    530 |    1630 |\n| Ohne AE oder Duldung oder Gestattung    |      335 |    935 |    1270 |\n| Ausbildung                              |      330 |    785 |    1115 |\n| Antrag gestellt                         |      430 |    520 |     950 |\n| AE, human., pol. Gründe                 |      370 |    355 |     725 |\n| Befristete AE, Erwerbstätigkeit         |      165 |    555 |     720 |\n| Aufenthaltsgestattung                   |       40 |     50 |      90 |\n| Duldung                                 |       35 |     50 |      85 |\n| Befristet, bes. Gründe & nationale Visa |       35 |     15 |      50 |\n| FreizügG.EU                             |       35 |      5 |      40 |\n:::\n:::\n\n\n\n## plot by *[status]* with `plotly`\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"show the code\"}\nfrom plotly import graph_objects as go\n\n\nfig = go.Figure()\n\nfig.add_trace(go.Funnel(\n    name = 'Male',\n    y = list(labels),\n    x = list(male),\n    textinfo = \"value\"))\n\nfig.add_trace(go.Funnel(\n    name = 'Female',\n    orientation = \"h\",\n    y = list(labels),\n    x = list(female),\n    textposition = \"inside\",\n    textinfo = \"value\"))\n    \nfig.update_layout(\n    title='<b>Usbeken in Deutschland nach Aufenthaltsstatus bei Geschlecht</b>',\n    title_font=dict(size=18,\n                    color='blue',\n                    family='Arial'),\n    title_x=0.50,  # Title aligned with grid\n    title_y=0.93   # Title positioned near the top vertically\n)\n#fig.show()\nprint(fig)\n\n#fig.write_image(\"gallery/plots/fig1.png\")\n#plotly.offline.plot(fig, filename='gallery/plots/fig1.png', image='png')\n```\n:::\n\n\n![](plots/funnel2.png)\n\n\n### group by *[bundesland]*\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"show the code\"}\nimport numpy as np\nimport pandas as pd\nfrom IPython.display import display, Markdown, HTML\n\n# load R data\ndf_bl_r = pd.DataFrame(r.group_bl)\n\n# pivot wide\ndata_bl = df_bl_r.pivot(index = \"bundesland\", columns = \"geschlecht\", values = \"cnt\").reset_index()\nsum_bl = np.abs(data_bl.female + data_bl.male)\ndata_bl[\"summa\"] = sum_bl\n\ndf_bl = data_bl.copy()\ndf_bl = df_bl.sort_values(\n    \"summa\",\n    ascending=False,\n    inplace=False,\n    ignore_index=False,\n    key=None\n)\n\n# vars for plot\nfem = df_bl.female\nmal = df_bl.male\nlab = df_bl.bundesland\n\n\nMarkdown(df_bl.to_markdown(index = False))\n```\n\n::: {.cell-output-display}\n| bundesland             |   female |   male |   summa |\n|:-----------------------|---------:|-------:|--------:|\n| Nordrhein-Westfalen    |     1595 |   1650 |    3245 |\n| Bayern                 |     1430 |   1510 |    2940 |\n| Baden-Württemberg      |     1005 |    955 |    1960 |\n| Hessen                 |      760 |    745 |    1505 |\n| Berlin                 |      645 |    665 |    1310 |\n| Niedersachsen          |      530 |    585 |    1115 |\n| Sachsen                |      300 |    350 |     650 |\n| Sachsen-Anhalt         |      145 |    400 |     545 |\n| Hamburg                |      245 |    255 |     500 |\n| Rheinland-Pfalz        |      260 |    205 |     465 |\n| Brandenburg            |      190 |    265 |     455 |\n| Schleswig-Holstein     |      230 |    215 |     445 |\n| Thüringen              |      115 |    195 |     310 |\n| Bremen                 |      150 |    155 |     305 |\n| Saarland               |       85 |     80 |     165 |\n| Mecklenburg-Vorpommern |       75 |     80 |     155 |\n:::\n:::\n\n\n## plot by *[bundesland]* with `plotly`\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"show the code\"}\nfrom plotly import graph_objects as go\nimport plotly.io as pio\n#import plotly\n# import plotly.io as pio\n# png_renderer = pio.renderers[\"png\"]\n# png_renderer.width = 500\n# png_renderer.height = 500\n# \n# pio.renderers.default = \"png\"\n\n\nfig_bl = go.Figure()\n\nfig_bl.add_trace(go.Funnel(\n    name = 'male',\n    y = list(lab),\n    x = list(mal),\n    textinfo = \"value\"))\n\nfig_bl.add_trace(go.Funnel(\n    name = 'memale',\n    orientation = \"h\",\n    y = list(lab),\n    x = list(fem),\n    textposition = \"inside\",\n    textinfo = \"value\"))\n    \nfig_bl.update_layout(\n    title='<b>Usbeken in Deutschland in Bundesländern nach Geschlecht</b>',\n    title_font=dict(size=18,\n                    color='blue',\n                    family='Arial'),\n    title_x=0.50,  # Title aligned with grid\n    title_y=0.93   # Title positioned near the top vertically\n)\n# # show as static img\n# fig_bl.show(renderer=\"png\")\n# # write as image\n# pio.write_image(fig_bl, \"C:/Users/sultanov/Documents/blog/gallery/plots/figname.png\") \n```\n:::\n\n\n\n\n![](plots/funnel1.png)\n\n<!-- ```{python} -->\n\n<!-- from IPython.display import Image -->\n<!-- import plotly.io as pio -->\n\n<!-- # img_bytes = fig_bl.to_image(format=\"png\") -->\n<!-- # Image(img_bytes) -->\n<!-- fig_bl.show(renderer=\"png\") -->\n<!-- ``` -->\n\n\n\n<!-- test -->\n\n<!-- ```{python} -->\n\n<!-- # import plotly.io as pio -->\n<!-- # pio.write_image(fig, \"C:/Users/sultanov/ocuments/blog/gallery/plots/funnel1.png\")  -->\n\n<!-- from IPython.display import display, Image -->\n<!-- display(Image(filename=\"C:/Users/sultanov/Documents/blog/gallery/plots/funnel1.png\")) -->\n\n<!-- ``` -->\n\n\n\n\n",
    "supporting": [
      "usbekeninde_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}