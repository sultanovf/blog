{
  "hash": "14e04ca86c44d94872fcfc567e0cef71",
  "result": {
    "markdown": "---\ntitle: \"gganimate\"\ndescription: \"`gganimate` extends the grammar of graphics as implemented by ggplot2 to animate of plots.\"\nauthor: \"Fazliddin Sultonov\"\ndate: \"2024-07-01\"\ndate-format: \"MMM D, YYYY\"\n\nfilters:\n  - lightbox\nlightbox: \n  match: auto\n  effect: none\n  desc-position: top\n\npage-layout: full\nreference-location: margin\ncategories: [gganimate, R, ggplot2]\n# Code execute options\nexecute: \n  echo: true    # Input anzeigen\n  eval: true    # Code ausfÃ¼hren\n  freeze: true  # never re-render during project render\n# Output\nformat: \n  html:\n    theme: cosmo\n    link-external-newwindow: true\n  # codeb block\n    code-fold: true\n    code-line-numbers: true\n    code-block-border-left: true\n  # engine\n    engine: knitr\n    css: /customs/style.css\n\n# Chunk Options\nknitr:\n  opts_chunk:\n    comment: \"#>\" \n\n  opts_knit: \n    warning: false\n    error: false\n    \n---\n\n\n![](gallery_img/gganimate.png)\n\n\n::: {.cell}\n\n:::\n\n\n## Load data from GitHub\n\nData Source: [worldbank](https://www.worldbank.org/en/home)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv2(\"https://raw.githubusercontent.com/sultanovf/my_datasets/main/GDP_PerCapita_PPP_19902023.csv\")\nyears <- paste(1990:2023) #, sep=\",\", collapse= \",\"\nyears <- unlist(strsplit(years, \",\"))\nnew_cnames <- c(\"CountryName\", \"CountryCode\",  years)\ncolnames(df) <- new_cnames\n# Country names to plotting\ncountries <- c(\"UAE\", \"Brazil\", \"Switzerland\", \"Germany\", \"France\", \"UK\", \"Indonesia\",\n               \"India\", \"Iran\", \"Iraq\", \"Italy\", \"Kyrgyzstan\", \"Russia\", \"Singapore\", \n               \"Sweden\", \"Tajikistan\", \"Turkiye\", \"USA\", \"Uzbekistan\", \"Kazakhstan\")\n\n# Change some country names\ndf <- df |> \n  rowwise() |> \n  mutate(\n    CountryName = case_when(\n      CountryName == \"United Arab Emirates\" ~ \"UAE\",\n      CountryName == \"Kyrgyz Republic\" ~ \"Kyrgyzstan\",\n      CountryName == \"Iran, Islamic Rep.\" ~ \"Iran\",\n      CountryName == \"Russian Federation\" ~ \"Russia\",\n      CountryName == \"United Kingdom\" ~ \"UK\",\n      CountryName == \"United States\" ~ \"USA\",\n      TRUE ~ CountryName\n    )\n  ) |> \n  filter(\n    CountryName %in% countries\n  )\n\ndf |> \n  kable() \n```\n\n::: {.cell-output-display}\n|CountryName |CountryCode |       1990|       1991|       1992|      1993|      1994|       1995|       1996|       1997|      1998|      1999|      2000|      2001|      2002|      2003|       2004|      2005|      2006|      2007|      2008|      2009|      2010|      2011|       2012|       2013|       2014|       2015|       2016|       2017|       2018|       2019|       2020|       2021|       2022|       2023|\n|:-----------|:-----------|----------:|----------:|----------:|---------:|---------:|----------:|----------:|----------:|---------:|---------:|---------:|---------:|---------:|---------:|----------:|---------:|---------:|---------:|---------:|---------:|---------:|---------:|----------:|----------:|----------:|----------:|----------:|----------:|----------:|----------:|----------:|----------:|----------:|----------:|\n|UAE         |ARE         | 107947.231| 103008.343| 101028.779| 97376.972| 99366.342| 101440.164| 101534.220| 102914.569| 97031.243| 94160.130| 98713.836| 94911.819| 92419.937| 95812.716| 100249.397| 98053.513| 94114.002| 81010.145| 70245.981| 58202.031| 55724.728| 58543.735|  58994.310|  61361.570|  63309.311|  66992.240|  70109.728|  70048.504|  70410.822|  70638.733|  66590.396|  68912.546|  73724.307|  75627.055|\n|Brazil      |BRA         |  12502.248|  12414.645|  12144.008| 12537.786| 13062.236|  13402.910|  13490.901|  13741.203| 13586.691| 13457.775| 13857.593| 13865.859| 14109.932| 14102.695|  14746.030| 15049.145| 15477.739| 16248.659| 16908.634| 16727.164| 17818.246| 18355.181|  18540.137|  18932.123|  18865.006|  18042.809|  17310.736|  17401.323|  17571.671|  17650.441|  16958.896|  17672.917|  18122.575|  18554.105|\n|Switzerland |CHE         |  64588.954|  63202.559|  62482.227| 61837.771| 62125.742|  62008.727|  62026.425|  63276.433| 65000.263| 65766.620| 67987.005| 68622.649| 68055.633| 67530.698|  68880.050| 70322.114| 72728.924| 74904.844| 76035.870| 73366.586| 74961.310| 75476.549|  75560.024|  76034.813|  76877.806|  77257.682|  77999.458|  78328.090|  79977.307|  80315.683|  78023.346|  81603.207|  83019.840|  82914.289|\n|Germany     |DEU         |  42571.880|  44421.722|  44933.036| 44202.567| 45103.130|  45665.179|  45900.098|  46654.390| 47586.771| 48453.529| 49797.253| 50549.470| 50364.646| 49984.354|  50582.695| 50981.750| 52987.174| 54637.325| 55266.763| 52252.195| 54519.734| 57719.844|  57852.693|  57947.496|  58981.478|  59345.456|  60181.100|  61563.584|  61981.116|  62506.582|  60065.510|  61939.652|  62605.473|  61909.027|\n|France      |FRA         |  40540.141|  40606.281|  41050.757| 40615.850| 41418.578|  42137.647|  42580.819|  43420.563| 44812.259| 46106.750| 47587.876| 48179.168| 48372.458| 48425.379|  49430.992| 49877.691| 50746.104| 51657.116| 51500.862| 49765.078| 50485.799| 51344.365|  51256.484|  51286.289|  51534.804|  51923.389|  52353.863|  53398.322|  54199.585|  55010.356|  50724.494|  53834.799|  54988.335|  55213.716|\n|UK          |GBR         |  35551.827|  35051.085|  35096.628| 35884.340| 37169.705|  38010.032|  38892.303|  40702.755| 41969.976| 43112.868| 44814.387| 45793.400| 46417.094| 47655.222|  48534.653| 49522.742| 50333.154| 51251.415| 50734.851| 48028.797| 48720.596| 48894.882|  49290.692|  49839.226|  51054.593|  51776.249|  52372.478|  53398.990|  53821.490|  54397.291|  48583.761|  52841.635|  54515.750|  54126.136|\n|Indonesia   |IDN         |   4915.194|   5157.596|   5399.577|  5655.019|  5981.845|   6368.624|   6756.273|   6961.315|  5953.619|  5911.378|  6113.116|  6247.131|  6439.166|  6657.305|   6903.764|  7205.349|  7503.581|  7875.687|  8241.290|  8513.822|  8931.231|  9363.941|   9804.674|  10224.782|  10612.929|  11007.491|  11439.722|  11899.327|  12394.694|  12895.333|  12523.290|  12897.103|  13495.427|  14072.854|\n|India       |IND         |   2189.277|   2166.397|   2238.253|  2297.063|  2401.008|   2531.933|   2670.458|   2725.787|  2840.240|  3034.835|  3094.498|  3185.641|  3248.586|  3444.038|   3655.248|  3882.093|  4131.558|  4383.319|  4454.802|  4738.649|  5070.978|  5264.592|   5478.378|   5753.097|   6103.241|   6513.444|   6968.147|   7356.156|   7746.210|   7964.024|   7432.547|   8087.994|   8594.432|   9172.096|\n|Iran        |IRN         |   9465.963|  10265.399|  10357.278| 10139.442|  9928.976|  10032.067|  10529.974|  10521.491| 10574.332| 10616.583| 11053.795| 11126.321| 11908.698| 12818.044|  13159.552| 13362.434| 13815.340| 14726.455| 14562.244| 14510.186| 15137.384| 15340.635|  14578.373|  14148.905|  14575.037|  14046.048|  15006.191|  15201.377|  14728.083|  14119.728|  14468.611|  15042.374|  15499.912|  16153.987|\n|Iraq        |IRQ         |  10688.177|   3802.229|   4893.582|  6075.104|  6012.549|   5934.620|   6378.428|   7493.632|  9788.885| 11139.266| 12596.863| 12417.033| 11038.812|  6782.056|  10107.409|  9975.702| 10463.516| 10751.840| 11414.486| 11383.101| 11733.876| 12185.504|  13274.341|  13635.745|  13192.390|  13445.408|  14927.498|  14314.356|  14340.461|  14777.010|  12694.894|  12596.526|  13265.575|  12590.804|\n|Italy       |ITA         |  42895.539|  43525.321|  43858.641| 43458.036| 44383.786|  45664.348|  46229.822|  47051.026| 47889.158| 48659.519| 50479.359| 51435.501| 51489.385| 51332.080|  51726.987| 51894.404| 52665.118| 53179.088| 52319.746| 49331.499| 50022.592| 50289.856|  48659.429|  47213.074|  46779.746|  47189.292|  47880.941|  48752.534|  49297.498|  50110.169|  45835.908|  49901.612|  52060.333|  52699.946|\n|Kazakhstan  |KAZ         |  17667.889|  15625.295|  14808.511| 13494.084| 11965.419|  11213.106|  11441.350|  11820.867| 11798.445| 12233.288| 13472.535| 15317.355| 16817.762| 18320.079|  19939.761| 21680.343| 23747.635| 25567.046| 25920.699| 25716.847| 27206.939| 28804.941|  29765.314|  31100.323|  31932.792|  31847.127|  31742.823|  32597.794|  33491.149|  34549.808|  33251.432|  33893.895|  34188.206|  35452.970|\n|Kyrgyzstan  |KGZ         |   6095.731|   5520.472|   4701.991|  3973.951|  3176.902|   2974.747|   3138.692|   3399.949|  3419.234|  3491.954|  3638.435|  3795.870|  3760.535|  3982.934|   4211.533|  4156.991|  4240.148|  4558.700|  4894.969|  4975.817|  4893.629|  5122.392|   5033.358|   5473.061|   5580.224|   5678.372|   5805.103|   5963.819|   6065.992|   6213.962|   5661.258|   5802.389|   6140.060|   6402.196|\n|Russia      |RUS         |  29945.146|  28352.436|  24209.033| 22122.291| 19348.201|  18550.520|  17879.922|  18160.229| 17226.227| 18385.465| 20309.268| 21435.766| 22546.727| 24302.658|  26157.557| 27937.998| 30328.078| 32962.301| 34691.574| 31976.006| 33399.926| 34795.035|  36104.273|  36628.922|  36217.965|  35393.570|  35361.547|  35932.234|  36908.367|  37698.953|  36746.375|  38938.496|  38263.617|  39753.457|\n|Singapore   |SGP         |  45371.007|  47047.639|  48686.646| 52910.361| 56966.024|  59226.760|  61116.677|  64013.562| 60519.711| 63471.191| 68019.530| 65500.313| 67451.718| 71567.133|  77702.015| 81487.730| 86090.436| 90027.340| 86952.463| 84477.125| 95043.964| 98867.945| 100750.848| 103908.359| 106604.493| 108483.210| 110927.693| 115831.111| 119343.145| 119572.277| 115304.149| 131864.092| 132468.930| 127543.555|\n|Sweden      |SWE         |  39968.156|  39241.729|  38560.245| 37545.027| 38744.199|  40058.119|  40626.113|  41849.577| 43629.836| 45447.446| 47537.235| 48096.987| 48993.935| 49939.435|  51900.710| 53171.368| 55338.482| 56818.787| 56123.854| 53232.767| 55922.447| 57275.205|  56518.598|  56707.362|  57639.769|  59593.859|  60068.313|  60786.218|  61255.839|  61842.401|  60064.628|  63375.045|  64621.545|  64190.618|\n|Tajikistan  |TJK         |   4158.341|   3766.842|   2627.221|  2172.695|  1684.520|   1447.389|   1181.818|   1185.676|  1240.611|  1279.699|  1367.788|  1467.071|  1592.480|  1733.018|   1875.344|  1964.045|  2063.332|  2183.745|  2312.435|  2356.306|  2459.030|  2585.687|   2719.677|   2856.234|   2978.154|   3084.182|   3220.943|   3372.252|   3548.005|   3725.314|   3805.192|   4074.560|   4310.893|   4580.899|\n|Turkiye     |TUR         |  12502.476|  12365.579|  12761.989| 13500.109| 12646.047|  13413.395|  14167.170|  14996.063| 15118.558| 14406.848| 15182.738| 14098.956| 14799.542| 15446.791|  16730.326| 17990.689| 18992.817| 19792.391| 19702.761| 18495.404| 19751.627| 21643.806|  22392.944|  23983.138|  24830.581|  25992.303|  26497.141|  28117.960|  28575.772|  28400.712|  28649.555|  31637.531|  33061.061|  34414.231|\n|USA         |USA         |  44395.131|  43758.395|  44675.864| 45303.883| 46554.772|  47238.629|  48453.826|  50002.975| 51639.187| 53494.057| 55059.219| 55037.894| 55456.862| 56519.351|  58153.388| 59627.059| 60699.272| 61329.539| 60821.186| 58736.946| 59821.665| 60317.543|  61247.317|  62112.583|  63214.895|  64599.574|  65299.999|  66482.893|  68095.687|  69458.610|  67266.188|  71055.876|  72165.483|  73637.303|\n|Uzbekistan  |UZB         |   3807.605|   3708.942|   3217.225|  3072.606|  2856.206|   2779.816|   2773.513|   2863.245|  2938.684|  3032.186|  3105.204|  3193.810|  3280.323|  3379.610|   3589.700|  3794.780|  4028.093|  4347.348|  4664.394|  4955.594|  5183.667|  5426.135|   5726.598|   6049.218|   6356.887|   6697.923|   6972.944|   7157.900|   7448.261|   7747.040|   7751.210|   8162.196|   8447.550|   8765.549|\n:::\n:::\n\n\n## Pivot table\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf_pivot <- df |> \n  pivot_longer(\n    cols = !c(CountryName, CountryCode),\n    names_to = \"Years\",\n    values_to = \"GDPperCap\") |> \n  select(-CountryCode) |> \n  group_by(Years, CountryName ) |> \n  mutate(\n    Years = as.integer(Years),\n    GDPperCap = round(GDPperCap, 2)\n  )\n#\ndf_pivot |> \n  as.tibble() |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 6 Ã 3\n#>   CountryName Years GDPperCap\n#>   <chr>       <int>     <dbl>\n#> 1 UAE          1990   107947.\n#> 2 UAE          1991   103008.\n#> 3 UAE          1992   101029.\n#> 4 UAE          1993    97377.\n#> 5 UAE          1994    99366.\n#> 6 UAE          1995   101440.\n```\n:::\n:::\n\n\n## Barplot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nplt <- df_pivot |> \n  ggplot(aes(x = CountryName, y = GDPperCap, fill = CountryName))+\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  labs(\n    x = \"Countries\", \n    y = \"GDP per Capita,*(in US Dollar)*\")+\n  theme(\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10),\n    axis.title.x = element_markdown(color= \"blue\", size = 10),\n    axis.title.y = element_markdown(color= \"blue\", size = 10)\n    ) +\n  theme(legend.position=\"none\")\n  #guides(fill = FALSE)\nplt\n```\n\n::: {.cell-output-display}\n![](gganimate_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Animate Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nplt_animat = plt +\n  geom_text(aes(label = GDPperCap),colour =  \"darkgray\", vjust=0)+\n  transition_time(Years) +\n  labs(title = \"Year: {frame_time}\") +\n  theme(\n    title = element_markdown(colour =  \"gray\", size = 20)\n  ) +\n  view_step(\n    pause_length = 1,\n    step_length = 1,\n    nsteps = 33,\n    include = TRUE\n  )\nplt_animat\n```\n\n::: {.cell-output-display}\n![](gganimate_files/figure-html/unnamed-chunk-5-1.gif)\n:::\n:::\n\n\n\n\n\n<!-- ```{r} -->\n<!-- #| results: hold -->\n\n<!-- plt <- gapminder |>  -->\n<!--   ggplot -->\n<!-- ``` -->\n\n\n<!-- ## Pivot table and create new total columns -->\n\n<!-- ```{r} -->\n<!-- #| results: hold  -->\n\n<!-- df |>  -->\n<!--   pivot_longer( -->\n<!--     cols = !c(region, status, area), -->\n<!--     names_to = \"year\", -->\n<!--     values_to = \"counts\" -->\n<!--   ) |>  -->\n<!--   pivot_wider( -->\n<!--     names_from = c(status, area), -->\n<!--     values_from = counts -->\n<!--   ) |>  -->\n<!--   rowwise() |>  -->\n<!--   mutate( -->\n<!--     marriage_total = sum(marriage_city, marriage_village), -->\n<!--     divorce_total = sum(divorce_city, divorce_village) -->\n<!--   ) -> gt_df -->\n\n<!-- gt_df |>  -->\n<!--   kable() |>  -->\n<!--   head() -->\n<!-- ``` -->\n\n<!-- ## Creating beautiful table with `{gt}` -->\n\n<!-- ```{r} -->\n<!-- #| echo: false           # R-Input NICHT anzeigen       -->\n<!-- #| output: true          # R-Output NICHT anzeigen  -->\n<!-- #| eval: true            # R-Code ausfÃ¼hren  -->\n\n<!-- gt_df |> -->\n<!--   #filter(year %in% c(\"2021\",\"2022\", \"2023\")) |>  -->\n<!--   filter(year == \"2023\") |>  -->\n<!--   select(-year) |>  -->\n<!--   # mutate( -->\n<!--   #   year = as.numeric(year) -->\n<!--   # ) |>  -->\n<!--   # gt( -->\n<!--   #   groupname_col = \"region\", rowname_col = \"year\" -->\n<!--   # ) |> -->\n<!--   gt() |>  -->\n<!--   tab_header( -->\n<!--     title = md(\"**Number of concluded broken and marriages**\"), -->\n<!--     subtitle = md(\"*recorded for 2023 in regions by areas(city, village)*\") -->\n<!--   ) |> -->\n<!--   fmt_number( -->\n<!--     columns = !\"region\", -->\n<!--     sep_mark = \",\", -->\n<!--     decimals = 0 -->\n<!--   ) |>  -->\n<!--   cols_label( -->\n<!--     region = \"Region\", -->\n<!--     marriage_city = \"city\", -->\n<!--     marriage_village = \"village\", -->\n<!--     marriage_total = \"total\", -->\n<!--     divorce_city = \"city\", -->\n<!--     divorce_village = \"village\", -->\n<!--     divorce_total = \"total\" -->\n<!--   ) |>  -->\n<!--   tab_spanner( -->\n<!--     label = md(\"**concluded**\"), -->\n<!--     columns = c(marriage_city, marriage_village, marriage_total) -->\n<!--   ) |> -->\n<!--   tab_spanner( -->\n<!--     label = md(\"**broken**\"), -->\n<!--     columns = c(divorce_city, divorce_village, divorce_total) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color = \"#13ff3b\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = marriage_city, -->\n<!--       rows = marriage_city >= mar_cit_med  -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color =  \"#fde642\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = marriage_city, -->\n<!--       rows = marriage_city < mar_cit_med -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color = \"#13ff3b\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = marriage_village, -->\n<!--       rows = marriage_village >= mar_vil_med  -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = list( -->\n<!--       cell_fill(color = \"#9fc7e1\"), -->\n<!--       cell_text(weight = \"bold\") -->\n<!--       ), -->\n<!--     locations = cells_body(columns = marriage_total) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color =  \"#fde642\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = marriage_village, -->\n<!--       rows = marriage_village < mar_vil_med -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color = \"#a5e39f\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = divorce_city, -->\n<!--       rows = divorce_city <= div_cit_med  -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color =  \"#f4a68a\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = divorce_city, -->\n<!--       rows = divorce_city > div_cit_med -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color = \"#a5e39f\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = divorce_village, -->\n<!--       rows = divorce_village <= div_vil_med  -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = cell_fill(color =  \"#f4a68a\"), -->\n<!--     locations = cells_body( -->\n<!--       columns = divorce_village, -->\n<!--       rows = divorce_village > div_vil_med -->\n<!--     ) -->\n<!--   ) |>  -->\n<!--   tab_style( -->\n<!--     style = list( -->\n<!--       cell_fill(color = \"#9fc7e1\"), -->\n<!--       cell_text(weight = \"bold\") -->\n<!--       ), -->\n<!--     locations = cells_body(columns = divorce_total) -->\n<!--   ) -->\n<!-- ``` -->\n\n<!-- ::: {.callout-note appearance=\"minimal\"} -->\n\n\n<!-- [**Explanation:**]{.underline} The table shows the number of new families registered in the Republic of Uzbekistan for the year 2023 (column *concluded*) and divorces (column *broken*) in each region by areas (city and village). -->\n<!-- <br> ***Colors:*** <br>*For concluded columns* -- [green]{style=\"background-color:#13ff3b;\"} - if values greater or equal to the median, [orange]{style=\"background-color:#fde642;\"} - if they are less the mean. <br>*For broken columns* -- [red]{style=\"background-color:#f4a68a;\"} - if the values are greather or equal to median, [green]{style=\"background-color:#a5e39f;\"} - if they are less then median. For total columns - [blue]{style=\"background-color:#9fc7e1;\"}. -->\n<!-- <br> ***Data source:*** Data from [Statistics Agency of the Republic of Uzbekistan](https://stat.uz/uz/){target=\"_blank\"}  -->\n<!-- ::: -->\n",
    "supporting": [
      "gganimate_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}