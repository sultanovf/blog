{
  "hash": "5a2e215e3f4dd59fe2c8c302790cb6c4",
  "result": {
    "markdown": "---\ntitle: \"plotting via `ggimage`\"\ndescription: \"`geom_flags` from package **ggimage** enables using flags in ggplot2\"\nauthor: \"Fazliddin Sultonov\"\ndate: \"2024-11-16\"\ndate-format: \"MMM D, YYYY\"\n\nfilters:\n  - lightbox\n  - social-share\nlightbox: \n  match: auto\n  effect: none\n  desc-position: top\n  \nsocial-share:\n  location: \"after-body\"\n\npage-layout: full\nreference-location: margin\ncategories: [geom_flag, R, ggplot2, ggimage]\n# Code execute options\nexecute: \n  echo: true    # Input anzeigen\n  eval: true    # Code ausführen\n  freeze: true  # never re-render during project render\n# Output\nformat: \n  html:\n    theme: cosmo\n    link-external-newwindow: true\n  # codeb block\n    code-fold: true\n    code-line-numbers: true\n    code-block-border-left: true\n  # engine\n    engine: knitr\n    css: /customs/style.css\n    \nshare:\n  permalink: \"https://sultanov.quarto.pub/blog/gallery/ggimg.html\"\n  description: \"awesome plot\"\n  twitter: true\n  facebook: true\n  reddit: true\n  linkedin: true\n  email: true\n  instagram: true\n  xing: true\n\n# Chunk Options\nknitr:\n  opts_chunk:\n    comment: \"#>\" \n\n  opts_knit: \n    warning: false\n    error: false\n    \n---\n\n\n![](gallery_img/gg_flag.png)\n\n\n::: {.cell}\n\n:::\n\n\n\nData Source: [Wikipedia](https://en.wikipedia.org/wiki/2024_Summer_Olympics_medal_table)\n\n\n## Load & Clean Data\n\n### Wikipediadan jadvaln o'qib olish\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# load table from web\nurl_medal <- \"https://en.wikipedia.org/wiki/2024_Summer_Olympics_medal_table\"\npage_medal <- read_html(url_medal)\n\n# scrape table\npage_medal |> \n  html_nodes(\"table\") |> \n  html_table() -> lst_parij24\n\ndf_par24 <- lst_parij24[[4]]\n\nhead(df_par24) |> \n  kable()\n```\n\n::: {.cell-output-display}\n|Rank |NOC            | Gold| Silver| Bronze|Total |\n|:----|:--------------|----:|------:|------:|:-----|\n|1    |United States‡ |   40|     44|     42|126   |\n|2    |China          |   40|     27|     24|91    |\n|3    |Japan          |   20|     12|     13|45    |\n|4    |Australia      |   18|     19|     16|53    |\n|5    |France*        |   16|     26|     22|64    |\n|6    |Netherlands    |   15|      7|     12|34    |\n:::\n:::\n\n\n### Jadvalga ishlov berish <br>\n(Ustun nomlarini o'zgartirib davlat nomlaridagi kerakmas string larni olib tashlash)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf <- df_par24 |> \n  select(\n    Numer = Rank,\n    Davlat = NOC,\n    Oltin = Gold,\n    Kumush = Silver,\n    Bronza = Bronze,\n    Jami = Total\n  ) |> \n  mutate(\n    Davlat = str_remove(Davlat, \"[‡*]\")\n  ) \n\ndf <- df[-c(47,84, 93), ]\n\nhead(df) |> \n  kable()\n```\n\n::: {.cell-output-display}\n|Numer |Davlat        | Oltin| Kumush| Bronza|Jami |\n|:-----|:-------------|-----:|------:|------:|:----|\n|1     |United States |    40|     44|     42|126  |\n|2     |China         |    40|     27|     24|91   |\n|3     |Japan         |    20|     12|     13|45   |\n|4     |Australia     |    18|     19|     16|53   |\n|5     |France        |    16|     26|     22|64   |\n|6     |Netherlands   |    15|      7|     12|34   |\n:::\n:::\n\n\n### Mapping <br>\n(jadvalga `countycode` paketidagi isocodi ustunini qo'shish)\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# usul #1\n# df$cc <- countrycode::countrycode(\n#   sourcevar = df$Davlat, \n#   origin = \"country.name\",\n#   destination = \"iso2c\")\n\n# usul #2 dplyr\ndata <- df |> \n  slice_head(n = 20) |> \n  mutate(\n    cc = countrycode::countrycode(\n      sourcevar = Davlat,\n      origin = \"country.name.en\",\n      destination = \"iso2c\")\n      ) |> \n  select(-Numer)\n\nhead(data) |> \n  kable()\n```\n\n::: {.cell-output-display}\n|Davlat        | Oltin| Kumush| Bronza|Jami |cc |\n|:-------------|-----:|------:|------:|:----|:--|\n|United States |    40|     44|     42|126  |US |\n|China         |    40|     27|     24|91   |CN |\n|Japan         |    20|     12|     13|45   |JP |\n|Australia     |    18|     19|     16|53   |AU |\n|France        |    16|     26|     22|64   |FR |\n|Netherlands   |    15|      7|     12|34   |NL |\n:::\n:::\n\n\n### Preparing <br>\nJadvalni grafik yasash holatiga ob kelish\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# povot data\npv_data <- data |>\n  mutate(\n    cc = base::tolower(cc)\n  ) |> \n  pivot_longer(\n    cols = c(\"Oltin\", \"Kumush\", \"Bronza\"),\n    names_to = \"Medal\",\n    values_to = \"Count\"\n  )\n\n# Grafikda umumiy medallar sonini kursatisch uchun\ndf_plt <- pv_data |> \n  group_by(Davlat) |> \n  summarise(Total = sum(Count)) |> \n  ungroup()\n\ndf_plt |> \n  kable()\n```\n\n::: {.cell-output-display}\n|Davlat        | Total|\n|:-------------|-----:|\n|Australia     |    53|\n|Brazil        |    20|\n|Canada        |    27|\n|China         |    91|\n|France        |    64|\n|Germany       |    33|\n|Great Britain |    65|\n|Hungary       |    19|\n|Ireland       |     7|\n|Italy         |    40|\n|Japan         |    45|\n|Kenya         |    11|\n|Netherlands   |    34|\n|New Zealand   |    20|\n|Norway        |     8|\n|South Korea   |    32|\n|Spain         |    18|\n|Sweden        |    11|\n|United States |   126|\n|Uzbekistan    |    13|\n:::\n:::\n\n\n## Plotting\n\n### Create Plot <br>\n(grafik yasash)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmy_color <- c(\"Oltin\" = \"gold\", \"Bronza\" = \"#cd7f32\", \"Kumush\" = \"#C0C0C0\")\nplt <- ggplot(\n  data = pv_data, aes(\n    x = reorder(Davlat, Count), \n    y = Count, \n    fill = Medal, \n    label = Count)) +\n  geom_bar(stat = \"identity\") +\n  #scale_y_continuous(limits = c(0,130),breaks = seq(0, 130, 10)) +\n  geom_text(size = 2.7, colour = \"blue\",               # balken ichidagi text\n            position = position_stack(vjust = 0.5))+\n  geom_text(data = df_plt,                             # tashqaridagi text\n            aes(x = reorder(Davlat, Total), \n                y = Total, label = paste(\"= \", Total), \n                fill = NULL), \n            size = 3.0, family = \"serif\", fontface = \"bold\",\n            nudge_y = 5)+\n  scale_fill_manual(values = my_color) +  \n  coord_flip() +                                        # rotatsya axis\n  expand_limits(y = -3) +\n  theme_minimal()\nplt\n```\n\n::: {.cell-output-display}\n![](geom_flag_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# to save as png\n# ggsave(\"plots/p_prefinal.png\", plot = plt)\n```\n:::\n\n\n### Improving <br>\n(Grafikka jilov berish, sarlavha, text. rang, etc.)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nplt + \n  labs(title = \"Parij 2024:\",\n       subtitle = \"Medallar bo'yicha top yigirmata davlatlar\",\n       caption = \"Data Source: Wikipedia, Plotting by ФС: @sultanof.uzb\",\n       x = \"\",\n       y = \"medallar soni\") +\n  theme(plot.title = element_text(color = \"dodgerblue4\", size = 12,\n                                  face = \"bold\", hjust = 0.5),\n        plot.subtitle = element_text(color = \"dodgerblue4\", size = 10,\n                                  face = \"bold\", hjust = 0.5),\n        plot.caption = element_text(color = \"dodgerblue\", size = 10,\n                                    face = \"italic\"),\n        plot.background = element_rect(fill = \"aliceblue\"),\n        legend.title = element_blank(),\n        legend.background = element_blank(),\n        legend.position = \"top\") +\n  ggimage::geom_flag(aes(y = -3, image = cc), size = 0.07) -> p_parij\np_parij\n```\n\n::: {.cell-output-display}\n![](geom_flag_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "geom_flag_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}