{
  "hash": "3033a4818d03a21230449d086e58d843",
  "result": {
    "markdown": "---\ntitle: \"lineplot via gganimate\"\ndescription: \"`gganimate` extends the grammar of graphics as implemented by ggplot2 to animate of plots.\"\nauthor: \"Fazliddin Sultonov\"\ndate: \"2024-10-18\"\ndate-format: \"MMM D, YYYY\"\n\nfilters:\n  - lightbox\nlightbox: \n  match: auto\n  effect: none\n  desc-position: top\n\npage-layout: full\nreference-location: margin\ncategories: [gganimate, R, ggplot2, lineplot]\n# Code execute options\nexecute: \n  echo: true    # Input anzeigen\n  eval: true    # Code ausführen\n  freeze: true  # never re-render during project render\n# Output\nformat: \n  html:\n    theme: cosmo\n    link-external-newwindow: true\n  # codeb block\n    code-fold: true\n    code-line-numbers: true\n    code-block-border-left: true\n  # engine\n    engine: knitr\n    css: /customs/style.css\n\n# Chunk Options\nknitr:\n  opts_chunk:\n    comment: \"#>\" \n\n  opts_knit: \n    warning: false\n    error: false\n    \n---\n\n\n![](gallery_img/gg_line.png)\n\n\n\n::: {.cell}\n\n:::\n\n\n## Load data from GitHub\n\nData Source: [United Nations, Department of Economic and Social Affairs, Population Division (2018). World Urbanization Prospects: The 2018](https://population.un.org/wup/Download/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv2(\"https://raw.githubusercontent.com/sultanovf/my_datasets/main/urban_population_19502025.csv\")\nyears <- paste(1950:2025) #, sep=\",\", collapse= \",\"\nyears <- unlist(strsplit(years, \",\"))\nnew_cnames <- c(\"country\",  years)\ncolnames(df) <- new_cnames\n# Country names to plotting\ncountries <- c(\"Afghanistan\", \"Uzbekistan\", \"Kazakhstan\", \"Kyrgyzstan\", \"Tajikistan\", \"Turkmenistan\",\"Russian Federation\")\n```\n:::\n\n\n#### Data for Urban Population\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_urban <- df\ndf_urban |> \n  sample_n(3, replace = FALSE) |> \n  kable() \n```\n\n::: {.cell-output-display}\n|country             | 1950| 1951| 1952| 1953| 1954| 1955| 1956| 1957| 1958| 1959| 1960| 1961| 1962| 1963| 1964| 1965| 1966| 1967| 1968| 1969| 1970| 1971| 1972| 1973| 1974| 1975| 1976| 1977| 1978| 1979| 1980| 1981| 1982| 1983| 1984| 1985| 1986| 1987| 1988| 1989| 1990| 1991| 1992| 1993| 1994| 1995| 1996| 1997| 1998| 1999| 2000| 2001| 2002| 2003| 2004| 2005| 2006| 2007| 2008| 2009| 2010| 2011| 2012| 2013| 2014| 2015| 2016| 2017| 2018| 2019| 2020| 2021| 2022| 2023| 2024| 2025|\n|:-------------------|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|\n|Estonia             | 49.7| 50.5| 51.3| 52.0| 52.8| 53.6| 54.4| 55.2| 56.0| 56.8| 57.5| 58.3| 59.1| 59.8| 60.6| 61.3| 62.1| 62.8| 63.6| 64.3| 64.9| 65.5| 66.0| 66.5| 67.1| 67.6| 68.1| 68.6| 69.1| 69.5| 69.7| 69.9| 70.1| 70.3| 70.6| 70.8| 71.0| 71.2| 71.4| 71.4| 71.2| 71.0| 70.9| 70.7| 70.5| 70.3| 70.1| 69.9| 69.7| 69.5| 69.4| 69.2| 69.1| 69.0| 68.9| 68.7| 68.6| 68.5| 68.4| 68.2| 68.1| 68.0| 68.0| 68.1| 68.3| 68.4| 68.6| 68.7| 68.9| 69.1| 69.2| 69.4| 69.6| 69.8| 70.0| 70.2|\n|Zimbabwe            | 10.6| 10.8| 11.0| 11.2| 11.4| 11.6| 11.8| 12.0| 12.2| 12.4| 12.6| 12.8| 13.1| 13.6| 14.1| 14.6| 15.2| 15.7| 16.3| 16.9| 17.4| 17.9| 18.4| 18.9| 19.4| 19.9| 20.4| 20.8| 21.3| 21.9| 22.4| 22.9| 23.4| 24.1| 24.7| 25.4| 26.1| 26.8| 27.5| 28.2| 29.0| 29.7| 30.5| 30.9| 31.3| 31.7| 32.1| 32.5| 32.9| 33.3| 33.8| 34.2| 34.6| 34.5| 34.3| 34.1| 33.9| 33.7| 33.6| 33.4| 33.2| 33.0| 32.8| 32.7| 32.5| 32.4| 32.3| 32.2| 32.2| 32.2| 32.2| 32.3| 32.4| 32.5| 32.7| 32.9|\n|Antigua and Barbuda | 30.1| 31.0| 32.0| 32.9| 33.9| 34.9| 35.9| 36.9| 37.9| 39.0| 39.7| 39.0| 38.4| 37.8| 37.2| 36.6| 36.0| 35.4| 34.8| 34.2| 33.8| 33.9| 34.0| 34.1| 34.1| 34.2| 34.3| 34.4| 34.5| 34.5| 34.6| 34.7| 34.8| 34.9| 34.9| 35.0| 35.1| 35.2| 35.3| 35.3| 35.4| 35.5| 35.1| 34.7| 34.3| 34.0| 33.6| 33.2| 32.9| 32.5| 32.1| 31.7| 31.1| 30.5| 29.8| 29.2| 28.6| 28.0| 27.4| 26.8| 26.2| 25.7| 25.5| 25.4| 25.2| 25.0| 24.8| 24.7| 24.6| 24.5| 24.4| 24.4| 24.3| 24.3| 24.3| 24.4|\n:::\n:::\n\n\n#### Data for Rural Population\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# new daf for rural, values = 100 - values\ndf_rural <- df # df rural\n\ndf_rural <-\n  df_rural|> \n  mutate_if(is.numeric, fun <- function(x) 100-x)\n# show\ndf_rural |> \n  sample_n(3, replace = FALSE) |> \n  kable()\n```\n\n::: {.cell-output-display}\n|country | 1950| 1951| 1952| 1953| 1954| 1955| 1956| 1957| 1958| 1959| 1960| 1961| 1962| 1963| 1964| 1965| 1966| 1967| 1968| 1969| 1970| 1971| 1972| 1973| 1974| 1975| 1976| 1977| 1978| 1979| 1980| 1981| 1982| 1983| 1984| 1985| 1986| 1987| 1988| 1989| 1990| 1991| 1992| 1993| 1994| 1995| 1996| 1997| 1998| 1999| 2000| 2001| 2002| 2003| 2004| 2005| 2006| 2007| 2008| 2009| 2010| 2011| 2012| 2013| 2014| 2015| 2016| 2017| 2018| 2019| 2020| 2021| 2022| 2023| 2024| 2025|\n|:-------|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|----:|\n|Germany | 32.1| 31.7| 31.4| 31.0| 30.7| 30.3| 30.0| 29.6| 29.3| 29.0| 28.6| 28.3| 28.2| 28.2| 28.1| 28.0| 28.0| 27.9| 27.9| 27.8| 27.7| 27.7| 27.6| 27.6| 27.5| 27.4| 27.4| 27.3| 27.3| 27.2| 27.2| 27.0| 26.9| 26.9| 27.1| 27.3| 27.4| 27.2| 27.0| 27.0| 26.9| 26.7| 26.6| 26.5| 26.3| 26.1| 25.9| 25.7| 25.4| 25.2| 25.0| 24.8| 24.6| 24.4| 24.2| 24.0| 23.8| 23.6| 23.4| 23.2| 23.0| 22.8| 22.8| 22.8| 22.8| 22.8| 22.8| 22.7| 22.7| 22.6| 22.5| 22.5| 22.4| 22.2| 22.1| 22.0|\n|Belize  | 44.7| 44.8| 45.0| 45.1| 45.2| 45.3| 45.4| 45.6| 45.7| 45.8| 46.0| 46.3| 46.6| 46.9| 47.2| 47.5| 47.8| 48.1| 48.5| 48.8| 49.0| 49.2| 49.4| 49.5| 49.7| 49.8| 50.0| 50.1| 50.3| 50.5| 50.6| 50.8| 51.0| 51.2| 51.4| 51.6| 51.8| 52.0| 52.2| 52.3| 52.5| 52.7| 52.9| 53.2| 53.4| 53.6| 53.8| 54.0| 54.2| 54.4| 54.6| 54.6| 54.6| 54.7| 54.7| 54.7| 54.7| 54.7| 54.7| 54.8| 54.8| 54.8| 54.8| 54.7| 54.7| 54.6| 54.5| 54.4| 54.3| 54.1| 54.0| 53.8| 53.6| 53.4| 53.2| 52.9|\n|Denmark | 32.0| 31.7| 31.4| 31.0| 30.7| 30.4| 29.6| 28.8| 28.0| 27.1| 26.3| 25.6| 24.9| 24.2| 23.6| 23.0| 22.4| 21.8| 21.3| 20.8| 20.3| 19.8| 19.3| 18.8| 18.3| 17.9| 17.4| 17.1| 16.8| 16.6| 16.3| 16.1| 16.0| 15.9| 15.8| 15.6| 15.5| 15.4| 15.3| 15.2| 15.2| 15.1| 15.1| 15.1| 15.0| 15.0| 15.0| 15.0| 14.9| 14.9| 14.9| 14.8| 14.8| 14.6| 14.4| 14.1| 13.9| 13.7| 13.5| 13.3| 13.2| 13.0| 12.9| 12.7| 12.6| 12.5| 12.4| 12.2| 12.1| 12.0| 11.9| 11.8| 11.6| 11.5| 11.4| 11.2|\n:::\n:::\n\n\n\n## Pivot table\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pivot tables\npv_urban <- \n  df_urban |> \n  pivot_longer(\n    cols = !country,\n    names_to = \"year\",\n    values_to = \"urban\"\n  )\n\npv_rural <- \n  df_rural |> \n  pivot_longer(\n    cols = !country,\n    names_to = \"year\",\n    values_to = \"rural\"\n  )\n\ndf_merge <- left_join(pv_urban, pv_rural, by = c(\"country\" ,\"year\"))\ndf_merge |> sample_n(6)\n# show\n# df_merge |> \n#   sample_n(size = 7, replace = FALSE) |> \n#   kable()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 6 × 4\n#>   country                          year  urban rural\n#>   <chr>                            <chr> <dbl> <dbl>\n#> 1 United Arab Emirates             1991   78.9  21.1\n#> 2 Armenia                          2003   64.1  35.9\n#> 3 Gambia                           2022   63.9  36.1\n#> 4 Qatar                            1967   87.6  12.4\n#> 5 Montenegro                       1970   26.9  73.1\n#> 6 Democratic Republic of the Congo 2009   39.5  60.5\n```\n:::\n:::\n\n\n## Prepare DataFrame for plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf_p <- df_merge |> \n  filter(\n    country %in% countries\n  ) |> \n  pivot_longer(\n  cols = c(urban, rural),\n  names_to = \"pop\",\n  values_to = \"pct\"\n  ) |> \n  mutate(year = as.integer(year)) # year must be integer for animated plotting(gganimate)\n  # arrange(desc(year))\n\ndf_p |> sample_n(6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 6 × 4\n#>   country       year pop     pct\n#>   <chr>        <int> <chr> <dbl>\n#> 1 Uzbekistan    1968 urban  36.1\n#> 2 Tajikistan    2007 rural  73.5\n#> 3 Turkmenistan  2015 urban  50.3\n#> 4 Tajikistan    1975 rural  64.5\n#> 5 Tajikistan    2023 urban  28.2\n#> 6 Kyrgyzstan    2019 urban  36.6\n```\n:::\n:::\n\n\n## Lineplot facetted by countries\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Create plot facetted by countries\ndf_p |> \n  filter(country != \"Russian Federation\") |> \n  ggplot(aes(x = year, y = pct, color = pop)) +\n  geom_line() +\n  geom_point() + \n  transition_reveal(year) +\n  scale_y_continuous(limits = c(0,100),breaks = seq(0, 100, 20),\n                     labels = function(x) paste0(x, \"%\"),\n                     ) +\n  scale_x_continuous(limits = c(1950, 2025), breaks = seq(1950, 2025, 15)) +\n  facet_wrap(~country) -> p_facetcountry\n# facet_wrap(~country, labeller = labeller(country = new_labels)) -> p_facetcountry\n\n# format plot\np_facetcountry <- p_facetcountry +\n  labs(title = \"Percentage of rural and urban population by selected countries\",\n       caption = \"Source: United Nations, Department of Economic and Social Affairs\",\n       x = \"Years, 1950 - 2025\",\n       y = \"Percentage of Population\") +\n  theme(plot.title = element_text(color = \"dodgerblue4\", size = 12, face = \"bold\", hjust = 0.5),\n        plot.caption = element_text(color = \"dodgerblue\", size = 8, face = \"italic\"),\n        plot.background = element_rect(fill = \"aliceblue\"), \n        legend.title = element_blank(),\n        legend.background = element_blank(),\n        legend.position = \"top\")\n\np_facetcountry\n\n# to save\n#gganimate::animate(p_facetcountry, renderer = gifski_renderer(), height=500, width=700)\n```\n\n::: {.cell-output-display}\n![](gganimate_line_files/figure-html/unnamed-chunk-7-1.gif)\n:::\n:::\n\n\n## Lineplot facetted by Population (urban & rural)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Create plot facetted by population\ndf_p |> \n  ggplot(aes(x = year, y = pct, color = country)) +\n  geom_line() +\n  geom_point() + \n  geom_text(aes(x = 2023, y = 96,\n                label = \"Made with \\U1F49F by ФС\"),\n            stat = \"unique\",\n            size = 2, color = \"red\") +\n  # annotate(\"text\", x=8, y=6, label= \"Made by ©СФ\") +\n  transition_reveal(year) +\n  scale_y_continuous(limits = c(0,100),breaks = seq(0, 100, 20),\n                     labels = function(x) paste0(x, \"%\"),\n  ) +\n  scale_x_continuous(limits = c(1950, 2025), breaks = seq(1950, 2025, 5)) +\n  facet_wrap(~pop, ncol = 1) -> p_facetpop\n\n# format plot\np_facetpop +\n  labs(title = \"Urban countries bei Percentage of Population (urban & rural)\",\n       caption = \"Source: United Nations, Department of Economic and Social Affairs\",\n       x = \"Years, 1950 - 2025\",\n       y = \"Percentage of Population\") +\n  theme(plot.title = element_text(color = \"dodgerblue4\", size = 12, face = \"bold\", hjust = 0.5),\n        plot.caption = element_text(color = \"dodgerblue\", size = 8, face = \"bold.italic\"),\n        plot.background = element_rect(fill = \"aliceblue\"), \n        legend.title = element_blank(),\n        legend.background = element_blank(),\n        legend.position = \"bottom\")\n\n# To save\n# animate(p_facetpop, renderer = gifski_renderer(), height=500, width=700)\n# anim_save(\"C:/Users/sultanov/Documents/temp/gifs/p_facetpop.gif\")\n```\n\n::: {.cell-output-display}\n![](gganimate_line_files/figure-html/unnamed-chunk-8-1.gif)\n:::\n:::\n\n\n## Lineplot for individual country (Uzbekistan)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Uzbekistan\ndf_p |> \n  filter(country == \"Uzbekistan\") |> \n  ggplot(aes(x = year, y = pct, color = pop)) +\n  geom_line() +\n  geom_point() + \n  geom_text(aes(x = 2022, y = 98,\n                label = \"Made with \\U1F49F by ФС\"),\n            stat = \"unique\",\n            size = 2.5, color = \"red\") +\n  transition_reveal(year) +\n  scale_y_continuous(limits = c(0,100),breaks = seq(0, 100, 10),\n                     labels = function(x) paste0(x, \"%\"),\n  ) +\n  # scale_x_continuous(limits = c(1950, 2025), breaks = seq(1950, 2025, 10),\n  #                    expand = expansion(c(0.02, 0.02))) +\n  scale_x_continuous(limits = c(1950, 2025), \n                     breaks = seq(1950, 2025, 5)) -> p_uz\n \n# format plot\np_uz <- p_uz +\n  labs(title = \"Percentage of rural and urband Population in Uzbekistan, 1950-2025\",\n       caption = \"Source: United Nations, Department of Economic and Social Affairs\",\n       x = \"Years, 1950 - 2025\",\n       y = \"Percentage of Population\") +\n  # annotate(\"text\", x=2024, y=95, label= \"Made by ©СФ\") +   # adds text to the plot\n  theme(plot.title = element_text(color = \"dodgerblue4\", size = 10, face = \"bold\", hjust = 0.5),\n        plot.caption = element_text(color = \"dodgerblue\", size = 8, face = \"bold.italic\"),\n        plot.background = element_rect(fill = \"aliceblue\"), \n        panel.background = element_rect(fill = \"ghostwhite\"),\n        legend.title = element_blank(),\n        legend.background = element_blank(),\n        legend.position = \"top\")\n\np_uz\n# To save\n# animate(p_uz, renderer = gifski_renderer(), height=400, width=600)\n# anim_save(\"C:/Users/sultanov/Documents/temp/gifs/p_uz.gif\")\n```\n\n::: {.cell-output-display}\n![](gganimate_line_files/figure-html/unnamed-chunk-9-1.gif)\n:::\n:::\n",
    "supporting": [
      "gganimate_line_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}