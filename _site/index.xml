<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Fazliddin Sultanov</title>
<link>https://sultanov.quarto.pub/blog/</link>
<atom:link href="https://sultanov.quarto.pub/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>A sample newbie&#39;s blog</description>
<generator>quarto-1.7.32</generator>
<lastBuildDate>Sat, 06 Jul 2024 22:00:00 GMT</lastBuildDate>
<item>
  <title>R &amp; Python: Functions
 in Uzbek</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/mapping/apply_uz.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/mapping/pic/apply.png" class="nolightbox img-fluid"></p>
<p><br><br><br><br></p>
<p>Kayingi mavzu <em>apply/mapping</em> funksiyalari haqida bo’ladi</p>
<p><br><br></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pic/comingsoon.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Tez kunda…"><img src="https://sultanov.quarto.pub/blog/posts/mapping/pic/comingsoon.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Tez kunda…</figcaption>
</figure>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>Function</category>
  <category>Uzbek</category>
  <category>R</category>
  <category>Python</category>
  <category>Applay</category>
  <category>Map</category>
  <guid>https://sultanov.quarto.pub/blog/posts/mapping/apply_uz.html</guid>
  <pubDate>Sat, 06 Jul 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>R &amp; Python: Functions
 in Uzbek</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/function/funksiya_uz.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/function/pic/func.png" class="nolightbox img-fluid"></p>
<section id="intro" class="level2">
<h2 class="anchored" data-anchor-id="intro">Intro</h2>
<p>Ba’zan biror bir yechim ustida ishlanganda bir xil amalni yoki ifodani ko’p joylarda takroran qo’llashga to’g’ri keladi. Shunaqa hollarda funksiyalar qo’l keladi. <strong><em>Funksiya</em></strong> – bu dastur davomida bir yoki bir necha marta bajarilishi zarur yoki mumkin bo’lgan ko’rsatmalarning (kodlardan iborat qatorlaningr) nomlangan ketma-ketligidir. Funksiya faqat chaqirilganda ishlaydi va ma’lum bir vazifani bajarishda ishlatiladi.</p>
<p>Funksiyagaga uning nomi bilan murojat qilinadi. Uning ortida bir qator yoki bir necha qatordan iborat kod bo’lishi mumkin. Dastur davomida ma’lum bir kodlarni qayta-qayta yozmaslik uchun biz ularni jamlab, bitta funksiya ichiga joylashimiz va dastur davomida bu kodlarga funksiya nomi orqali murojat qilishimiz mumkin <span class="citation" data-cites="py_sardev">(Narzullaev 2020)</span>.</p>
</section>
<section id="writing-function" class="level2">
<h2 class="anchored" data-anchor-id="writing-function">Writing function</h2>
<p>Dastur davomida tayyor fuksiyalarni ham ishlatishimiz mumkin, bular <strong><em>built-in-functions</em></strong> ham deyiladi. Bunaqa tayyor funksiyalar Pythonda masalan <em>print</em>, <em>sum</em>, <em>len</em>, <em>min</em>, <em>max</em>, <em>mean</em>, <em>upper</em>, <em>round</em> va hokozalar. R da bularga <em>sum</em>, <em>round</em>, <em>toupper</em>, <em>mean</em>, <em>nchar</em>, <em>lenght</em> va boshqalarni misol qilib keltirish mumkin. Bundan tashqari, qoyilgan vazifa va yechimga qarab, biz o’zimiz ham funksiyalar, ya’ni <strong><em>custom functions</em></strong> yaratishimiz mumkin. Python va R da funksiya yozishda yozish uslubi biroz farq qilaydi:</p>
<div class="code-py">
<p></p>
<div class="cell code-output">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_name(parameters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>arguments):</span>
<span id="cb1-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""description of function"""</span></span>
<span id="cb1-3">  statements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>actions</span>
<span id="cb1-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> expressions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>output</span></code></pre></div>
</div>
</div>
<div class="code-r">
<p></p>
<div class="cell code-input">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">func_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(arguments,parameters){</span>
<span id="cb2-2">  actions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>statements</span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>expression)</span>
<span id="cb2-4">}</span></code></pre></div>
</div>
</div>
<section id="function-in-python" class="level3">
<h3 class="anchored" data-anchor-id="function-in-python">Function in Python</h3>
<p>Pythonda funksiya <code>def</code> kalit so’zi yordamida yaratiladi. Kalit so’zidan keyin funksiya nomi yozilib, agar argument qabul qiladigan funksiya bo’lsa, qavs ichiga argumentlar beriladi va tinish belgis (ikki nuqta) qo’yiladi va yangi qatordan to’rta bo’sh joy (probel) tashlab bajarilishi kerak bo’lgan kod (statement) yoziladi va oxirida <em>return</em> yordamida natija qaytariladi. Quyidagi grafikda Python da funksiyaning yaratilishi va uning tuzilmalari va aklit so’zlari izohlar bilan keltirilgan. Screenshot <span class="citation" data-cites="py_visPy">(Guy Hart-Davis 2020)</span> dan olingan.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pic/func_py.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Function in Python"><img src="https://sultanov.quarto.pub/blog/posts/function/pic/func_py.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Function in Python</figcaption>
</figure>
</div>
<p>Misol uchun bizga sonlardan iborat ro’yxat berilgan. Bu ro’yxatdagi sonlar uchun o’rtacha arifmetik qiymatni hisoblaydigan funksiya tuzamiz.</p>
<div class="cell code-output">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># imort random mudul</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a random list len = 15</span></span>
<span id="cb3-4">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst</span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [5, 5, 10, 31, 21, 26, 29, 20, 22, 5, 8, 11, 20, 30, 43]</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write a function</span></span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> my_average(x):</span>
<span id="cb3-8">  average <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> average</span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># call the function</span></span>
<span id="cb3-11">my_average(lst)</span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 19.07</span></span></code></pre></div>
</div>
</section>
<section id="function-in-r" class="level3">
<h3 class="anchored" data-anchor-id="function-in-r">Function in R</h3>
<p>R dasturlash tilida funksiyalar ham object sifatida qaraladi. Boshqa dasturlash tilllaridagi kabi R da ham funksiyaga nom (name) beriladi va unga argument yoki argumentlar (arguments) uzatiladi. Funksiyani tana, ya’ni body qismida bajarilishi kerak bo’lgan harakatlar (actions) amalga oshiriladi va natija (output) qaytariladi.</p>
<p>Quyidagi grafikda R da funksiyaning yaratilishi va uning tuzilmalari va aklit so’zlari keltirilgan. Screenshot <span class="citation" data-cites="r_forecology">(Cheng 2022)</span> dan olingan.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pic/func_r.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="Function in R"><img src="https://sultanov.quarto.pub/blog/posts/function/pic/func_r.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Function in R</figcaption>
</figure>
</div>
<p>Quyida yuqoridagi Python orqali yaratilgan ro’yxatdagi sonlar uchun o’rtacha arifmetik qiymatni hisoblaydigan funksiyani R dasturlash tilida tuzamiz.</p>
<div class="cell code-intput">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert in Python created list to the R-Vector</span></span>
<span id="cb4-2">vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst)</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write a function</span></span>
<span id="cb4-4">my_average <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){</span>
<span id="cb4-5">  output <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(vec)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(vec), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(output)</span>
<span id="cb4-7">}</span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># call the function</span></span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">my_average</span>(vec)</span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 19.07</span></span></code></pre></div>
</div>
</section>
</section>
<section id="anonymous-functions" class="level2">
<h2 class="anchored" data-anchor-id="anonymous-functions">Anonymous Functions</h2>
<p>Yuqorida keltirilganidek, agar biz biror funksiya yaratib olsak, funksiyamizdan hamma joyda, yani qayerda funksiyamiz bajara oladigan amllarni qo’llash kerak bo’lgan joylayrda qo’llasak bo’ladi. Ba’zan funksiyalarni bir marta ham ishlatish mumkin. Bunda yuqoridagidek o’zimizni funksiyamizni yaratib olishimiz va keyin kerakli joyda chaqirishimiz shart emas. Bunday holllarda ko’pincha <em>nomsiz funksiyalardan (anonymous functions)</em> foydalaniladi. Bu funksiyalar faqat vaqtinchalik yaratiladi va oʻzgaruvchiga nom berilmasdan foydalaniladi. Nomsiz funksiyalar nomli funksiyalar kabi chaqirish mumkin. Python da <em>def</em> kalit so’zi o’rniga <code>lambda</code> kalit so’zi ishlatiladi. Shuning uchun ham Python da nomsiz funksiyalar <em>lambda funksiyalar</em> deb ham ataladi. Lambda funksiyalari istalgan miqdordagi argumentlarga ega bo’lishi mumkin, ammo funksiya badanida faqat bitta ifoda mavjud bo’ladi. Ifoda bajariladi va qaytariladi (return operatori shart emas)<span class="citation" data-cites="py_sardev">(Narzullaev 2020)</span>.</p>
<p>Aytaylik, yana ro’yxat berilgan bo’lsin. Ro’yxatdagi sonlarni misol uchun ikkinchi darajaga oshirish kerak. Pythonda lambda funksiasidan quyidagicha foydalanishimiz mumkin<sup>1</sup>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># imort random mudul</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a random list len = 15</span></span>
<span id="cb5-4">lst2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst2</span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [4, 2, 9, 5, 9, 11, 10]</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Squaring the numbers using lambda</span></span>
<span id="cb5-7">sqrt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> num: num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, lst2))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> sqrt</span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [16, 4, 81, 25, 81, 121, 100]</span></span></code></pre></div>
</div>
<p>R da asosan <code>apply funksiyalar turkumi</code><sup>2</sup> nomsiz funksiyalardan foydalanadi. Yuqoridagi misolni R da <code>sapply</code>-funksiyasi yordamida quyidagicha yozishimiz mumkin:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert in Python created list to the R-Vector</span></span>
<span id="cb6-2">vec2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst2)</span>
<span id="cb6-3">vec2</span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  4  2  9  5  9 11 10</span></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(vec2, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(num) num<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  16   4  81  25  81 121 100</span></span></code></pre></div>
</div>



</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-r_forecology" class="csl-entry">
Cheng, Selina. 2022. <span>“<span class="nocase">How to create your own functions in R</span>.”</span> <a href="https://www.rforecology.com/post/how-to-create-your-own-function-in-r/" class="uri">https://www.rforecology.com/post/how-to-create-your-own-function-in-r/</a>.
</div>
<div id="ref-py_visPy" class="csl-entry">
Guy Hart-Davis, Ted Hart-Davis. 2020. <em><span>Teach Yourself VISUALLY Python</span></em>. John Wiley &amp; Sons, Inc.
</div>
<div id="ref-ds" class="csl-entry">
Lander, Jared P. 2021. <em><span class="nocase">R for Everyone</span></em>. Second. Pearson Education, Inc.
</div>
<div id="ref-r_beginds" class="csl-entry">
Mailund, Thomas. 2022. <em><span class="nocase">Beginning Data Science in R 4</span></em>. Apress Media LLC.
</div>
<div id="ref-r_skills" class="csl-entry">
Michael Freeman, Joel Ross. 2019. <em>Programming Skills for Data Science</em>. Pearson Education, Inc.
</div>
<div id="ref-py_sardev" class="csl-entry">
Narzullaev, Anvar. 2020. <span>“Funksiya.”</span> <a href="https://python.sariq.dev/function/19-function" class="uri">https://python.sariq.dev/function/19-function</a>.
</div>
<div id="ref-r_master" class="csl-entry">
Uzayr, Sufyan bin. 2024. <em><span class="nocase">Mastering R - A Beginner’s Guide</span></em>. CRC Press.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Lambda funksiyasini ko’pincha <code>map</code>, <code>filter</code> va <code>reduce</code> funksiyalarini ishlatganda qo’llash maqasadga muvofiqrog bo’ladi. Bunday funksiyalari uchun alohida mavzu <a href="../../posts/mapping/apply_uz.html" target="_blank">bu yerda</a>. <!-- (/posts/mapping/apply_uz.qmd){target="_blank"} -->↩︎</p></li>
<li id="fn2"><p>Bunday funksiyalari uchun alohida mavzu <a href="../../posts/mapping/apply_uz.html" target="_blank">bu yerda</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Function</category>
  <category>Uzbek</category>
  <category>R</category>
  <category>Python</category>
  <guid>https://sultanov.quarto.pub/blog/posts/function/funksiya_uz.html</guid>
  <pubDate>Sat, 29 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Estimates of Location
 in Uzbek</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/mean/average_uz.html</link>
  <description><![CDATA[ 






<p><img src="https://sultanov.quarto.pub/blog/posts/mean/pictures/average.png" class="nolightbox img-fluid"></p>
<p><em>Tavsiflovchi statistika (descriptive statistics)</em> yordamida ma’lumotlar <em>umumlashtirilgan</em> tarzda taqdim etiladi va tavsiflanadi, ya’ni Tavsiflovchi statistika ko’plab daraxtlar (berilgan ko’p ma’lumotlar) o’rniga o’rmonni (masalan o’rta qiymat) ko’rsatadi <span class="citation" data-cites="r_ModernDA">(Sauer 2019)</span>. Demak bunda ma’lumotlar ular haqida birinchi taassurotni olish uchun <em>explorativ</em> tavsiflanadi. Bu narsa Machine Learning sohasida <em>Feature Engineering</em> deb ham ataladi <span class="citation" data-cites="dsPraxis">(Alby 2022)</span>. Tavsiflovchi statistikada yoki ma’lumotlarni tavsifiy tahlil qilishda maqsadi, <em>ko’rsatgich raqamlar (key figures)</em>, <em>jadvallar</em> va <em>grafiklar</em> yordamida <em>ma’lumotlarni taqsimlashning umumiy ko’rinishda</em> tasvirlab berishga qaratiladi. Tavsiflovchi statistikada asosiy o’lchovlar ma’Lumotlar to’plamini ikki holatda tasvirlaydi: ma’lumotlarni <em>joylashuvi</em> va <em>tarqalishi</em>.</p>
<p>Ko’p hollarda ma’lumotlar bir markaziy nuqta atrofida to’planadi. Bunda har qanday ma’lumotni tavsiflash uchun ma’lum bir <em>odatiy quymat</em>ni ko’rsatish yetarli bo’ladi. <em>Markaziy tendensiyasi</em> (engl. Estimates of Location) ma’lumotlarni ana shu <em>odatiy quymat</em>ga yaqinlashuvini ifodalaydi, boshqacha aytganda qaysi qiymat ma’lumotlar to’plami taqsimotining markazini eng yaxschi ifodalay oladi. Bularga arifmetik <em>o’rtacha arifmetik qiymat</em>, <em>mediana</em> (engl median) va <em>mode</em> lar kiradi,</p>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
  A("Estimates of Location\n(Markaziy tendensiya)")
  B[["- Mean\n- Median\n- Modus\n- Quantil"]]
  A --&gt; B
  style A text-align:center;
</pre>
</div>
<p></p><figcaption> Markaziy tendensiya</figcaption> </figure><p></p>
</div>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
  A("Estimates of Variability\n(Variatsiya/tarqalish)")
  B[["- Standard deviation (standart og'ish)\n- Variance (Dispersiya)\n- Range (Tafovut)\n- Interquartile range, IQR (Kvartillararo tafovut)"]]
  A:::myClass --&gt; B
  classDef myClass style: text-align:center
</pre>
</div>
<p></p><figcaption> Variatsiya/Tarqalish</figcaption> </figure><p></p>
</div>
</div>
</div>
</div>
</div>
<section id="mean" class="level2">
<h2 class="anchored" data-anchor-id="mean">Mean</h2>
<p>O’rtacha arifmetik qiymat, (engl. mean) analitik o’rta qiymatlar ichida eng ko’p tarqalgan turi hisoblanadi. Arifmetik o’rta qiymat barcha qiymatlarni <img src="https://latex.codecogs.com/png.latex?(x_1,%20x_2,%20...,%20x_n)"> qo’shish va yig’indini qiymatlar soniga (n) bo’lish yo’li bilan hisoblanadi: <img src="https://latex.codecogs.com/png.latex?%0A%5Cbar%7Bx%7D%20=%20%5Cfrac%7Bx_1+x_2+x_3+...+x_n%7D%7Bn%7D%20%20=%20%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi%20=%201%7D%5E%7Bn%7D%7Bx_i%7D%0A"> Aytaylik, biz ko’chada so’rov o’tkazdik va odamlardan ularning kasbi, yoshi, bo’yi va daromadi haqida so’radik.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">interview <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">profession =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doctor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Teacher"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doctor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pensioner"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Professor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pensioner"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Student"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Student"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pensioner"</span>),</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>),</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tall =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.72</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.73</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.70</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.78</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.77</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.73</span>),</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">income =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3500</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2050</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2600</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1050</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">950</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1100</span>)</span>
<span id="cb1-6">)</span>
<span id="cb1-7">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(interview)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(df)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; # A tibble: 9 × 4
#&gt;   profession   age  tall income
#&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;
#&gt; 1 Doctor        47  1.75   3500
#&gt; 2 Teacher       39  1.72   2200
#&gt; 3 Doctor        55  1.73   3400
#&gt; 4 Pensioner     68  1.68   2050
#&gt; 5 Professor     51  1.75   2600
#&gt; 6 Pensioner     71  1.7    1400
#&gt; 7 Student       21  1.78   1050
#&gt; 8 Student       25  1.77    950
#&gt; 9 Pensioner     82  1.73   1100</code></pre>
</div>
</div>
<p>Arifmetik o’rta qiymatni (yozishga qulay bo’lishi uchun bundan keyin mean deb ketiladi) hisoblash uchun R va Python da <code>mean()</code> funksiyasi bor. Mean hisoblashda etibor berish kerak bolgan narsa, ma’lumotlar <em>metrik</em> bo’lishi kerak. Misoldagi yosh va daromad xarakteristikalari (variable) uchun mean R va Pythonda quyidagicha hisoblanadi:</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">m_age <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age); m_inc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>income)</span>
<span id="cb3-2">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean of age: {m_age}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">mean of income: {round(m_inc, 2)}"</span>)</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of age: 51</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of income: 2027.78</span></span></code></pre></div>
</div>
</div>
<div class="code-py">
<p></p>
<div class="cell code-output">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">age_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df.age.mean()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> inc_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income"</span>].mean()</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"mean of age: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>age_m<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">mean of income: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(inc_m, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of age: 51.0</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of income: 2027.78</span></span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretatsiya
</div>
</div>
<div class="callout-body-container callout-body">
<p>To’qqiz respondentning (ya’ni biz so’ragan insonlar) yoshi bo’yicha o’rtacha arifmetik ko’rsatkich: 51 va daromad uchun: 2161. Demak biz, respondentlar haqidagi ma’lumotlarni bitta odatiy qiymat (bu yerda o’rta qiymat) bilan tasvirlashimisi mumkin, yani ularni <em>o‘rtacha</em> 51 yoshda va oyiga <em>o‘rtacha</em> 2027,78 (evro, dollar, so’m, nima bo’sayam) maosh oladi, deb umumlashtirib aytishimiz mumkin.</p>
</div>
</div>
</section>
<section id="median" class="level2">
<h2 class="anchored" data-anchor-id="median">Median</h2>
<p>Mediana - tartiblangan qiymatlar o’rtasida joylashgan qiymat hisoblanadi. U taqsimotni ikkita teng yarimga ajratadi va taqsimotning birinchi yarmi undan kichikroq (agar taqsimotda takrorlanuvchi sonlar bo’lmasa) va ikkinchi yarmi undan kattaroq bo’ladi.</p>
<p>Mediana hisoblash uchun R va Pythonda <code>median()</code> funksiyasi mavjud. Mediana <em>metrik va ordinal(tartibli)</em> qiymatlarni talab qiladi. Quyida misoldagi respondentlarning bo’yi va daromadi uchun median hisoblangan.</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">med_tall <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tall); med_inc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>income)</span>
<span id="cb5-2">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median of tall: {med_tall}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">median of income: {med_inc}"</span>)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; median of tall: 1.73</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; median of income: 2050</span></span></code></pre></div>
</div>
</div>
<div class="code-py">
<p></p>
<div class="cell code-output">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-2">tall_med <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df.tall.median()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> inc_med <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income"</span>].median()</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"median of tall: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tall_med<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">mean of income: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>inc_med<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; median of tall: 1.73</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of income: 2050.0</span></span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretatsiya
</div>
</div>
<div class="callout-body-container callout-body">
<p>To’qqiz respondentning bo’yi bo’yicha o’rtacha ko’rsatkich: 1,73 va daromad uchun: 2050. Korsatgichlardan xulosa qilib shunday deyish mumkin: respondentlarning yarmini (50%) bo’yi 1,73 metrdan pastroq va oyiga 2050 dan kam (evro, dollar, nima bo’sayam) maosh oladi. Yoki aksincha, so’ralganlarning yarmini (50%) bo’yi 1,73 metrdan baland va oyiga 2050 dan ortiq daromad topadi.</p>
</div>
</div>
</section>
<section id="modus" class="level2">
<h2 class="anchored" data-anchor-id="modus">Modus</h2>
<p>ma’lumotlar to’plamida eng ko’p uchraydigan qiymat - mode yoki modal qiymat deyiladi. Mode uchun qiymatni <em>metrik, tartibli va nominal (kategorik)</em> ma’lumotlar uchun hisoblanishi mumkin. Nominal ma’lumotlar uchun modal o’rtacha qiymatni aniqlash uchun yagona usuldir. R da mode uchun bevosita funksiya yo’q, modal qiymatni ko’rsatish uchun <code>table</code> funksiyasidan foydalanish mumkin- Bu funksiya qaysi qiymat nechi marta uchragani qaytaradi. Uchragan sonlari bo’yicha eng kattasi mode hisoblanadi.</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequence table for variable profession:"</span>)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>profession)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Häufigkeitstablle</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modus-Maximaler Wert von der Freq.Table</span></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mode for variable profession - Max value of FreqTable: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>profession)))</span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Frequence table for variable tall:"</span>)</span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tall)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Häufigkeitstablle</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mode for variable tall - Max value of FreqTable: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tall)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Frequence table for variable profession:
#&gt;    Doctor Pensioner Professor   Student   Teacher 
#&gt;         2         3         1         2         1 
#&gt; Mode for variable profession - Max value of FreqTable:  3
#&gt; 
#&gt; Frequence table for variable tall:
#&gt; 1.68  1.7 1.72 1.73 1.75 1.77 1.78 
#&gt;    1    1    1    2    2    1    1 
#&gt; Mode for variable tall - Max value of FreqTable:  2</code></pre>
</div>
</div>
</div>
<div class="code-py">
<p></p>
<div class="cell code-output">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#from statistics import mode</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tall_med = r.df.tall.median(); inc_med = r.df["income"].median()</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(f"median of tall: {tall_med}\nmean of income: {inc_med}")</span></span>
<span id="cb9-4">freq_prof <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"profession"</span>].value_counts()       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FreqTable for var profession</span></span>
<span id="cb9-5">modi_prof <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"profession"</span>].value_counts().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modi for var profession</span></span>
<span id="cb9-6">freq_tall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tall"</span>].value_counts()             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FreqTable for var tall</span></span>
<span id="cb9-7">modi_tall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tall"</span>].value_counts().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modi for var tall</span></span>
<span id="cb9-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequence table for variable profession:"</span>)</span>
<span id="cb9-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(freq_prof)</span>
<span id="cb9-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&gt;&gt; Mode for variable profession - Max value of FreqTable:  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>modi_prof<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Frequence table for variable tall:"</span>)</span>
<span id="cb9-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(freq_tall)</span>
<span id="cb9-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&gt;&gt; Mode for variable tall - Max value of FreqTable:  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>modi_tall<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Frequence table for variable profession:
#&gt; profession
#&gt; Pensioner    3
#&gt; Doctor       2
#&gt; Student      2
#&gt; Teacher      1
#&gt; Professor    1
#&gt; Name: count, dtype: int64
#&gt; &gt;&gt; Mode for variable profession - Max value of FreqTable:  3
#&gt; 
#&gt; Frequence table for variable tall:
#&gt; tall
#&gt; 1.75    2
#&gt; 1.73    2
#&gt; 1.72    1
#&gt; 1.68    1
#&gt; 1.70    1
#&gt; 1.78    1
#&gt; 1.77    1
#&gt; Name: count, dtype: int64
#&gt; &gt;&gt; Mode for variable tall - Max value of FreqTable:  2</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretatsiya
</div>
</div>
<div class="callout-body-container callout-body">
<p>Modani izohlab beradigan aytarli ko’p narsa yo’q. Misoldagi ksb va bo’y uchun hisoblangan modal qiymatlardan xulosa qilib aytish bo’lgan narsa shuki, respondentlarning aksariyati nafaqaxo’rlar yoki ko’pchilikning bo’yi 1,73 metr.</p>
</div>
</div>
</section>
<section id="outliers-mean-vs-median" class="level2">
<h2 class="anchored" data-anchor-id="outliers-mean-vs-median">Outliers: Mean vs Median</h2>
<p>Ko’p holatlar mavjud bo’lib, bunda mediana o’rtacha arifmetik qiymatdan yaxshiroq o’lchov birligi sifatida o’zini ko’rsata oladi, masalan, ma’lumotlar to’plamida ekstremal qiymatlar (engl. outliers) bo’lsa. Haddan tashqari holatlarda, medianaga natijani buzishi mumkin bo’lgan ekstremallar ta’sir qilmaydi. Misol tariqasida, biz yuqoridagi misolini ekstremal qiymatni qo’shish orqali kengaytiramiz. Tasavvur qilamiz, 9 ta odamdan keyin yana bitta oxirgi odamdan ma’lumotlarini oldik, aytaylik u tiktoker yoki blogger bo’lsin, ya’ni yosh (19), baland bo’yli (1,84) va boshqa respondentlarga qaraganda ancha ko’proq daromad topadi(5600). Bizning malumotlar to’plamida bu ekstremal holatni ifodalaydi. Endi bizning asl o’rtachaa arifmetik qiymatimiz o’zgaradi va yuqoriroq bo’ladi (chunki yana bir respondent qo’shildi).</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">v <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bloger"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.84</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5600</span>); <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(v) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(df)</span>
<span id="cb11-2">extrem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(df,v)</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New df with outlier:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(extrem, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Means</span></span>
<span id="cb11-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Without outlier:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-7">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income: mean - {round(mean(df$income),2)}, median - {median(df$income)}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">age: mean - {mean(df$age)}, median - {median(df$age)}"</span>)</span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#glue::glue("Median income: {median(df$income)}\nMedian age: {median(df$age)}")</span></span>
<span id="cb11-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">With outlier:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-10">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income: mean - {mean(extrem$income)}, median - {median(extrem$income)}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">age:mean - {mean(extrem$age)}, median - {median(extrem$age)}"</span>)</span>
<span id="cb11-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#glue::glue("Median income: {median(extrem$income)}\nMedian age: {median(extrem$age)}")</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; New df with outlier:
#&gt;    profession age tall income
#&gt; 8     Student  25 1.77    950
#&gt; 9   Pensioner  82 1.73   1100
#&gt; 10     Bloger  19 1.84   5600
#&gt; 
#&gt; Without outlier:
#&gt; income: mean - 2027.78, median - 2050
#&gt; age: mean - 51, median - 51
#&gt; 
#&gt; With outlier:
#&gt; income: mean - 2385, median - 2125
#&gt; age:mean - 47.8, median - 49</code></pre>
</div>
</div>
<p>Yuqorida korinib turganidek, ekstremal holatda o’rtacha arifmetik qiymat daromad uchun 2.027,78 dan 2.385 gacha o’zgardi (o’sdi). A medianada esa o’zgarish uncha katta emas, 2.050 dan 2.125 ga o’zgardi xolos. Bunday holatda arifmetik qiymat hisoblanib, o’rtacha daromad 2.385 deb xulosa qilinsa, ma’lumotlar xato tahlil qilingan bo’ladi. Ushani uchun, <em>agar malumotlar to’plamida ekstremal qiymatlar bo’lsa</em>, o’rtacha qiymatni hisoblash uchun* o’rtacha arifmetik emas medianani ishlatgan afzalroq* bo’ladi.</p>
</section>
<section id="usage" class="level2">
<h2 class="anchored" data-anchor-id="usage">Usage</h2>
<p>O’rtacha qiymat, biz ko’rganimizdek, turli yo’llar bilan aniqlanadi. Shuning uchun vaziyatga qarab (masalan, ma’lumotlarning qaysi turga ega ekanligi) qaysi o’lchovi birligi qaysi vaziyatga (ma’lumotlarga) eng mos kelishini oldindan ko’rib chiqish maqasadga muvofiq bo’ladi. Bunga mani qisqacha xulosam:</p>
<ul>
<li><p><strong>nominal</strong> yoki kategorik ma’lumotlar uchun <strong>mode</strong> ishlatiladi, chunki boshqa markaziy tendensiya o’lchovlari bunqa ma’lumot turlariga mos kelmaydi.</p></li>
<li><p><strong>Mediana</strong> dan foydalanish qachonki <em>oqilona</em> bo’ladi, agar</p>
<ul>
<li>ma’lumotlar <strong>ordinal</strong> yoki tartibli bo’lsa.</li>
<li>taqsimotda <strong>extremal</strong> holatlar borligini bilsak.</li>
</ul></li>
<li><p>Agar ma’lumotlar va nosimmetrik taqsimot mavjud bo’lsa, unda arifmetik o’rtacha eng mos keladi <strong>miqdoriy</strong> (количественный) bo’lsa va taqsimot <strong>symmetrik</strong> bo’lsa, unda <strong>o’rtacha arifmetik qiymat</strong> dan foydalanish eng tO’g’ri yo’l hosoblanadi.</p></li>
</ul>
</section>
<section id="quantile-quartile" class="level2">
<h2 class="anchored" data-anchor-id="quantile-quartile">Quantile &amp; Quartile</h2>
<p>Ma’lumotni ikkita teng o’lchamga ajratadigan medianadan farqli o’laroq, kvanti <strong>tariblangan</strong> ma’lumotlarni turli o’lchamdagi bo’limlarga ajratadi, ya’ni <em><img src="https://latex.codecogs.com/png.latex?x_p"> kavntil</em> yoki <em>x% (px100) kvantillar</em>ga bo’ladi. Kvantlarni bo’laklarga ajratilgan bo’limlardeyish mumkin. Misol uchun, 10% kvantil yoki 0,1 kvantil taqsimotdagi ma’lumotlarning 10% bu kvantil ostida, qolganlari esa (1-p, ya’ni 90%) uning ustida joylashganligini aytadi. Agar ma’lumotlarni <strong>to’rtta teng qismga</strong> ajratilsa, bular <em>maxsus kvantillar</em>, ya’ni <strong>kvartillar</strong> hisoblanadi.</p>
<ul>
<li><p><strong>0,25/25%-kvantil = quyi/birinchi kvartil = Q1</strong> - n ma’lumotlarning kamida 25% <img src="https://latex.codecogs.com/png.latex?x_%7B0,25%7D"> dan kichik yoki teng ekanligini bildiradi.</p></li>
<li><p><strong>0,50/50%-kvantil = o’rta/ikkinchi kvartil = Q2</strong> - medianaga teng, n ma’lumotlarning kamida 50% <img src="https://latex.codecogs.com/png.latex?x_%7B0,50%7D"> dan kichik yoki katta.</p></li>
<li><p><strong>0,75/75%-kvantil = yuqori/uchinchi kvartil = Q3</strong> - n ma’lumotlarning kamida 75% <img src="https://latex.codecogs.com/png.latex?x_%7B0,75%7D"> dan kichik yoki teng ekanligini bildiradi.</p></li>
</ul>
<p>Misol tariqasida, tasavvur qilaylik, biz kichik so’rov o’tkazamiz va 10 kishidan kuniga nechi soat vaqtini uyali telefonda o’tkazishini so’raymiz. Aytaylik, javob quyidagicha (raqamlar o’ylab topilgan):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(time)</span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  [1] 1.0 1.5 1.7 2.0 2.3 2.5 3.0 3.2 3.4 4.0</span></span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(time)</span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2.4</span></span></code></pre></div>
</div>
<p>Kvartillarni hisoblash uchun avval ma’lumotlar to’plamlari soni (n) ni p ga (0,25, 0,50, 0,75) ko’paytirish <img src="https://latex.codecogs.com/png.latex?n*p"> kerak. Natija <em>butun son</em> yoki <em>butun son emas</em>ligiga qarab, keyingi hisoblash uchun ushbu formuladan foydalaniladi: <img src="https://latex.codecogs.com/png.latex?x_p%20=%20%5Cbegin%7Bcases%7D%0A%5Cfrac%7B1%7D%7Bn%7D(x_%7B(np)%7D%20+%20x_%7B(np+1)%7D)%20&amp;%20if%20(p%5Ccdot%20n)%20&amp;%5Ctext%7Bwholenumbered%7D%5C%5C%0Ax_%7B(%7Cnp%7C+1)%7D%20&amp;%20if%20(p%5Ccdot%20n)&amp;%5Ctext%7Bnot%20wholenumbered%7D%5Cend%7Bcases%7D"></p>
<p>Quyida kvartillarni hisoblashni grafik tarzda tasvirlangani:</p>
<p><img src="https://sultanov.quarto.pub/blog/posts/mean/pictures/quartil.png" class="img-fluid" alt="Click for zooming"> Yaxshiyamki, hamma narsani qo’lda hisoblash shart emas. Buning uchun R da <code>quantile()</code> funksiyasi mavjud. Bundan tashqari, <code>summary()</code> <em>(Pythondagi <code>describe()</code> funksiyasi kabi)</em> funktsiyasi o’rtacha arifmetik qiymat, mediana, Q1, Q2 = mediana, Q3, min va max kabi markaziy tendensiya o’lchovlari ko’rsatish orqali ma’lumotlarning birinchi taassurotini beradi.</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vector time: Qauartile: 25%-, 50%-, 75%- Quantile</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(time)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Qauartile: 25%-, 50%-, 75%- Quantile</span></span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Vector time: 0,6- Quantil:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(time, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.60</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 60%- Quantil</span></span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Vector time: Summary</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(time)         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary for variable income</span></span>
<span id="cb14-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Descriptive measures with summary() for df:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(df)</span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># summary(df$age)     # Summary for selected variable (age)</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Vector time: Qauartile: 25%-, 50%-, 75%- Quantile
#&gt;    0%   25%   50%   75%  100% 
#&gt; 1.000 1.775 2.400 3.150 4.000 
#&gt; 
#&gt; Vector time: 0,6- Quantil:
#&gt; 60% 
#&gt; 2.7 
#&gt; 
#&gt; Vector time: Summary
#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
#&gt;   1.000   1.775   2.400   2.460   3.150   4.000 
#&gt; 
#&gt; Descriptive measures with summary() for df:
#&gt;   profession             age          tall           income    
#&gt;  Length:9           Min.   :21   Min.   :1.680   Min.   : 950  
#&gt;  Class :character   1st Qu.:39   1st Qu.:1.720   1st Qu.:1100  
#&gt;  Mode  :character   Median :51   Median :1.730   Median :2050  
#&gt;                     Mean   :51   Mean   :1.734   Mean   :2028  
#&gt;                     3rd Qu.:68   3rd Qu.:1.750   3rd Qu.:2600  
#&gt;                     Max.   :82   Max.   :1.780   Max.   :3500</code></pre>
</div>
</div>
<p>Pythonda ham <code>quantile()</code> funksiyasi mavjud bo’lib, kerakli kvantil(lar)ni ro’yxat formatida qavs ichiga kiritilishi kerak. Funktsiya Pandas yoki NumPy modullari orqali ishlatiladi.</p>
<div class="code-py">
<p></p>
<div class="cell code-output">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quartile for one variable (age):"</span>)</span>
<span id="cb16-2">r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>].quantile([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>])</span>
<span id="cb16-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Quantile for more variables:"</span>)</span>
<span id="cb16-4">r.df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tall"</span>]].quantile([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.75</span>], axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with describe()</span></span>
<span id="cb16-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Descriptive measures with discribe() for df:"</span>)</span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># r.df[["age", "tall"]].describe() # for selected variables</span></span>
<span id="cb16-8">r.df.describe()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Quartile for one variable (age):
#&gt; 0.25    39.0
#&gt; 0.50    51.0
#&gt; 0.75    68.0
#&gt; Name: age, dtype: float64
#&gt; 
#&gt; Quantile for more variables:
#&gt;        age  income   tall
#&gt; 0.10  24.2  1030.0  1.696
#&gt; 0.25  39.0  1100.0  1.720
#&gt; 0.50  51.0  2050.0  1.730
#&gt; 0.75  68.0  2600.0  1.750
#&gt; 
#&gt; Descriptive measures with discribe() for df:
#&gt;              age      tall       income
#&gt; count   9.000000  9.000000     9.000000
#&gt; mean   51.000000  1.734444  2027.777778
#&gt; std    20.621591  0.032059   986.189355
#&gt; min    21.000000  1.680000   950.000000
#&gt; 25%    39.000000  1.720000  1100.000000
#&gt; 50%    51.000000  1.730000  2050.000000
#&gt; 75%    68.000000  1.750000  2600.000000
#&gt; max    82.000000  1.780000  3500.000000</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretatsiya
</div>
</div>
<div class="callout-body-container callout-body">
<p>Kvantillar yoki kvartillar ma’lumotlarni taqsimlashni tasvirlaydi. Bu umumiy taqsimotning ma’lum bir qismi ma’lum bir kvantil/kvartil ostida yoki undan yuqorida joylashgan degan bayonotni berishga imkon beradi. Bular Quartile oder Quartile gibt einen der ersten Überblick von der Datenverteilung. Dadurch kann man die Aussage treffen, dass eine bestimme Teil der gesamten Verteulung liegt unter oder über ein Quantil/Quartil. Nehmen wir das Beispiel von oben mit dem Handy. Uyali telefon haqidagi yuqoridagi misolni olaylik.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># How many time spent you for handy in a day?</span></span>
<span id="cb18-2">handy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quartile</span></span>
<span id="cb18-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(handy)</span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    0%   25%   50%   75%  100% </span></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1.000 1.775 2.400 3.150 4.000</span></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0.6 Quantil</span></span>
<span id="cb18-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(handy, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)</span>
<span id="cb18-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 60% </span></span>
<span id="cb18-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2.7</span></span></code></pre></div>
</div>
<p>Bundan ko’rinib turibdiki, 10 respondentning to’rtdan uch qismi (75%) vaqtini 3 soatgacha uyali telefonda o’tkazadi yoki kvartil 0,6 - respondentlarning 60 foizi kuniga 2,7 soatgacha vaqtini uyali telefonda yo’qotadi.</p>
<section id="box-plot" class="level2">
<h2 class="anchored" data-anchor-id="box-plot">Box-Plot</h2>
<p>Tavsiflash tahlilini amalga oshirishda, ma’lumotlarning harakatlari haqida birinchi taassurot olish uchun, ayniqsa ma’lumotlar to’plami katta bo’lsa, ko’pincha grafik usullardan ham foydalananiladi. Eng kop qo’llanaliganlaridan bu box-plot dir. U ma’lumotlarni asosan 5 ta asosiy o’lchamga (<img src="https://latex.codecogs.com/png.latex?x_%7Bmin%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7B0,25%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7B0,50%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7B0,75%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7Bmax%7D">) jamlaydi va ularni grafik tarzda aks ettiradi. Quyida box-ploti tasvirlangan grafik keltirilgan.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pictures/boxplot.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Box-Plot"><img src="https://sultanov.quarto.pub/blog/posts/mean/pictures/boxplot.png" class="img-fluid figure-img" alt="Box-Plot"></a></p>
<figcaption>Box-Plot</figcaption>
</figure>
</div>
<p>R da box plot uchun basis funktsiyalar ichida <code>boxplot()</code> funksiyasi ham mavjud. Box-plotni <code>ggplot2</code> paketi orqali ham R da yaratish mumkin. Pythonda ham bu funksiya <code>matplotlib</code> yoki <code>seaborn</code> modullarida mavjud.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-r">
<div class="cell code-input">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(extrem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age,</span>
<span id="cb19-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>,</span>
<span id="cb19-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A sample Box-Plot"</span>,</span>
<span id="cb19-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azure"</span>)</span>
<span id="cb19-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(extrem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tomato1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><a href="average_uz_files/figure-html/unnamed-chunk-16-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://sultanov.quarto.pub/blog/posts/mean/average_uz_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="672"></a></p>
</figure>
</div>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-py">
<div class="cell code-output">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a boxplot for the desired column</span></span>
<span id="cb20-4">plt.boxplot(r.extrem[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>], showmeans <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, meanline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, showfliers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb20-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb20-7">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>)</span>
<span id="cb20-8">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A sample Box-Plot"</span>)</span>
<span id="cb20-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb20-10">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; {'whiskers': [&lt;matplotlib.lines.Line2D object at 0x0000028267B37230&gt;, &lt;matplotlib.lines.Line2D object at 0x0000028267B37500&gt;], 'caps': [&lt;matplotlib.lines.Line2D object at 0x0000028267B37800&gt;, &lt;matplotlib.lines.Line2D object at 0x0000028267B37B00&gt;], 'boxes': [&lt;matplotlib.lines.Line2D object at 0x00000282678E6480&gt;], 'medians': [&lt;matplotlib.lines.Line2D object at 0x0000028267B37DD0&gt;], 'fliers': [], 'means': [&lt;matplotlib.lines.Line2D object at 0x0000028267B7C110&gt;]}</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><a href="average_uz_files/figure-html/unnamed-chunk-17-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://sultanov.quarto.pub/blog/posts/mean/average_uz_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="614"></a></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Yuqoridagi box-plot misoldagi dataframening age(yosh) ustuni(variable) uchun yaratilgan. Grafikda ko’rinib turganidek, ma’lumotlarning yarmi (50%) quti (IQR) ichida joylashgan, 25% quti yuqorisida va 25% quti ostida (grafikdagi quti tashqarisidagi nuqta-nuqta chiziqlar) joylashgan. Biz buni shunday talqin qilishimiz mumkin: respondentlarning/odamlarning 50 foizi 25 yoshdan 68 yoshgacha. O’rtadagi tekis chiziq mediana = 51, kesilgan chiziq esa o’rtacha arifmetik qiymat = taxminan 49 (o’rtacha arifmetik qiymatni grafikga qo’shish mumkin, lekin box-plotning tarkibiy/asosiy tasvirlaydigan o’lchamlariga kirmaydi), bundan kelib chiqib, so’rovda qatnashganlarning o’rtacha yoshi 50 yoshni tashkil qiladi degan xulosaga kelish mumkin. Respondentlarning 25 foizi 25 yoshgacha, 25 foizi 68 yoshdan yuqori, va qayd etilganidek, 50 foizi 25-68 yosh orasida.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>


</section>
</div>
</div>
</div>

</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-dsPraxis" class="csl-entry">
Alby, Tom. 2022. <em>Data Science in Der Praxis : Eine Verständliche Einführung in Alle Wichtigen Verfahren</em>. Rheinwerk Verlag GmbH,.
</div>
<div id="ref-ds" class="csl-entry">
Dr. Sandro Scheid, Prof. Dr. Stefanie. 2021. <em>Data Science - Grundlagen, Methoden Und Modelle Der Statistik</em>. Carl Hanser Verlag München.
</div>
<div id="ref-grSchlR" class="csl-entry">
große Schlarmann, Jörg. 2024. <em><span class="nocase">Statistik mit R und RStudio - Ein Nachschlagewerk für Gesundheitsberufe</span></em>. Krefeld: Hochschule Niederrhein. <a href="https://www.produnis.de/R">https://www.produnis.de/R</a>.
</div>
<div id="ref-statRcmdr" class="csl-entry">
Kronthaler, Franz. 2021. <em><span class="nocase">Statistik angewandt mit dem R Commander</span></em>. 2nd ed. Springer-Verlag GmbH Deutschland.
</div>
<div id="ref-rpyStat" class="csl-entry">
Peter Bruce, Peter Gedeck, Andrew Bruce. 2020. <em>Practical Statistics for Data Scientists</em>. 2nd ed. O’Reilly Media, Inc.,.
</div>
<div id="ref-r_ModernDA" class="csl-entry">
Sauer, Sebastian. 2019. <em><span class="nocase">Moderne Datenanalyse mit R</span></em>. Springer Gabler.
</div>
<div id="ref-datatab" class="csl-entry">
Team, DATAtab. 2022. <span>“Tutorials: Erste Schritte Mit DATAtab.”</span> <a href="https://datatab.net/" class="uri">https://datatab.net/</a>.
</div>
</div></section></div> ]]></description>
  <category>Statistics</category>
  <category>Uzbek</category>
  <category>R</category>
  <category>Python</category>
  <category>Mean</category>
  <category>Median</category>
  <category>Modal</category>
  <category>Quartil</category>
  <category>Box-Plot</category>
  <guid>https://sultanov.quarto.pub/blog/posts/mean/average_uz.html</guid>
  <pubDate>Sat, 08 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Estimates of Location
 in German</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/mean/average_de.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/mean/pictures/medium.png" class="nolightbox img-fluid"></p>
<p>Bei der <em>deskriptiven Statistik</em> werden die Daten <em>zusammenfassend</em> dargestellt und beschrieben, so dass mann den Wald statt viele Bäume sieht <span class="citation" data-cites="r_ModernDA">(Sauer 2019)</span>. Die Daten werden also <em>explorativ</em> untersucht, um den ersten Eindruck von ihnen zu bekommen. Dies würde man im Bereich Machine Learning als <em>Feature Engineering</em> bezeichnen <span class="citation" data-cites="dsPraxis">(Alby 2022)</span>. Die deskriptive Statistik wird auch als <em>beschreibende Statistik</em> oder <em>deskriptive Datenanalyse</em> bezeichnet und hat das Ziel einen Überblick über die Verteilung der Daten anhand Kennzahlen, Tabellen und Grafik zu verschaffen.</p>
<p>Lagemaße (engl. Estimates of Location), auch Maße der zentralen Tendenz genannt, gibt Auskunft darüber, wo die Mitte der Verteilung liegt. Anders gesagt, man reduziert mehrere Werte auf einen Wert (Kennzahl), der alle Werte repräsentiert (viele einzelne Bäume -&gt; Wald). Mittelwert, Median und Modalwert gehört dazu.</p>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
  A("Estimates of Location\n(Lagemaße)")
  B[["- Mean\n- Median\n- Modus\n- Quantil"]]
  A --&gt; B
  style A text-align:center;
</pre>
</div>
<p></p><figcaption> Lagemaße</figcaption> </figure><p></p>
</div>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
  A("Estimates of Variability\n(Streuungsmaße)")
  B[["- Standard deviation (Standardabweichung)\n- Variance (Varianz)\n- Range (Spannweite)\n- Interquartile range, IQR (Interquartilsabstand)"]]
  A:::myClass --&gt; B
  classDef myClass style: text-align:center
</pre>
</div>
<p></p><figcaption> Streuungsmaße</figcaption> </figure><p></p>
</div>
</div>
</div>
</div>
</div>
<section id="mean" class="level2">
<h2 class="anchored" data-anchor-id="mean">Mean</h2>
<p>Das arithmetisches Mittel (engl. mean) häufig als Mittelwert bezeichnet, wird am häufigsten benutzt. Mittelwert wird berechnet, indem man alle Werte addiert <img src="https://latex.codecogs.com/png.latex?(x_1,%20x_2,%20...,%20x_n)"> und die Summe durch die Anzahl der Werte (n) dividiert: <img src="https://latex.codecogs.com/png.latex?%0A%5Cbar%7Bx%7D%20=%20%5Cfrac%7Bx_1+x_2+x_3+...+x_n%7D%7Bn%7D%20%20=%20%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi%20=%201%7D%5E%7Bn%7D%7Bx_i%7D%0A"> Man möge sich vorstellen, man würde eine Straßenumfrage machen und die Menschen nach ihrem Beruf, Alter und Einkommen fragen.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">interview <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">profession =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doctor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Teacher"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doctor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pensioner"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Professor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pensioner"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Student"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Student"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pensioner"</span>),</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">71</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>),</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tall =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.72</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.73</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.70</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.78</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.77</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.73</span>),</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">income =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3500</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2050</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2600</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1050</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">950</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1100</span>)</span>
<span id="cb1-6">)</span>
<span id="cb1-7">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(interview)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(df)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; # A tibble: 9 × 4
#&gt;   profession   age  tall income
#&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;
#&gt; 1 Doctor        47  1.75   3500
#&gt; 2 Teacher       39  1.72   2200
#&gt; 3 Doctor        55  1.73   3400
#&gt; 4 Pensioner     68  1.68   2050
#&gt; 5 Professor     51  1.75   2600
#&gt; 6 Pensioner     71  1.7    1400
#&gt; 7 Student       21  1.78   1050
#&gt; 8 Student       25  1.77    950
#&gt; 9 Pensioner     82  1.73   1100</code></pre>
</div>
</div>
<p>Um den Mittelwert zu berechnen gibt es in R und Python die Funktion <code>mean()</code>. Zu beachten bei der Berechnung von mean ist, dass der Mittelwert <em>metrische Daten</em> voraussetzt. Mean vom Einkommen und Alter ist wie folgt berechnet:</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">m_age <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age); m_inc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>income)</span>
<span id="cb3-2">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean of age: {m_age}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">mean of income: {round(m_inc, 2)}"</span>)</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of age: 51</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of income: 2027.78</span></span></code></pre></div>
</div>
</div>
<div class="code-py">
<p></p>
<div class="cell code-output">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">age_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df.age.mean()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> inc_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income"</span>].mean()</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"mean of age: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>age_m<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">mean of income: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(inc_m, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of age: 51.0</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of income: 2027.78</span></span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretation
</div>
</div>
<div class="callout-body-container callout-body">
<p>Von neun Befragten ist das arithmetisches Mittel fürs Alter: 51 und fürs Einkommen: 2.161. Also, man kann sagen, die Befragten sind <em>im Durchschnit</em> 51 Jahre alt und verdienen durchschnitlich 2.027,78 (in Euro, Dollar, in was auch immer) im Monat.</p>
</div>
</div>
</section>
<section id="median" class="level2">
<h2 class="anchored" data-anchor-id="median">Median</h2>
<p>Median ist der Wert, der in der Mitte von den der Größe nach <em>sortierten/geordneten</em> Werten ist. Er halbiert die Verteilung und gibt an, dass eine Hälfte der Verteilung von ihm kleiner und andere Hälfte größer ist.</p>
<p>Um Miedian zu berechnen gibt es in R und Python die Funktion <code>median()</code>. Zu beachten ist, dass der Median <em>metrische und ordinale Daten</em> voraussetzt. Median vom Einkommen und von der Größe ist wie folgt berechnet:</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">med_tall <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tall); med_inc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>income)</span>
<span id="cb5-2">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median of tall: {med_tall}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">median of income: {med_inc}"</span>)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; median of tall: 1.73</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; median of income: 2050</span></span></code></pre></div>
</div>
</div>
<div class="code-py">
<p></p>
<div class="cell code-output">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-2">tall_med <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df.tall.median()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> inc_med <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income"</span>].median()</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"median of tall: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tall_med<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">mean of income: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>inc_med<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; median of tall: 1.73</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; mean of income: 2050.0</span></span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretation
</div>
</div>
<div class="callout-body-container callout-body">
<p>Von neun Befragten ist der Median für die Größe: 1.73 und fürs Einkommen: 2.050. Also, man kann sagen, die <em>Hälfte (50%)</em> der neuen Befragten sind <em>kleiner als</em> 1.73 Meter und verdienen <em>unter</em> 2.050 (in Euro, Dollar, in was auch immer) im Monat. Oder andersrum, die <em>Hälfte (50%)</em> der Befragten sind <em>größer als</em> 1.73 Meter und verdienen <em>über</em> 2.050 im Monat.</p>
</div>
</div>
</section>
<section id="modus" class="level2">
<h2 class="anchored" data-anchor-id="modus">Modus</h2>
<p>Modalwert, auch Modus genannt, ist der Wert, der <em>am häufgsten</em> vorkommt. Der Modus kann für <em>metrische, ordinale und nominale Daten</em> berechnet werden. Für nominale Daten ist der Modus der einzige Kennwert, um mittleren Wert zu bestimmen. In R gibt es keine Funktion für Modus, man kann durch die Funktion <code>table</code> den Modalwert anzeigen lassen.</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequence table for variable profession:"</span>)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>profession)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Häufigkeitstablle</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modus-Maximaler Wert von der Freq.Table</span></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mode for variable profession - Max value of FreqTable: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>profession)))</span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Frequence table for variable tall:"</span>)</span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tall)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Häufigkeitstablle</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mode for variable tall - Max value of FreqTable: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tall)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Frequence table for variable profession:
#&gt;    Doctor Pensioner Professor   Student   Teacher 
#&gt;         2         3         1         2         1 
#&gt; Mode for variable profession - Max value of FreqTable:  3
#&gt; 
#&gt; Frequence table for variable tall:
#&gt; 1.68  1.7 1.72 1.73 1.75 1.77 1.78 
#&gt;    1    1    1    2    2    1    1 
#&gt; Mode for variable tall - Max value of FreqTable:  2</code></pre>
</div>
</div>
</div>
<div class="code-py">
<p></p>
<div class="cell code-output">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#from statistics import mode</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tall_med = r.df.tall.median(); inc_med = r.df["income"].median()</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(f"median of tall: {tall_med}\nmean of income: {inc_med}")</span></span>
<span id="cb9-4">freq_prof <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"profession"</span>].value_counts()       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FreqTable for var profession</span></span>
<span id="cb9-5">modi_prof <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"profession"</span>].value_counts().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modi for var profession</span></span>
<span id="cb9-6">freq_tall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tall"</span>].value_counts()             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FreqTable for var tall</span></span>
<span id="cb9-7">modi_tall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tall"</span>].value_counts().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modi for var tall</span></span>
<span id="cb9-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequence table for variable profession:"</span>)</span>
<span id="cb9-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(freq_prof)</span>
<span id="cb9-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&gt;&gt; Mode for variable profession - Max value of FreqTable:  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>modi_prof<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Frequence table for variable tall:"</span>)</span>
<span id="cb9-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(freq_tall)</span>
<span id="cb9-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&gt;&gt; Mode for variable tall - Max value of FreqTable:  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>modi_tall<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Frequence table for variable profession:
#&gt; profession
#&gt; Pensioner    3
#&gt; Doctor       2
#&gt; Student      2
#&gt; Teacher      1
#&gt; Professor    1
#&gt; Name: count, dtype: int64
#&gt; &gt;&gt; Mode for variable profession - Max value of FreqTable:  3
#&gt; 
#&gt; Frequence table for variable tall:
#&gt; tall
#&gt; 1.75    2
#&gt; 1.73    2
#&gt; 1.72    1
#&gt; 1.68    1
#&gt; 1.70    1
#&gt; 1.78    1
#&gt; 1.77    1
#&gt; Name: count, dtype: int64
#&gt; &gt;&gt; Mode for variable tall - Max value of FreqTable:  2</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretation
</div>
</div>
<div class="callout-body-container callout-body">
<p>Für Modus gibt es nicht besonders viel zu interpretieren. Man könnte sagen, unter Befragten sind am meisten die Rentner oder die meisten haben die Größe 1.73 Meter.</p>
</div>
</div>
</section>
<section id="outliers-mean-vs-median" class="level2">
<h2 class="anchored" data-anchor-id="outliers-mean-vs-median">Outliers: Mean vs Median</h2>
<p>Es gibt viele Fälle, wo der Median gegenüber Mean ein besseres Lagemaß darstellt, z.B. wenn es in dem Datensatz extreme Werte (Außreißer, engl. outlier) gibt. Bei Extremfällen wird der Median nicht von <em>Ausreißern</em> beeinflusst, die das Ergebnis verfälschen können. Wir erweitern das Beispiel von Umfrage, indem wir einen Ausreißer hinzufügen. Also, wir hätten noch einen Tiktoker oder Blogger befragt, der jung, groß ist und mehr als die anderen Befragten verdient. Da wird unser ursprünglicher Mittelwert ändern und höher ausfallen.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">v <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bloger"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.84</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5600</span>); <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(v) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(df)</span>
<span id="cb11-2">extrem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(df,v)</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New df with outlier:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(extrem, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Means</span></span>
<span id="cb11-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Without outlier:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-7">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income: mean - {round(mean(df$income),2)}, median - {median(df$income)}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">age: mean - {mean(df$age)}, median - {median(df$age)}"</span>)</span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#glue::glue("Median income: {median(df$income)}\nMedian age: {median(df$age)}")</span></span>
<span id="cb11-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">With outlier:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-10">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income: mean - {mean(extrem$income)}, median - {median(extrem$income)}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">age:mean - {mean(extrem$age)}, median - {median(extrem$age)}"</span>)</span>
<span id="cb11-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#glue::glue("Median income: {median(extrem$income)}\nMedian age: {median(extrem$age)}")</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; New df with outlier:
#&gt;    profession age tall income
#&gt; 8     Student  25 1.77    950
#&gt; 9   Pensioner  82 1.73   1100
#&gt; 10     Bloger  19 1.84   5600
#&gt; 
#&gt; Without outlier:
#&gt; income: mean - 2027.78, median - 2050
#&gt; age: mean - 51, median - 51
#&gt; 
#&gt; With outlier:
#&gt; income: mean - 2385, median - 2125
#&gt; age:mean - 47.8, median - 49</code></pre>
</div>
</div>
<p>Wie man oben sieht, durch Ausreißer, hat sich Mittelwert für Einkommen von 2.027,78 auf 2.385 gestiegen und alter von 51 auf 47.8 gesunken. Bei Median hat sich nicht so groß geändert, nämlich von 2.050 auf 2.125 gestiegen und für die Variable alter von 51 auf 49 gesunken.</p>
</section>
<section id="usage" class="level2">
<h2 class="anchored" data-anchor-id="usage">Usage</h2>
<p>Der mittlere Wert, wie wir gesehen haben auf unterschiedliche Weise ermittelt. Daher ist es sinnvoll, dass man sich überlegt, anhand den Gegebenheiten (wie z.B. Skalenneveau der Daten) welches Lagemaß am besten geeignet ist. Hier ist meine kurze Zusammenfassung:</p>
<ul>
<li><p>Bei <strong>nominalen</strong> verwendet man den <strong>Modus</strong>, da andere Lagemaße dafür nicht geeignet sind.</p></li>
<li><p>Anwenung von <strong>Median</strong> ist dann <em>sinnvoll</em>, wenn</p>
<ul>
<li>die Daten <strong>ordinal</strong> sind.</li>
<li>man weiß, dass man <strong>Außreßer</strong> hat.</li>
</ul></li>
<li><p>Hat man <strong>quantitative</strong> Daten und <strong>symmetrische</strong> Verteilung vorligt, dann ist <strong>arithmetisches Mittel</strong> am besten geeignet.</p></li>
</ul>
</section>
<section id="quantile-quartile" class="level2">
<h2 class="anchored" data-anchor-id="quantile-quartile">Quantile &amp; Quartile</h2>
<p>Im Gegensaz zu Median, der die Daten in zwei gleiche Größe aufteilt, wird beim Quantil die <strong><em>sortierten</em></strong> Daten in unterschiedlich große Abschnitte, nämlich in <em><img src="https://latex.codecogs.com/png.latex?x_p">- Quantile</em> oder <em>x% (px100%)- Quantile</em> aufgeteilt. Diese aufgeteilte abschnitte wären dann Quantile. Zum Beispiel 10%-Quantil oder 0,1-Quantil sagt aus, dass 10% der Daten in der verteilung liegt unter diesem Quantil, und der Rest (1-p, also 90%) liegt darüber. Teilt man die Daten in <strong>vier gleich große Teile</strong>, spricht man von <em>speziellen Quantilen</em>, nämlich von <strong>Quartilen</strong>.</p>
<ul>
<li><p><strong>0,25/25%-Quantil = untere/erste Qauartil = Q1</strong> - besagt, dass mindestens 25% der n-Daten kleiner oder gleich <img src="https://latex.codecogs.com/png.latex?x_%7B0,25%7D"> sind.</p></li>
<li><p><strong>0,50/50%-Quantil = mittlere/zweite Qauartil = Q2</strong> - gleich Median, mindestens 50% der n-Daten kleiner oder gleich <img src="https://latex.codecogs.com/png.latex?x_%7B0,50%7D"> sind.</p></li>
<li><p><strong>0,75/75%-Quantil = obere/dritte Qauartil = Q3</strong> - besagt, dass mindestens 75% der n-Daten kleiner oder gleich <img src="https://latex.codecogs.com/png.latex?x_%7B0,75%7D"> sind.</p></li>
</ul>
<p>Bei p = 0.1, 0.2, … spricht man von <em>Dezilen</em>, bei 0.01, 0.02, … von <em>Perzentilen</em>.</p>
<p>Als Beispiel, stellen wir wieder vor, wir machen eine kleine Umfrage und fragen wir 10 Leute danach, wie lange sie am Tag ihre Zeit mit Handy verbringen. Sagen wir, die Antwort wie folgt (die Zahlen sind ausgedacht):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(time)</span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  [1] 1.0 1.5 1.7 2.0 2.3 2.5 3.0 3.2 3.4 4.0</span></span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(time)</span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2.4</span></span></code></pre></div>
</div>
<p>Um die Quartile zu berechnen muss man zu erst die Anzahl der Datenmenge (n) mit p (0.25, 0.50, 0.75) multiplizieren <img src="https://latex.codecogs.com/png.latex?n*p">. Je nachdem, ob das Ergebis <em>ganzzahlig</em> oder <em>nicht ganzzahlig</em> ist, muss man für die weitere Berechnung diese Formel benutzen: <img src="https://latex.codecogs.com/png.latex?x_p%20=%20%5Cbegin%7Bcases%7D%0A%5Cfrac%7B1%7D%7Bn%7D(x_%7B(np)%7D%20+%20x_%7B(np+1)%7D)%20&amp;%20if%20(p%5Ccdot%20n)%20&amp;%5Ctext%7Bwholenumbered%7D%5C%5C%0Ax_%7B(%7Cnp%7C+1)%7D%20&amp;%20if%20(p%5Ccdot%20n)&amp;%5Ctext%7Bnot%20wholenumbered%7D%5Cend%7Bcases%7D"> Hier ist nochmal die visuelle Darstellung zur Berechnung von Quartilen</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pictures/quartil.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Quartile (25%, 50%, 75%)"><img src="https://sultanov.quarto.pub/blog/posts/mean/pictures/quartil.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Quartile (25%, 50%, 75%)</figcaption>
</figure>
</div>
<p>Zum Glück muss man das ganze nicht händisch ausrechnen. Dafür gibt es in R die Funktion <code>quantile()</code>. Außerdem gibt die Funktion <code>summary()</code> <em>(wie <code>describe()</code> in Python)</em> den ersten Eindruck über den Daten mit den Lagemaßen wie Mean, Median, Q1, Q2 = Median, Q3, Min und Max.</p>
<div class="code-r">
<p></p>
<div class="cell code-input">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vector time: Qauartile: 25%-, 50%-, 75%- Quantile</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(time)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Qauartile: 25%-, 50%-, 75%- Quantile</span></span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Vector time: 0,6- Quantil:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(time, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.60</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 60%- Quantil</span></span>
<span id="cb14-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Vector time: Summary</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(time)         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary for variable income</span></span>
<span id="cb14-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Descriptive measures with summary() for df:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(df)</span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># summary(df$age)     # Summary for selected variable (age)</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Vector time: Qauartile: 25%-, 50%-, 75%- Quantile
#&gt;    0%   25%   50%   75%  100% 
#&gt; 1.000 1.775 2.400 3.150 4.000 
#&gt; 
#&gt; Vector time: 0,6- Quantil:
#&gt; 60% 
#&gt; 2.7 
#&gt; 
#&gt; Vector time: Summary
#&gt;    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
#&gt;   1.000   1.775   2.400   2.460   3.150   4.000 
#&gt; 
#&gt; Descriptive measures with summary() for df:
#&gt;   profession             age          tall           income    
#&gt;  Length:9           Min.   :21   Min.   :1.680   Min.   : 950  
#&gt;  Class :character   1st Qu.:39   1st Qu.:1.720   1st Qu.:1100  
#&gt;  Mode  :character   Median :51   Median :1.730   Median :2050  
#&gt;                     Mean   :51   Mean   :1.734   Mean   :2028  
#&gt;                     3rd Qu.:68   3rd Qu.:1.750   3rd Qu.:2600  
#&gt;                     Max.   :82   Max.   :1.780   Max.   :3500</code></pre>
</div>
</div>
</div>
<p>In Python gibt es auch die Funktion <code>quantile()</code>, man muss in Klammern die gewünschte(n) Quantil(e) in Listenformat eingeben. Die Funktion ist in Pandas oder NumPy.</p>
<div class="code-py">
<p></p>
<div class="cell code-output">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quartile for one variable (age):"</span>)</span>
<span id="cb16-2">r.df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>].quantile([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>])</span>
<span id="cb16-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Quantile for more variables:"</span>)</span>
<span id="cb16-4">r.df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"income"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tall"</span>]].quantile([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.75</span>], axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with describe()</span></span>
<span id="cb16-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Descriptive measures with discribe() for df:"</span>)</span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># r.df[["age", "tall"]].describe() # for selected variables</span></span>
<span id="cb16-8">r.df.describe()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Quartile for one variable (age):
#&gt; 0.25    39.0
#&gt; 0.50    51.0
#&gt; 0.75    68.0
#&gt; Name: age, dtype: float64
#&gt; 
#&gt; Quantile for more variables:
#&gt;        age  income   tall
#&gt; 0.10  24.2  1030.0  1.696
#&gt; 0.25  39.0  1100.0  1.720
#&gt; 0.50  51.0  2050.0  1.730
#&gt; 0.75  68.0  2600.0  1.750
#&gt; 
#&gt; Descriptive measures with discribe() for df:
#&gt;              age      tall       income
#&gt; count   9.000000  9.000000     9.000000
#&gt; mean   51.000000  1.734444  2027.777778
#&gt; std    20.621591  0.032059   986.189355
#&gt; min    21.000000  1.680000   950.000000
#&gt; 25%    39.000000  1.720000  1100.000000
#&gt; 50%    51.000000  1.730000  2050.000000
#&gt; 75%    68.000000  1.750000  2600.000000
#&gt; max    82.000000  1.780000  3500.000000</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Interpretation
</div>
</div>
<div class="callout-body-container callout-body">
<p>Quantile oder Quartile gibt einen der ersten Überblick von der Datenverteilung. Dadurch kann man die Aussage treffen, dass eine bestimme Teil der gesamten Verteulung liegt unter oder über ein Quantil/Quartil. Nehmen wir das Beispiel von oben mit dem Handy.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># How many time spent you for handy in a day?</span></span>
<span id="cb18-2">handy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quartile</span></span>
<span id="cb18-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(handy)</span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    0%   25%   50%   75%  100% </span></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1.000 1.775 2.400 3.150 4.000</span></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0.6 Quantil</span></span>
<span id="cb18-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(handy, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)</span>
<span id="cb18-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 60% </span></span>
<span id="cb18-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2.7</span></span></code></pre></div>
</div>
<p>Daraus kann man ablesen, dass drei Viertel (75%) der 10 Befragten verbringen ihre Zeit bis über 3 Stunden mit dem Handy, oder zweite Zahl, 60% der Befragten verschwinden bis 2.7 Stunden am Tag ihrer Zeit mit dem Handy.</p>
</div>
</div>
</section>
<section id="box-plot" class="level2">
<h2 class="anchored" data-anchor-id="box-plot">Box-Plot</h2>
<p>Bei der deskriptiven Analyse greift man oft zu graphischen Methoden, vor allem, wenn man eien ngroßen Datensatz hat, um ersten Eindruck über das Verhalten der Daten zu gewinnen. Box-Plot kommt am häufgsten zur Anwendung. Er setzt hauptsächlich 5 Kennzahlen (<img src="https://latex.codecogs.com/png.latex?x_%7Bmin%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7B0,25%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7B0,50%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7B0,75%7D">, <img src="https://latex.codecogs.com/png.latex?x_%7Bmax%7D">) zusammen und stellt sie graphisch dar, zeigt auch Außreißer. Hier noch eine visuelle Darstellung:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pictures/boxplot.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="Box-Plot"><img src="https://sultanov.quarto.pub/blog/posts/mean/pictures/boxplot.png" class="img-fluid figure-img" alt="Box-Plot"></a></p>
<figcaption>Box-Plot</figcaption>
</figure>
</div>
<p>In R gibt es Basefunktion <code>boxplot()</code> für Box-Plot. Außerdem kann man auch durch <code>ggplot</code>-Package erstellen. In Python auch diese Funktion in den Modeulen <code>matplotlib</code> oder <code>seaborn</code>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-r">
<div class="cell code-input">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(extrem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age,</span>
<span id="cb19-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>,</span>
<span id="cb19-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A sample Box-Plot"</span>,</span>
<span id="cb19-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"azure"</span>)</span>
<span id="cb19-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(extrem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tomato1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><a href="average_de_files/figure-html/unnamed-chunk-16-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://sultanov.quarto.pub/blog/posts/mean/average_de_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="672"></a></p>
</figure>
</div>
</div>
</div>
<!-- ## Create a box plot with mean using ggplot2 -->
<!-- # ggplot(extrem, aes(x="", y=income)) + -->
<!-- #   geom_boxplot(fill="lightblue", color="cadetblue") + -->
<!-- #   geom_hline(yintercept = mean(extrem$income), color="tomato", linetype="dashed") + -->
<!-- #   labs(title="Box Plot with Mean using ggplot2", -->
<!-- #        y="income") + -->
<!-- #   theme_minimal() -->
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-py">
<div class="cell code-output">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a boxplot for the desired column</span></span>
<span id="cb20-4">plt.boxplot(r.extrem[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>], showmeans <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, meanline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, showfliers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add labels and title</span></span>
<span id="cb20-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb20-7">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>)</span>
<span id="cb20-8">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A sample Box-Plot"</span>)</span>
<span id="cb20-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the plot</span></span>
<span id="cb20-10">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; {'whiskers': [&lt;matplotlib.lines.Line2D object at 0x000001C5612BEBA0&gt;, &lt;matplotlib.lines.Line2D object at 0x000001C5612BEE40&gt;], 'caps': [&lt;matplotlib.lines.Line2D object at 0x000001C5612BF140&gt;, &lt;matplotlib.lines.Line2D object at 0x000001C5612BF440&gt;], 'boxes': [&lt;matplotlib.lines.Line2D object at 0x000001C5612BE2A0&gt;], 'medians': [&lt;matplotlib.lines.Line2D object at 0x000001C5612BF740&gt;], 'fliers': [], 'means': [&lt;matplotlib.lines.Line2D object at 0x000001C5612BFA10&gt;]}</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><a href="average_de_files/figure-html/unnamed-chunk-17-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://sultanov.quarto.pub/blog/posts/mean/average_de_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="614"></a></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Boxplot von oben ist für die Variable age (Alter) von der Befragten in dem Beispieldataframe erstellt. Wie man im Plot sieht, sind die Hälfte (50%) der Daten liegen in dam Box (IQR), 25% oberhalb und 25% unterhalb des Boxes (gestrichene Linien ausßerhalb des Boxes im Plot). Man kann es so interpretieren: 50% der Befragten/personen sind zwischen 25 und 68 Jahre alt. Durchgezogene Linie in der Mitte ist Median = 51, und die gestrichene Linie ist Mittelwert = ca.49 (kann man zu Plot hinzufügen, ist nicht Bestandteil von Box-Plot), also kann man daraus eine Schlussfolgerung ziehen, dass durchnittliches Alter von befragten Personen um die 50 Jahre ist. 25% der Personen sind unter 25 Jahren, 25% über 68 Jahre und 50%, wie gesagt, zwischen 25-68 Jahre alt.</p>
</section>
<section id="references" class="level2">




</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-dsPraxis" class="csl-entry">
Alby, Tom. 2022. <em>Data Science in Der Praxis : Eine Verständliche Einführung in Alle Wichtigen Verfahren</em>. Rheinwerk Verlag GmbH,.
</div>
<div id="ref-ds" class="csl-entry">
Dr. Sandro Scheid, Prof. Dr. Stefanie. 2021. <em>Data Science - Grundlagen, Methoden Und Modelle Der Statistik</em>. Carl Hanser Verlag München.
</div>
<div id="ref-grSchlR" class="csl-entry">
große Schlarmann, Jörg. 2024. <em><span class="nocase">Statistik mit R und RStudio - Ein Nachschlagewerk für Gesundheitsberufe</span></em>. Krefeld: Hochschule Niederrhein. <a href="https://www.produnis.de/R">https://www.produnis.de/R</a>.
</div>
<div id="ref-statRcmdr" class="csl-entry">
Kronthaler, Franz. 2021. <em><span class="nocase">Statistik angewandt mit dem R Commander</span></em>. 2nd ed. Springer-Verlag GmbH Deutschland.
</div>
<div id="ref-rpyStat" class="csl-entry">
Peter Bruce, Peter Gedeck, Andrew Bruce. 2020. <em>Practical Statistics for Data Scientists</em>. 2nd ed. O’Reilly Media, Inc.,.
</div>
<div id="ref-r_ModernDA" class="csl-entry">
Sauer, Sebastian. 2019. <em><span class="nocase">Moderne Datenanalyse mit R</span></em>. Springer Gabler.
</div>
<div id="ref-datatab" class="csl-entry">
Team, DATAtab. 2022. <span>“Tutorials: Erste Schritte Mit DATAtab.”</span> <a href="https://datatab.net/" class="uri">https://datatab.net/</a>.
</div>
</div></section></div> ]]></description>
  <category>Statistics</category>
  <category>German</category>
  <category>R</category>
  <category>Python</category>
  <category>Mean</category>
  <category>Median</category>
  <category>Modal</category>
  <category>Quartil</category>
  <category>Box-Plot</category>
  <guid>https://sultanov.quarto.pub/blog/posts/mean/average_de.html</guid>
  <pubDate>Mon, 27 May 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>R &amp; Python: Control flows and loops
 in Uzbek</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/loops/loops_uz.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/loops/pictures/decide.png" class="nolightbox img-fluid"></p>
<section id="control-flows" class="level1">
<h1>Control flows</h1>
<p><strong>Control flows</strong>, ya’ni Google akani tarjimasi bo’yicha <em>boshqaruv tuzilmalar</em> - ma’lum buyruqlarni ketma-ket tarzda <em>shartli</em> ravishda bajarilishini nazorat qilish imkonini beradi. Boshqacha aytganda biror bir buyruq, ifoda yoki funksiya ishlaydi, qachonki berilgan ma’lum bir shart qanoatlantirilsa. Shartni tekshirish ko’pincha bir nechta elementlardan iborat ma’lumotlar tuzilmasida yoki funksia ichida <strong>sikllar</strong> orqali amalga oshiriladi.</p>
</section>
<section id="if-if-else-else-ifelif" class="level1">
<h1><code>if</code> &amp; <code>if-else</code> &amp; <code>else if/elif</code></h1>
<p>Faqat bitta shart berilgan bo’lsa <code>if</code> ishlatiladi. Misol uchun biror son, aytaylik baho berilgan: <code>son = 4</code>, (4 - yaxshi baho deb hisoblaymiz). Agar shart bo’yicha bahoni tekshirish kerak bo’lsa if - ni o’zini qo’llaymiz. Agar birinchi shart qanoatlantirilmagan <em>aksincha holat</em> uchun ham shart qo’llasak, else ham ishlatiladi. Misoldagi shart boyicha, <span style="background-color:honeydew;"><em>Agar (if)</em> berilgan <em>son 4 ga teng (son == 4) bo’lsa (shart)</em> ekranga <em>yaxshi (buyruq)</em> deb, <em>aks holda (else)</em> ekranga <em>yaxshi emas (buyruq)</em> deb chiqaramiz</span>.</p>
<p>Agar bittadan ko’p yani bir necha shartlar tekshirilganda R uchun <code>else if</code> va Python uchun<code>elif</code> ifodasini ishlatishimiz mumkin. Agar <em>if</em>- blok yoki <em>else if/elif</em>- blokda shartlar qanoatlantirilmasa, <em>else</em> - blok har doim bajariladi. Misol tariqasida yuqoridagi misolga bir dan ko’p shartlarini qo’shamiz. Shartlar quyidagicha bo’lishi mumkin: Agar baho == 3 -&gt; qoniqarli, baho == 4 -&gt; yaxshi, baho == 5 -&gt; a’lo, aks holda -&gt; qoniqarsiz (imtihondan o’tilmadi).</p>
<div class="{column-left}">
<div class="code-r">
<p></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"></span>
<span id="cb1-2">baho <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># berilgan son</span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (baho <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1- shart</span></span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qoniqarli"</span>)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, agar 1-shart == TRUE</span></span>
<span id="cb1-5">} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (baho <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) { <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2-shart</span></span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yaxshi"</span>)         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, agar 2-shart == TRUE</span></span>
<span id="cb1-7">} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (baho <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) { <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3- shart</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a'lo"</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, agar 3-shart == TRUE</span></span>
<span id="cb1-9">} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aks holda</span></span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qoniqarsiz"</span>)     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, hech qaysi shart qanoatlantirilmasa</span></span>
<span id="cb1-11">}</span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; yaxshi</span></span></code></pre></div>
</div>
</div>
</div>
<div class="{column-right}">
<div class="code-py">
<p></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">baho <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># berilgan son</span></span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> baho <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1- shart</span></span>
<span id="cb2-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qoniqarli"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, agar 1-shart == TRUE</span></span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> baho <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2-shart</span></span>
<span id="cb2-5">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yaxshi"</span>)     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, agar 2-shart == TRUE</span></span>
<span id="cb2-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> baho <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3- shart</span></span>
<span id="cb2-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a'lo"</span>)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, agar 3-shart == TRUE</span></span>
<span id="cb2-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aks holda</span></span>
<span id="cb2-9">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qoniqarsiz"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bajariladi, hech qaysi shart qanoatlantirilmasa</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; a'lo</span></span></code></pre></div>
</div>
</div>
</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>R da <em>else</em> if-sharti yopuvchi qavsi <code>}</code> bilan bir qatorda turishi kerak ya’ni:</p>
</div>
<div class="text-border-frame quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><em>if (shart) {</em> <br> <em>buyruq</em> <br> <em><span style="background-color:lightcyan;">} else</span> {</em> <br> <em>buyruq }</em><br><em>}</em></p>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Python da if-shartidan keyin ikki nuqta <code>:</code> qo’yiladi va bajariladigan kod yangi qator boshidan (odatda) 4 marta bo’sh o’rin qoldirib yoziladi:</p>
</div>
<div class="text-border-frame quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><em>if shart:</em><br><em><span style="background-color:yellow;">….</span> buyruq</em><br><em>else:</em><br> <em><span style="background-color:yellow;">….</span> buyruq</em></p>
</div>
</div>
</div>
</section>
<section id="for---loop" class="level1">
<h1><code>for</code> - loop</h1>
<p>Sikllar odatda biror bir amalni biror ketma-ketlikda joylashgan elementlar ustidan (masalan ro’yxat, vektor) bir necha marta bajarish uchun ishlatiladi. <code>for</code>- va <code>while</code>- sikldan R va Pythonda yuqoridagi if-shatidagi ko’rinishga ega. Bundan tashqari R da <code>repeat</code>- sikli ham bor.</p>
<p><code>for</code>- siklini agar ifoda nechi marta bajarilishi kerakligi oldindan aniq bo’lsa ishlatishimiz mumkin, boshqacha aytganda dasturga siklni nechi marta aylanishi kerkaligi oldindan belgilab beriladi. Ko’pincha biror bir ifoda masalan biror ro’yxat ichidagi hamma elementlar uchun qo’llanishilshi kerak bo’lganda for ishlatilsa boladi. Bunda shu to’plam ichida biror bir ifodani/amalni iteratsiya qilib ya’ni, takrorlab chiqiladi. Bunday holllaga hayotimizdanam ko’plab misollar keltirish mumkin.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">Takrorlanuvchi shart</th>
<th style="text-align: left;">Takrorlanuvchi harakat/ifoda</th>
<th style="text-align: left;">To’plam (masalan ro’yxat)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Lagandagi 5 somsani yeyish kerak</td>
<td style="text-align: left;">Somsa yeyish</td>
<td style="text-align: left;">lagandagi 5 somsalar</td>
</tr>
<tr class="even">
<td style="text-align: left;">To’yga mehmonlaga taklifnoma</td>
<td style="text-align: left;">taklifnoma yozish</td>
<td style="text-align: left;">Mehmonlar</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1 dan 10 gacha sana</td>
<td style="text-align: left;">10 gacha bo’lgan har bir sonni nomini aytish</td>
<td style="text-align: left;">[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</td>
</tr>
<tr class="even">
<td style="text-align: left;">Uch marta “Urraa!” deb qichqirish</td>
<td style="text-align: left;">“Urraa!” deb qichqirish</td>
<td style="text-align: left;">[1, 2, 3]</td>
</tr>
</tbody>
</table>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="text-border-frame quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>R:</em></strong><br> <em>for (element in sequence) {</em> <br> <em><img src="https://latex.codecogs.com/png.latex?~~~~"> code</em> <br> <em>}</em></p>
</div>
<div class="text-border-frame quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>Python:</em></strong><br> <em>for element in sequence:</em> <br> <em><img src="https://latex.codecogs.com/png.latex?~~~~"> code</em> <br><br></p>
</div>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">element <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vektor uzunligi</span></span>
<span id="cb3-2">vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numeric"</span>, </span>
<span id="cb3-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> element)</span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(element)){</span>
<span id="cb3-6">  vec[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>i</span>
<span id="cb3-7">}</span>
<span id="cb3-8">vec</span></code></pre></div>
</details>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">uzunlik <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb4-2">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, uzunlik <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb4-4">  lst.append(i)</span>
<span id="cb4-5">lst</span></code></pre></div>
</details>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<section id="section" class="level2 code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<h2 class="anchored" data-anchor-id="section"></h2>
<div class="cell code-input">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 1 2 3 4 5 6 7</code></pre>
</div>
</div>
</section>
<section id="section-1" class="level2 code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<h2 class="anchored" data-anchor-id="section-1"></h2>
<div class="cell code-output">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1, 2, 3, 4, 5, 6, 7]</code></pre>
</div>
</div>
</section>
</div>
</div>
<p>For- sikli <em>qiymatlarga</em> yoki <em>indexlarga</em> asoslanib alanishi mumkin. Indexga asoslansa Pythonda <code>range(startIncl, endExl)</code>, R da <code>start:end</code> yoki <code>seq(satrt, end)</code> metodlari qo’llaniladi. Masalan biror ro’yxat elementlari ustida for-siklini qiymat va indeks asosida qo’llab ko’ramiz.</p>
<div class="code-r">
<p></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">cities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Qarshi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Toshkent"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xiva"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Denov"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shahrisabz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fargona"</span>)</span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># qiymat asosisda ----------------------------</span></span>
<span id="cb7-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (city <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cities){</span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(city, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>))</span>
<span id="cb7-5">}</span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Qarshi, Toshkent, Xiva, Denov, Shahrisabz, Fargona,</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tugadi"</span>)</span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; tugadi</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># indeks asosisa -----------------------------</span></span>
<span id="cb7-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(cities)){</span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-nchi ism:"</span>, cities[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb7-12">}</span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1 -nchi ism: Qarshi </span></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2 -nchi ism: Toshkent </span></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3 -nchi ism: Xiva </span></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4 -nchi ism: Denov </span></span>
<span id="cb7-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 5 -nchi ism: Shahrisabz </span></span>
<span id="cb7-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 6 -nchi ism: Fargona</span></span>
<span id="cb7-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sikl tugadi"</span>)</span>
<span id="cb7-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; sikl tugadi</span></span></code></pre></div>
</div>
</div>
<div class="code-py">
<p></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">cities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Qarshi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Toshkent"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xiva"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Denov"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shahrisabz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fargona"</span>]</span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># qiymat asosisda ----------------------------</span></span>
<span id="cb8-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> city <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cities:</span>
<span id="cb8-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(city, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>)</span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Qarshi, Toshkent, Xiva, Denov, Shahrisabz, Fargona,</span></span>
<span id="cb8-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tugadi"</span>)</span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; tugadi</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># indeks asosisa -----------------------------</span></span>
<span id="cb8-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cities)):</span>
<span id="cb8-10">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-chi ism: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cities[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0-chi ism: Qarshi</span></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1-chi ism: Toshkent</span></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2-chi ism: Xiva</span></span>
<span id="cb8-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3-chi ism: Denov</span></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4-chi ism: Shahrisabz</span></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 5-chi ism: Fargona</span></span>
<span id="cb8-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sikl tugadi"</span>)</span>
<span id="cb8-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; sikl tugadi</span></span></code></pre></div>
</div>
</div>
</section>
<section id="while---loop" class="level1">
<h1><code>while</code> - loop</h1>
<p>For-sikli kabi <em>while</em>- siklida ham biror ifoda siklda takroran bajariladi. For- sikldan farqli ravishda bu yerda siklni nechi marta aylanish kerakligi aniq bo’lmaydi. Toki shart qanoatlantirlgan kean, siklda ifoda takrorlanaveradi, yani qachonki shart bajarilmasa dastur sikl ichidagi amalni bajarishdan toxtaydi. Masalan “To’ymaginimizcha ovqatni yeyaveramiz” - ya’ni toki bu yerdagi shart (hali to’ymadim) qanoatlantrilsa, ovqat yeyishdan toxtamaymiz. Qachonki shart qanoatlantrililmasa (tOydim) ovqat yeyishdan to’xtaymiz. Yoki boshqa misol, chanqog bosilmaguncha suv(bir stakan, ikki stakan,…) suv ichuramiz.</p>
<p>While siklida nechi marta aylanishi aniq bolmagani uchun, unga qachondir shartni qanoatlantirmaydigan logika qurisch kerak. Bunig uchun boshida, initial (boshlovchi) son belgilanadi, bu son takroryi harakatni ifodalaydi va kupincha <code>i</code> bilan belgilanadi (lekin qanday nomlash ixtiyoriy). Keyin sikl ichida ham shu son oshirilib (yoki kamaytirilib, agar oxiridan boshiga yurish kerak bolsa) boriladi.<br> <em><span style="color:red;">Aks holda, tugallanmaydigan sikga tushib qolinadi, va buni kuch bilan toxtatish kwerak boladi!! Agar shunday hol bo’lib qolsa klaviaturada <code>strg</code> + <code>C</code> tugmalarni bosish dasturni majburiy to’xtadai</span></em></p>
<p>Quyidagi misolda berilgan songacha bo’lgan raqamlar yigindisini hisoblaymiz. Masalan berilgan son n = 8, Summa = 1+2+3+4+5+6+7+8 = 36.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-r">
<div class="cell code-input">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##| classes: code-input</span></span>
<span id="cb9-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Berilgan son</span></span>
<span id="cb9-3">s <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># boshlangich yigindi</span></span>
<span id="cb9-4">count <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># siklni sanash uchun initial son</span></span>
<span id="cb9-5">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># harakat boshlanishi ozgaruvchiga uatiladi</span></span>
<span id="cb9-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span>(x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> n){        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># har aylangada shart(i&lt;8) tekshiriladi, false bolsa toxtaydi</span></span>
<span id="cb9-7">  count <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> count <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sikl sanovchi son har aylanganda 1 taga oshiriladi</span></span>
<span id="cb9-8">  s <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ayni paytda uzgaruvchi qabul qilgan qiymat yigindiga qoshiladi</span></span>
<span id="cb9-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(x,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-nchi aylanish: yigindi ="</span>, s,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-10">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># harakatni ifodalovchi son 1 taga oshiriladi</span></span>
<span id="cb9-11">}</span>
<span id="cb9-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1 dan 8 gach bo'lgan raqamlar yigindisi: "</span>, s)</span>
<span id="cb9-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sikl"</span>, count, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"marta aylandi"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 1 -nchi aylanish: yigindi = 1 
#&gt; 2 -nchi aylanish: yigindi = 3 
#&gt; 3 -nchi aylanish: yigindi = 6 
#&gt; 4 -nchi aylanish: yigindi = 10 
#&gt; 5 -nchi aylanish: yigindi = 15 
#&gt; 6 -nchi aylanish: yigindi = 21 
#&gt; 7 -nchi aylanish: yigindi = 28 
#&gt; 8 -nchi aylanish: yigindi = 36 
#&gt; 1 dan 8 gach bo'lgan raqamlar yigindisi:  36
#&gt; Sikl 8 marta aylandi</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-py">
<div class="cell code-output">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb11-2">summa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-3">sana <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-4">i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>:   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># har bir aylanganda shart tekshiriladi</span></span>
<span id="cb11-6">  sana <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sana = sana + 1 ning qisqartmasi</span></span>
<span id="cb11-7">  summa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> i</span>
<span id="cb11-8">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-chi aylanish: yigindi = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-9">  i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># isteration nummerni bittaga oshirishni unutmaslik kerak!</span></span>
<span id="cb11-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"1 dan 8 gach bo'lgan raqamlar yigindisi: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>((<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Sikl </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sana<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> marta aylandi"</span>))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 1-chi aylanish: yigindi = 1
#&gt; 2-chi aylanish: yigindi = 3
#&gt; 3-chi aylanish: yigindi = 6
#&gt; 4-chi aylanish: yigindi = 10
#&gt; 5-chi aylanish: yigindi = 15
#&gt; 6-chi aylanish: yigindi = 21
#&gt; 7-chi aylanish: yigindi = 28
#&gt; 8-chi aylanish: yigindi = 36
#&gt; 1 dan 8 gach bo'lgan raqamlar yigindisi: 36
#&gt; Sikl 8 marta aylandi</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="break-continue" class="level1">
<h1><code>break</code> &amp; <code>continue</code></h1>
<p><em>break</em> va <em>continue</em> lar biror bir shart qanoatlantriliganda siklni ertaroq tark etish imkonini beradi. <code>break</code> orqali, agar biror shart qanoatlantirilsa butunlay sikldan chiqib ketiladi. Agar siklda joriy takrorlanish, ya’ni faqat biror qadam tashlab ketilishi kerak bolsa unda <code>continue</code> (Python) yoki <code>next</code> (R) foydalaniladi.</p>
<p><strong>break</strong> - misol uchun 10 gacha bolgan sonlarni yigindisini faqat yigindi 15 ga teng bolguncha hisoblaymiz, agar yigindi 15 ga yetsa sikldan chiqib ketiladi</p>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">sonlar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for -----------------------------------------</span></span>
<span id="cb13-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># yigindi (boshlangich)</span></span>
<span id="cb13-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (son <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sonlar){</span>
<span id="cb13-5">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> son</span>
<span id="cb13-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>){</span>
<span id="cb13-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb13-8">  }</span>
<span id="cb13-9">}</span>
<span id="cb13-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yigindi for- siklda: "</span>, y)</span>
<span id="cb13-11"></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># while ---------------------------------------</span></span>
<span id="cb13-13">suma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-14">iter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span>(iter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sonlar)){</span>
<span id="cb13-16">  suma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> suma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> iter</span>
<span id="cb13-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (suma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>){</span>
<span id="cb13-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb13-19">  }</span>
<span id="cb13-20">  iter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-21">}</span>
<span id="cb13-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Yigindi while- siklda: "</span>, suma)</span></code></pre></div>
</details>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [son <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> son <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)]</span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for ------------------------------------</span></span>
<span id="cb14-3">total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numbers:</span>
<span id="cb14-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>:</span>
<span id="cb14-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb14-7">  total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num</span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yigindi for- siklda: "</span>, total)</span>
<span id="cb14-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># while ---------------------------------</span></span>
<span id="cb14-11">sum_son <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-12">qadam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> qadam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(numbers):</span>
<span id="cb14-14">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum_son <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>:</span>
<span id="cb14-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb14-16">  sum_son <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> qadam</span>
<span id="cb14-17">  qadam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yigindi while- siklda: "</span>, sum_son)</span></code></pre></div>
</details>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<section id="section-4" class="level2 code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<h2 class="anchored" data-anchor-id="section-4"></h2>
<div class="cell code-input">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Yigindi for- siklda:  15
#&gt; Yigindi while- siklda:  15</code></pre>
</div>
</div>
</section>
<section id="section-5" class="level2 code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<h2 class="anchored" data-anchor-id="section-5"></h2>
<div class="cell code-output">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Yigindi for- siklda:  15
#&gt; Yigindi while- siklda:  15</code></pre>
</div>
</div>
</section>
</div>
</div>
<p><strong>continue</strong> - bunga misol qilib yana 10 gacha bolgan sonlar ketma ketligini olamiz, va shu qatordagi rqamalr yigindisini hisoblaymiz. Agar ro’yxatda sonlar <em>mavjud bo’lmasa</em>( R da <code>NA</code>, Pythonda <code>None</code> yoki <code>NaN</code>), bu sonlar uchun siklda aylanayotganda yigindi hisoblash amalni qo’llamaymiz, boshqacha aytganda bu yerdan <em>hakalab</em> utib ketiladi.</p>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1">ruyhat_na <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb17-2">ruyhat_na[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)]<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb17-3">ruyhat_na</span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for ------------------------------------------</span></span>
<span id="cb17-5">sum_na <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb17-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ruyhat_na){</span>
<span id="cb17-7"></span>
<span id="cb17-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(m)) { <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># is.na(x) Na ni tekshiradi</span></span>
<span id="cb17-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">next</span></span>
<span id="cb17-10">  }</span>
<span id="cb17-11">  sum_na <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sum_na <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> m</span>
<span id="cb17-12">}</span>
<span id="cb17-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yigindi by for: "</span>, sum_na)</span>
<span id="cb17-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># while -----------------------------------------</span></span>
<span id="cb17-15">na_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb17-16">k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span>(k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(ruyhat_na)){</span>
<span id="cb17-18">  </span>
<span id="cb17-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(ruyhat_na[k])){</span>
<span id="cb17-20">    k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">next</span></span>
<span id="cb17-22">  }</span>
<span id="cb17-23">  na_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> na_sum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ruyhat_na[k]</span>
<span id="cb17-24">  k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-25">}</span>
<span id="cb17-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Yigindi by while: "</span>, na_sum)</span></code></pre></div>
</details>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import math</span></span>
<span id="cb18-2">ruyxat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>))</span>
<span id="cb18-3">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb18-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx, val <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(pos, target):</span>
<span id="cb18-5">  ruyxat[idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> val</span>
<span id="cb18-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ruyxat)</span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for -----------------------------------------------</span></span>
<span id="cb18-8">tot_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ruyxat:</span>
<span id="cb18-10">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> r <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb18-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb18-12">  tot_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> r</span>
<span id="cb18-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Yigindi by for: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tot_sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># while ---------------------------------------------</span></span>
<span id="cb18-15">sum_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-16">elmt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> elmt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(ruyxat):</span>
<span id="cb18-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ruyxat[elmt] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb18-19">    elmt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb18-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb18-21">  sum_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> ruyxat[elmt]</span>
<span id="cb18-22">  elmt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb18-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Yigindi by while: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sum_total<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</details>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<section id="section-6" class="level2 code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<h2 class="anchored" data-anchor-id="section-6"></h2>
<div class="cell code-input">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt;  [1]  1  2  3  4 NA  6  7 NA NA 10
#&gt; Yigindi by for:  33
#&gt; Yigindi by while:  33</code></pre>
</div>
</div>
</section>
<section id="section-7" class="level2 code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<h2 class="anchored" data-anchor-id="section-7"></h2>
<div class="cell code-output">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1, 2, 3, 4, None, 6, 7, None, None, 10]
#&gt; Yigindi by for: 33
#&gt; Yigindi by while: 33</code></pre>
</div>
</div>
</section>
</div>
</div>
<p><em>While</em>- siklda etibor berilish kerak bolgan narsa, while da sikl index asosida aylanadi. For-siklda <em>for element in ruyxat</em> qilib shu element ustida sikl ichida biror amal bajarish mumkin, masalan <em>summe = summe + element</em>. Lekin while- siklidigi iteratsiya son, siklni aylanishini taminlovchi yoki sanab boruvchi son hisoblanadi va sikl har bir aylanganda tartibli ravishda o’sib boradi. Ushanchun sikl ichida biror ro’yxat elementiga murojat qilish uchun bu sonni ro’xatni indeksi sifatida qo’llab, shu indeksdagi bo’yicha joylashgan ro’yxat elementiga murojaat qilish mumkin, masalan sikl <em>while element &lt; len(ro’yxat)</em> sharti bo’yicha aylansa, royxatdagfi elementga sikl ichida <em>ro’yxat[element]</em> kurinishda murojaat qilish kerak</p>
<p>Agar qandaydir muammo for- sikli bilan yoki boshqa funksiya bilan yechiladigan bolsa, while- siklini shaxsan man ko’p ishlatishni tavsiya qilmagan bo’lardim. Chunki while- siklda tez tugallanmas siklga tushib qolish oson, agar bazi narsalar etiborga olinmasa, yoki esdan chiqarilsa, masalan iteratsiya sonini sikl ichida birga oshirish, yoki notugri joyda oshirib quyish va hokozo.</p>
<p>Quyidagi rasmda for- va while- sikli sexemasi tasvirlangan (Grafik <span class="citation" data-cites="py_Rot">(Sweigart 2020)</span> dan o’zlashtirilgan). <img src="https://sultanov.quarto.pub/blog/posts/loops/pictures/loop.png" class="img-fluid" alt="Click for zooming"></p>
</section>
<section id="repeat---loop-in-r" class="level1">
<h1><code>repeat</code> - loop in R</h1>
<p>Biror bir blokni/ifodani bir necha marta sikl orqali takrorlash uchun yuqoridagi sikl turlaridan tashqari R da yana <code>repeat</code>- sikli mavjud. Boshqalardan bu siklni farqi, bunda siklni tugatadiga shartlar bolmaydi. Bu sikl faqat majburiy <em>if</em> va <em>break</em> orqali toxtatiladi. Masalan biz sonlarni kvadrat darajasi to 150 ga teng yoki bo’liguniga qadar uzini o’ziga kupaytirib chiqamiz. Ya’ni 1 dan boshlab sonlarni kvadrat darajaga oshiramiz, daraja 150 dan oshib ketmasligi kerak.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-2">daraja <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb21-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">repeat</span> {</span>
<span id="cb21-4">  </span>
<span id="cb21-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (daraja <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>) {</span>
<span id="cb21-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb21-7">  }</span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(daraja, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span>
<span id="cb21-9">  daraja <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d</span>
<span id="cb21-10">  d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-11">}</span>
<span id="cb21-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0 1 4 9 16 25 36 49 64 81 100 121 144</span></span></code></pre></div>
</div>
</section>
<section id="try-except-in-python" class="level1">
<h1><code>try:</code> &amp; <code>except</code> in Python</h1>
<p>Dastrurlash dunyosida bir gap (qoida deysayam boladi) bor ekan: <code>Kutilmagan narsalarni kutish</code>. Bu bilan qandaydir dastur yozib, orqaga suyanib <em>run</em> qilganda, qayerdandir qandaydir jaloba kelishi nazarda tutilgan. Bunaqa holat, manda ayniqsa endi urganayotgan boshlovchi sifatida deyarli har doim uchraydi;). Objektlar ustida qandaydir ammalr bajarganda hatoliklar (Error) har doim uchrab turadi. Ko’pincha uchraydiganlari masalan:<br> - <code>ValueError</code> – Agar kutilgan qiymat berilmasa, masalan yoshni hisoblash uchun tug’ilgan yil kerak va bu butun son shaklidan bo’lishi kerak. Buni uchun foydalanuvchidan tugilgan yili suralganda, bilmasdan butun son emas, o’nli qilib kiritib qo’ysa, yoki matn shaklida, bu hatolik kelib chiqadi.</p>
<ul>
<li><p><code>TypeError</code> – Sonlar sutida amal bajargand, ularni turi bir-biriga mis kelmasa, malasan ikki sonni bo’lganda, ularni biri boshqa turga ega bo’lsa, masalan matn shaklida: x = 40, y = “10” -&gt; x / y.</p></li>
<li><p><code>KeyError</code> – bu asosan Python lug’atlarida (dictionaries) uchraydi, agar mavjud bo’lmagan kalit chaqirilganda.</p></li>
<li><p><code>ZeroDivisionError:</code> – Bu hatolik sonni 0 ga bo’lish amali bajarilganda kelib chiqadi, chunki sonni 0 ga bolib bolmaydi.</p></li>
<li><p><code>NameError:</code> – bu dastur paytida qandaydir mavjud bo’lmagan o’zgaruvchi nomi bilan biror bir o’zgaruvchiga murojaat qilingada kelib chiqadi.</p></li>
<li><p><em>va hokozo …</em></p></li>
</ul>
<p>Bunday hatoliklarda, dastur ishga tushirilganda shu hatoliklar uchragan joygacha kod bajarilada, hatolik yuz bersa u yogiga o’tmaydi, demak dastur to’xtab qoladi. Shunday hatoliklarni oldini olish uchun Python da <code>try:</code> va <code>except</code> lardan foydalaniladi. <code>try</code>- iofasini ishlash prinsipi quyidagicha:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb22-2">  </span>
<span id="cb22-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bu yerda bajarilishi kerak bolgan kod</span></span>
<span id="cb22-4">  </span>
<span id="cb22-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZeroDivisionError</span>:</span>
<span id="cb22-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bu yerda ZeroDivisionError hatosini tugrilaydigan kod</span></span>
<span id="cb22-7"></span>
<span id="cb22-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">TypeError</span>:</span>
<span id="cb22-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Buy erda TypeError ni haytosini tugrilaydigan kod</span></span></code></pre></div>
</div>
<p>Quyidagi misolda vazifa quyidagicha: ikkita <em>a</em> va <em>b</em> ro’yxat berilgan. Ro’yxat (a) elementlarini ro’yxatdagi (b) elementlaga bo’lish kerak. Buni uchun for- sikldan foydalaniladi. Ro’yxat elementöari ichida 0 va matn shaklidagilari ham bo’lgani sababli yuqoridagi hatoliklar uchrashi aniq. Buni try- va except bilan oldini olish kerak.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]   </span>
<span id="cb23-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb23-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a: "</span>, a)</span>
<span id="cb23-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a: "</span>, b)</span>
<span id="cb23-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"----------------------------------"</span>)</span>
<span id="cb23-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x, y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(a,b):</span>
<span id="cb23-7">  </span>
<span id="cb23-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb23-9">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>y</span>
<span id="cb23-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> / </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb23-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZeroDivisionError</span>:</span>
<span id="cb23-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> / </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = ZeroDivisionError: Sonni 0 ga bo'lib bo'lmaydi!"</span>)</span>
<span id="cb23-13">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb23-14">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb23-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">TypeError</span>:</span>
<span id="cb23-16">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> / </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = TypeError: Sonlar bir xil turda (int) bo'lishi kerak!"</span>)</span>
<span id="cb23-17">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(x)</span>
<span id="cb23-18">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(y)</span>
<span id="cb23-19">    </span>
<span id="cb23-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Tugadi, topshiriq muvaffaqiyatli bajarildi."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; a:  [1, 0, 4, 5, 4, 8]
#&gt; a:  [2, 1, 3, 0, '3', 4]
#&gt; ----------------------------------
#&gt; 1 / 2 = 0.5
#&gt; 0 / 1 = 0.0
#&gt; 4 / 3 = 1.3333333333333333
#&gt; 5 / 0 = ZeroDivisionError: Sonni 0 ga bo'lib bo'lmaydi!
#&gt; 4 / 3 = TypeError: Sonlar bir xil turda (int) bo'lishi kerak!
#&gt; 8 / 4 = 2.0
#&gt; 
#&gt; Tugadi, topshiriq muvaffaqiyatli bajarildi.</code></pre>
</div>
</div>
</section>
<section id="references" class="level1">




</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-py_PyVis" class="csl-entry">
Guy Hart-Davis, Ted Hart-Davis. 2022. <em><span>Teach Yourself VISUALLY Python</span></em>. John Wiley &amp; Sons, Inc.
</div>
<div id="ref-py_EinfachPy" class="csl-entry">
Inden, Michael. 2022. <em>Einfach Python</em>. dpunkt.verlag GmbH.
</div>
<div id="ref-r_SoWi" class="csl-entry">
Manderscheid, Katharina. 2017. <em><span class="nocase">Sozialwissenschaftliche Datenanalyse mit R</span></em>. Springer Fachmedien Wiesbaden.
</div>
<div id="ref-py_daPy" class="csl-entry">
McKinney, Wes. 2019. <em><span class="nocase">Datenanalyse mit Python</span></em>. dpunkt.verlag GmbH.
</div>
<div id="ref-LearnR" class="csl-entry">
Peng, Roger D. 2020. <em><span class="nocase">R Programming for Data Science</span></em>.
</div>
<div id="ref-py_Rot" class="csl-entry">
Sweigart, Al. 2020. <em>Routineaufgaben Mit Python Automatisieren</em>. 2nd ed. dpunkt.verlag GmbH.
</div>
<div id="ref-py_Python3" class="csl-entry">
Weigend, Michael. 2019. <em><span class="nocase">Python 3 : Lernen und professionell anwenden. Das umfassende Praxisbuch,</span></em>. 8th ed. Springer Gabler.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Python</category>
  <category>Uzbek</category>
  <category>Loop</category>
  <category>Control flow</category>
  <guid>https://sultanov.quarto.pub/blog/posts/loops/loops_uz.html</guid>
  <pubDate>Wed, 08 May 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>R &amp; Python: Data Structures
 in Uzbek</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/DataStructures/datastructures_uz.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/datastructure_uz.png" class="nolightbox img-fluid"></p>
<section id="set-up" class="level1 page-columns page-full">
<h1>Set Up</h1>
<p>Ushbu blogda kod bloki ya’ni input <span style="background-color: lightcyan"><em>R da ochiq ko’k </em></span> und in <span style="background-color: #FFF68F"><em>Python da sariq</em></span> rangda ko’rsatiladi. Output natijalarining satrlari <code>#&gt;</code> belgisi bilan boshlanadi.</p>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I useR!"</span>)</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; I useR!</span></span></code></pre></div>
</details>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I am a Pytonista"</span>)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; I am a Pytonista</span></span></code></pre></div>
</details>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p>
</div>
</div>
</div>
<div class="page-columns page-full"><p>Qo’shimcha ma’lumotlar qutiga quyidagi tarzda yozilgan va uni kengaytirish orqali ko’rish mumkin: </p><div class="no-row-height column-margin column-container"><span class="margin-aside">Qisqacha tushuncha yoki eslatmalar yon tomonda (o’ngda) izoh kabi keltiriladi.</span></div></div>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Expand for more
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>More Info here!</p>
</div>
</div>
</div>
</section>
<section id="data-structures" class="level1 page-columns page-full">
<h1>Data Structures</h1>
<div class="page-columns page-full"><p>Ma’lumotlarning asosiy turlari mavjud, ular Basic Data Types yoki Built-in Data Types deb ham ataladi. Ular qiymat belgilash yoki o’zgaruvchi ya’ni objecni yaratishda ushbu yaratilayotgan object/o’zgaruvchi qanaqa <strong>qiymatlarni</strong> qabul qilishi va ushbu objectlarga qaysi <strong>amallar</strong> qo’llanilishi mumkinligini aniqlaydi. Misol uchun <em>42</em> raqamini <em>var_number</em> nomli o’zgaruvchiga yuklash va uni <em>integer</em> turi bilan saqlash mumkin. Keyin bu o’zgaruvchi bilan ko’paytirish, qo’shish va boshqa amallarni bajarish mumkin. Shunday ekan, datalarni ya’ni <em>ma’lumotlarni real muhit haqidagi tizimli ravishda kodlangan informatsiyasi <span class="citation" data-cites="r_DMforSocial">(Weidmann 2023)</span></em> deb hisoblash mumkin.  Ma’lumotlar shundagina bizga foydali bulishi mumkin, qachonki ular saqlash, bo’lishish, tahlil qilish va unga har qanday amal va funksiyalarni qo’llash mumkin bo’lgan formatdga ega bo’lsa. Bu narsalarni, demak ma’lumotlarni boshqarish, qayta ishlash, saqlashni va shu kabi jarayonlarni <strong><em>Data Dstructure</em></strong>, ya’ni ma’lumotlar strukturasi belgilaydi. Yuqordiga fikrlarni mohiyatini <span class="citation" data-cites="r_DMforSocial">(Weidmann 2023)</span>ga asoslangan misol tariqasida batafsilroq tushunish mumkin.</p><div class="no-row-height column-margin column-container"><span class="margin-aside">Basic Data Types haqido to’liqroq: <a href="../../posts/DataTypes/datatypes_uz.html" target="_blank">R &amp; Python: Types of Data</a>.</span></div></div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">raw_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb3-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Germany is a country with 83.3 million population and its capital is</span></span>
<span id="cb3-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Berlin; Russia has 144.1 million population, capital of Russia is Moscow;</span></span>
<span id="cb3-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Another country is Uzbekistan with 35.5 million residents, its capital is</span></span>
<span id="cb3-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Tashkent.The last country is the USA with 341.2 million residents,</span></span>
<span id="cb3-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">the capital is Washington, D.C."</span></span></code></pre></div>
</div>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">Misolda Germaniya, O’zbekiston, Rossiya va AQSh da 2023 yildagi aholi soni, <span class="citation" data-cites="worldpop">(<span>“World Population Review”</span> Feb 2024)</span> web saytidan olingan.</span></div></div>
<p>Biz asosan <em>raw_data</em> objectini to’rtta mamlakat, ularning poytaxtlari va aholisi haqida ma’lumotni o’z ichiga olgan ma’lumotlar bazasi sifatida ko’rishimiz mumkin. Inson uchun bu matn shaklida saqlangan ma’lumotdan informatsiya ajratib olishi oson, masalan, qaysi mamlakat aholisi ko’proq, aholi sonlari ichida maximum yoki minimumi qaysi va hokazo. Lekin kompyuterlar uchun uni hisoblash yo’li bilan qayta ishlash tushunarli emas, chunki ma’lumotlar hech qanday <em>tuzilma</em>ga, ya’ni <em>struktura</em>ga ega emas. Ammo biz aynan shu matnni tarkibini o’zgartirmasdan boshqa shaklda, demak ma’lum bir tuzilishda, masalan <em>dataframe</em> shaklida saqlashimiz mumkin. Bunday holda ma’lumotlar kompyuterga tushunarli bo’ladi, ular ustida amallarni bajarib, ularni qayta ishlay oladi.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">df_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Germany"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Uzbekistan"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Russia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USA"</span>),</span>
<span id="cb4-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">population =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">83.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">35.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">144.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">341.2</span>),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">capital =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Berlin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tashkent"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Moscow"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Washington"</span>)</span>
<span id="cb4-5">)</span>
<span id="cb4-6">df_r</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt;      country population    capital
#&gt; 1    Germany       83.3     Berlin
#&gt; 2 Uzbekistan       35.5   Tashkent
#&gt; 3     Russia      144.1     Moscow
#&gt; 4        USA      341.2 Washington</code></pre>
</div>
</div>
<p>Ikkinchi misolda ma’lumotlar R dagi <code>data.frame</code> paketi orqali object (df_r) sifatiqda saqlangan. R da bu, Python dayam buning uchun <code>pandas</code> moduli bo’lgani kabi, ma’lumotlarni jadval shaklida saqlaydigan ma’lumotlar tuzilmasi hisoblanadi. Misolda har bir mamlakatda turli xil shakldagi ma’lumotlar mavjud. <em>County</em> va <em>Capital</em> - matn shaklida (R da character, Python da string), <em>Population</em> - real son shaklida (R da numeric/double, Python da float). Birinchi misolda oddiy matn <em>(raw_data)</em> sifatida saqlangan ma’lumotlar bilan taqqoslaganda, dataframe yoki jadval <em>(df_r)</em> sifatida saqlangan ma’lumotlarni tushunish va qayta ishlash (komputer uchun) osonroq.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum of population</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum of population: {sum(df_r$population)}"</span>)</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Max of Population</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max of Population: {max(df_r$population)}"</span>)</span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary of Data</span></span>
<span id="cb6-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary of data:"</span>)</span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(df_r)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Sum of population: 604.1
#&gt; Max of Population: 341.2
#&gt; 
#&gt; Summary of data:
#&gt;    country            population       capital         
#&gt;  Length:4           Min.   : 35.50   Length:4          
#&gt;  Class :character   1st Qu.: 71.35   Class :character  
#&gt;  Mode  :character   Median :113.70   Mode  :character  
#&gt;                     Mean   :151.03                     
#&gt;                     3rd Qu.:193.38                     
#&gt;                     Max.   :341.20</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb8-2">df_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(r.df_r)</span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum of population</span></span>
<span id="cb8-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Sum of population: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"population"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum of population</span></span>
<span id="cb8-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Sum of population: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"population"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary of Data</span></span>
<span id="cb8-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary of data:"</span>)</span>
<span id="cb8-9">df_py.describe()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Sum of population: 604.0999999999999
#&gt; Sum of population: 341.2
#&gt; 
#&gt; Summary of data:
#&gt;        population
#&gt; count    4.000000
#&gt; mean   151.025000
#&gt; std    134.346799
#&gt; min     35.500000
#&gt; 25%     71.350000
#&gt; 50%    113.700000
#&gt; 75%    193.375000
#&gt; max    341.200000</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="how-is-the-data-are-structured-in-r-and-python" class="level1 page-columns page-full">
<h1>How is the data are structured in R and Python</h1>
<p>Ma’lumotni qayerda, R yoki Python da, qayta ishlasak ham, u ikkala tilda ham <strong><em>Object</em></strong> sifatida saqlanadi. Objectlar, masalan, qiymatni (object) o’zgaruvchiga (object nomi) belgilash orqali yaratilishi mumkin. Aytaylik, biz <em>age</em> deb nomlangan objectni yaratamiz va unga <em>35</em> (yosh) qiymatini beramiz: <code>age &lt;- 35</code> (R da) und <code>age = 35</code> (Python da). Lekin ko’pincha biz minglab objectlarni birma-bir qo’lda yaratishni (age1, age2, age3, …) xohlamaymiz, aksincha barcha <em>yosh (object)</em>-larni (ya’ni age1, age2, …), o’z ichiga olgan <em>ages</em> deb nomlangan ro’yxat shaklida bo’lsa bizga qulayroq. Ikkinchi usulda bu <strong><em>guruhlangan ma’lumotlar strukturasi (grupped data structure)</em></strong>ga, ya’ni bir nechta alohida objectlardan tashkil topgan objectga aylanadi. Bunaqa strukturaga ega bo’lgan, <strong><em>Lists</em></strong>, <strong><em>Vectors</em></strong>, <strong><em>Arrays</em></strong>, <strong><em>Series</em></strong>, <strong><em>Dictionaries</em></strong> etc. kabi turli xil objectlar mavjud. Ular formati, tuzilishi, metodi va boshqalar bilan farqlanadi, lekin asosiy mohiyati bir xil: <em>bir nechta objectlar guruhlangan yoki birlashtirilgan objectda (yuqoridagi ma’lumotlar tuzilmalaridan birning shaklida) saqlanadi</em>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1">ages_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>)</span>
<span id="cb10-2">names_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ben"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brandon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dirk"</span>)</span>
<span id="cb10-3">ages_r</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ages_r)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of ages_r</span></span>
<span id="cb10-5">names_r</span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(names_r)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of names_r</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 35 24 42 24 52 35 37
#&gt; [1] "numeric"
#&gt; [1] "Ali"     "Temur"   "Ben"     "Brandon" "John"    "Doe"     "Dirk"   
#&gt; [1] "character"</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More about <code>c()</code> in R
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>R da ketma-ketliklar <code>c()</code> <em>(c- combine)</em> yordamida yaratiladi. Python da objectlar yoki ma’lumotlarni <code>[]</code> shaklida kiritiladi.</p>
</div>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1">ages_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>]</span>
<span id="cb12-2">names_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ben"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brandon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dirk"</span>]</span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ages_py)</span>
<span id="cb12-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ages_py)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of ages_py</span></span>
<span id="cb12-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(names_py)</span>
<span id="cb12-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(names_py)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of names_py</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [35, 24, 42, 24, 52, 35, 37]
#&gt; &lt;class 'list'&gt;
#&gt; ['Ali', 'Temur', 'Ben', 'Brandon', 'John', 'Doe', 'Dirk']
#&gt; &lt;class 'list'&gt;</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="page-columns page-full"><p>Yuqoridagi misol tariqasida yaratilgan ro’yxatlar (ages, names) R va Python da o’xshash, faqat bu objectlar R da <strong>Vector</strong>, Python da <strong>List</strong> deb ataladi. Lekin R va Python da ro’yxatlardan tashqari boshqa ma’lumotlar tuzilmalari ham mavjudki, ular xususiyatlari jihatidan bir biriga o’xshaydi yoki farq qiladi. Ma’lumotlar tuzilmalarini R va Python da o’xshash yoki farq nuqtai nazaridan solishtirganda, <span style="color:red;">muhimi narsa bu objectlarning <em>bir hil (homogeneous)</em> yoki <em>har hil (heterogeneous)</em> bo’lishi</span>dir, manimcha. </p><div class="no-row-height column-margin column-container"><span class="margin-aside"><strong>homogeneous</strong> – (однородный) objectlar bir xil turda bo’ladi (barcha objectlar faqat raqamlar yoki matnlarddan iborat), masalan R dagi Vector, NumPy dagi arraylar yoki Python dagi faqat <em>bir xil turdagi ma’lumot turlaridan iborat bo’lgan ro’yxatlar</em>. Vektoren in R oder NumPy-Arrays oder Liste <em>mit gleichen Datentypen</em> in Python <strong>heterogeneous</strong> – (неоднородный) objectlar har xil turda bo’ladi, R dagi list, Python dagi list (har xil turdagi objectlaR dan tashkil topgan) yoki dictionary</span></div></div>
<section id="data-structures-in-r" class="level2">
<h2 class="anchored" data-anchor-id="data-structures-in-r">Data Structures in R</h2>
<p>R dagi muhim ma’lumotlar tuzilmalari ikkita asosiy tamopyil bilan aniqlanishi mumkin. Biri bu <strong>o’lcham (dimension)</strong>, ya’ni objectning qancha o’lchamga ega ekanligi bilan: bitta o’lchovli (vevtor), ikkita o’lchovli (matritsa) va undan ko’p (massivlar). Yana biri bu ularning farqlanish xususiyatlari, ya’ni biror objectning elementlari <strong>bir xil</strong> - masalan faqar matn yoki faqat sonlaR dan iborat, yoki <strong>har xil</strong> - son va matnlaR dan iborat. Ushbu xususiyatlarga asoslanib, markaziy object turlarini R da quyidagicha umumlashtirish mumkin <span class="citation" data-cites="r_ModernDA">(Sauer 2019)</span>:</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th style="text-align: left;">Dimension</th>
<th style="text-align: left;">Homogen</th>
<th style="text-align: left;">Heterogen</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1d</td>
<td style="text-align: left;">Vector</td>
<td style="text-align: left;">List</td>
</tr>
<tr class="even">
<td style="text-align: left;">2d</td>
<td style="text-align: left;">Matrix</td>
<td style="text-align: left;">Dataframe</td>
</tr>
<tr class="odd">
<td style="text-align: left;">nd</td>
<td style="text-align: left;">Array</td>
<td style="text-align: left;"></td>
</tr>
</tbody>
</table>
<p>Vektorlar R dagi eng muhim ma’lumotlar tuzilmalaridan biri bo’lib, R objectlarida markaziy elementni ifodalaydi: To’rt turdagi atomik yoki sof vektorlar mavjud: <code>Logical</code>, <code>Integer</code>, <code>Double</code> und <code>Character</code> (matndan iborat). R da <em>integer</em> va <em>double</em> turidagi ma’lumotlar <code>numeric</code> sifatida umumlashtirilgan, yani ikkovi ham numeric sifatida ko’rsatiladi. Quyida <span class="citation" data-cites="r_AdvancedR">(Wickham 2019)</span>ga ko’ra atomar ya’ni sof vektorlarining umumiy ko’rinishi keltirilgan.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/ds_r.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Atomar Vectors"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/ds_r.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Atomar Vectors</figcaption>
</figure>
</div>
</section>
<section id="data-structures-in-python" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="data-structures-in-python">Data Structures in Python</h2>
<p>Demak, ma’lumotlar tuzilmalari ma’lumotlarni turlari bo’yicha tartibga soluvchi va guruhlaydigan “konteynerlar” sifatida qaralsa boladi. Python dagi asosiy Python ma’lumotlar tuzilmalari ro’yxat (list), to’plam (set), kortej (tuple) va lug’at (dict) larni o’z ichiga oladi. Bu ma’lumotlar tuzilmalari <em>Built-in Data Structure</em> deb ham ataladi va ularning har biri o’ziga xos xususiyatga ega. <br> - <code>lists</code> <br> - <code>ditionaries</code> <br> - <code>tuples</code> <br> - <code>sets</code></p>
<p><br>Bundan tashqari Arrays va Dataframes(Jadvallar) mavjud bo’lib, ular qator va ustunlarga ega. Bunga o’xshash misol qilib, Excel-jadvallari yoki ma’lumotlar bazasini keltirisch mumkin. <br> - <code>arrays</code> from NumPy (Numerical Python) <br> - <code>DataFrame</code> from Pandas</p>
<p>Quyida malumotlar tuzilmasini R va Python da umumlashtirilgan holatda vizual tarzda grafikda tasvirlangani keltirilgan</p>
<div class="column-screen-inset">
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Manbaa: <a href="https://r.qcbs.ca/workshop01/pres-en/workshop01-pres-en.html#100" target="_blank">Internet</a> <img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/r_ds.png" class="img-fluid" alt="Data Structures in R"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Manbaa: <a href="https://www.linkedin.com/posts/venkateshpappakrishnan_data-structures-in-python-python-for-aspiring-activity-6447685118260756480-rU36/?trk=public_profile_like_view" target="_blank">Internet</a> <img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/py_ds.png" class="img-fluid" alt="Data Structures in Python"></p>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="homogeneous-data-structure" class="level1">
<h1>Homogeneous data structure</h1>
<p>Yuqorida aytib o’tilganidek, bir hil ma’lumotlar tuzilmalari bir xil turdagi ma’lumotlarni (objectlar yoki elementlarni) o’z ichiga oladi. Ko’pincha ma’lumotlar shu tarzda saqlanadi. Bunday turdagi ma’lumotlarga R dagi vektorlarni (Python dagi 1d-NumPy-Massivlar), matrisalarni (Python dagi 2d-NumPy-Massivlar) va massivlarni (Python dagi nd-NumPy-Massivlar) misol qilish mumkin.</p>
<section id="vector-in-r-and-arrays-series-in-python" class="level2">
<h2 class="anchored" data-anchor-id="vector-in-r-and-arrays-series-in-python"><code>vector</code> in R and <code>arrays</code> &amp; <code>Series</code> in Python</h2>
<p>R dagi vektorlar bi xil tudagi ma’lumotlarga ega bo’lgan bir o’lchovli ma’lumot tizilmalaridir. Bu belgilari bilan vektorlar Python dagi 1d-NumPy-Arrays va Pandas-Series lar bilan umumiy xususiyatga ega. R dagi vektorlar ham Python dagi ro’yxatga (list) o’xshaydi, <em>lekin faqat Python ro’yxatidagi ma’lumotlar bir xil turga ega bo’lsa</em>.</p>
<!-- [Achrung!]{style="color:red;"} --  -->
<section id="creating" class="level3">
<h3 class="anchored" data-anchor-id="creating">Creating</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<p>– with <code>c()</code> (like <code>[]</code> in Python)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1">v1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>); v1</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v1)</span>
<span id="cb14-3">v2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f"</span>); v2</span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v2)</span>
<span id="cb14-5">v3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logical"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); v3</span>
<span id="cb14-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v3)</span>
<span id="cb14-7">v4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>); v4</span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v4)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 1 7 2 4 5 8 2 9
#&gt; [1] "numeric"
#&gt; [1] "a" "b" "c" "z" "f"
#&gt; [1] "character"
#&gt; [1] FALSE FALSE FALSE FALSE FALSE
#&gt; [1] "logical"
#&gt; [1] 0 0 0 0 0 0 0
#&gt; [1] "numeric"</code></pre>
</div>
</div>
</div>
<p>– with <code>seq(from, to, by)</code> (like <code>range(from, to, by)</code> in Python or <code>arange()</code> from NumPy)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1">seq1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>; seq1                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from 2 to 9</span></span>
<span id="cb16-2">seq2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); seq2                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from 1 to 5</span></span>
<span id="cb16-3">seq3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); seq3 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># step = 3</span></span>
<span id="cb16-4">seq4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); seq4     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># count = 5</span></span>
<span id="cb16-5">seq5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">along.with =</span> seq4); seq5 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seq of same length with seq4</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 2 3 4 5 6 7 8 9
#&gt; [1] 1 2 3 4 5
#&gt; [1] 3 6 9
#&gt; [1]  3.00  4.75  6.50  8.25 10.00
#&gt; [1] 11.0 12.5 14.0 15.5 17.0</code></pre>
</div>
</div>
</div>
<p>– with <code>rep()</code> (like <code>np.repeat()</code> from NumPy or <code>pd.rep()</code> from Pandas)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">rep1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); rep1 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeating seq 3 times</span></span>
<span id="cb18-2">rep2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); rep2  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeating each obj 3 times</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 1 2 3 1 2 3 1 2 3
#&gt; [1] 1 1 1 2 2 2 3 3 3</code></pre>
</div>
</div>
</div>
<p>– with <code>sample()</code> or <code>runif()</code> (like <code>random.choice()</code> from NumPy)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1">smp1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>); smp1</span>
<span id="cb20-2">vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neutral"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>)</span>
<span id="cb20-3">smp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(vec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>); smp2</span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vector with 5 elements:</span></span>
<span id="cb20-5">run1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); run1</span>
<span id="cb20-6">run2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>); run2</span>
<span id="cb20-7">run3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)); run3</span>
<span id="cb20-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normal distribution</span></span>
<span id="cb20-9">rn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); rn</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 5 9 3 7 4
#&gt; [1] "positive" "negative" "neutral"  "neutral"  "positive"
#&gt; [1] 0.3537153 0.2050273 0.8014935 0.6748722 0.4180435
#&gt; [1] 5.482090 8.513366 3.509195
#&gt;  [1] 36 86 69 80 25 48 54 32 70 72 39  3  2 28 64
#&gt; [1]  1.3260384 -0.8598712  0.1403112  1.2711931  0.2855230</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<p>– with <code>[]</code> like <code>c()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb22-2"></span>
<span id="cb22-3">v1_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v1_p)</span>
<span id="cb22-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v1_p)</span>
<span id="cb22-5">v2_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v2_p)</span>
<span id="cb22-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v2_p)</span>
<span id="cb22-7">v3_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v3_p)</span>
<span id="cb22-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v3_p)</span>
<span id="cb22-9">v4_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ones((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v4_p) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rep(1,7) in R</span></span>
<span id="cb22-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v4_p)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1, 7, 2, 4, 5, 8, 2, 9]
#&gt; &lt;class 'list'&gt;
#&gt; [False False False False False]
#&gt; &lt;class 'numpy.ndarray'&gt;
#&gt; [0 0 0 0 0 0 0]
#&gt; &lt;class 'numpy.ndarray'&gt;
#&gt; [1 1 1 1 1 1 1]
#&gt; &lt;class 'numpy.ndarray'&gt;</code></pre>
</div>
</div>
</div>
<p>– with <code>arange()</code> like <code>seq()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1">ar1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar1                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pythonlist</span></span>
<span id="cb24-2">ar2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar2             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># python list</span></span>
<span id="cb24-3">ar3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar3                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NumPy 1d array</span></span>
<span id="cb24-4">ar4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar4                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># step = 3 </span></span>
<span id="cb24-5">ar5 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, retstep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>ar5 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># count = 5, with step = 1.75    </span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [0, 1, 2, 3, 4]
#&gt; [2, 3, 4, 5, 6, 7, 8, 9]
#&gt; array([2, 3, 4, 5, 6, 7, 8, 9])
#&gt; array([3, 6, 9])
#&gt; (array([ 3.  ,  4.75,  6.5 ,  8.25, 10.  ]), 1.75)</code></pre>
</div>
</div>
</div>
<p>– with <code>np.repeat()</code> or <code>pd.Series.repeat()</code> like <code>rep()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb26-2"></span>
<span id="cb26-3">rep1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep1             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Python</span></span>
<span id="cb26-4">rep2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.tile(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep2      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NumPy: repeating seq 3 times</span></span>
<span id="cb26-5">rep3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.repeat(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep3    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NumPy: repeating each obj 3 times</span></span>
<span id="cb26-6">rep4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)).repeat(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep4 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pandas Series: repeating each obj 2 times</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1, 2, 3, 1, 2, 3, 1, 2, 3]
#&gt; array([1, 2, 3, 1, 2, 3, 1, 2, 3])
#&gt; array([1, 1, 1, 2, 2, 2, 3, 3, 3])
#&gt; 0    1
#&gt; 0    1
#&gt; 1    2
#&gt; 1    2
#&gt; 2    3
#&gt; 2    3
#&gt; dtype: int64</code></pre>
</div>
</div>
</div>
<p>– with <code>random()</code> like <code>sample()</code> or <code>runif()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb28-2">lis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neutral"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>]</span>
<span id="cb28-3">rd1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(lis, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, replace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rd1)</span>
<span id="cb28-4">rd2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.rand(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rd2                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5 random numbers</span></span>
<span id="cb28-5">rd3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rd3  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># integer random numbers from 0 to 100</span></span>
<span id="cb28-6">rd4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rd4                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># standard normal distribution</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; ['neutral' 'negative' 'positive' 'neutral' 'negative']
#&gt; array([0.25204178, 0.6272701 , 0.36329345, 0.51333149, 0.44805849])
#&gt; array([43, 22, 41, 23, 58])
#&gt; array([1.16180671, 0.53726394, 0.22335244, 1.64363635])</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="slicing" class="level3">
<h3 class="anchored" data-anchor-id="slicing">Slicing</h3>
<p>Vektorlar, ro’yxatlar va bir o’lchovli massivlarga qo’llanilishi mumkin bo’lgan eng muhim foydali operatsiyalaR dan biri <em>indekslash</em>dir. Bunda biz alohida elementlarni yoki elementlaR dan iborat kichik to’plamlarini joylashuvi <em>(indeks)</em> bo’yicha ajratib olishimiz mumkin.</p>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><span style="background-color:yellow;">Birinchi Elementning indksi R da – <strong><code>1</code></strong>, Python da – <strong><code>0</code></strong>, ya’ni Elementlar joylashuvi R da biR dan, Python da esa noldan boshlanadi.</span> Vektor, ro’yxat yoki 1d - massivning uzunligini R da <code>length(Obj)</code> funksiyasi va Python da <code>len(Obj)</code> funksiyasi yoR damida aniqlash mumkin.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/index.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="Indexes in R and Python"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/index.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Indexes in R and Python</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In Python</span></span>
<span id="cb30-2">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]</span>
<span id="cb30-3">lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first element</span></span>
<span id="cb30-4">lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second element</span></span>
<span id="cb30-5">lst[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># last element</span></span>
<span id="cb30-6">lst[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># backward</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In R</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Used Variable lst created in Python Chunk</span></span>
<span id="cb31-3">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first element</span></span>
<span id="cb31-4">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second element</span></span>
<span id="cb31-5">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst)]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># last element</span></span>
<span id="cb31-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst)              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># backward</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 1
#&gt; 3
#&gt; 7
#&gt; [7, 5, 3, 1]</code></pre>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 1
#&gt; [1] 3
#&gt; [1] 7
#&gt; [1] 7 5 3 1</code></pre>
</div>
</div>
</div>
</div>
<p>Quyida to’plamlar va mantiqiy indekslashga yana misollar keltirilgan. Mantiqiy indekslashda mantiqiy qiymati TRUE bo’lgan elementlar qaytariladi.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb34-1">age <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb34-2">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from first until fifth element</span></span>
<span id="cb34-3">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from third until seventh element</span></span>
<span id="cb34-4">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(age)]   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from fifth until last element</span></span>
<span id="cb34-5">age[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)]        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second, fifth and seventh element</span></span>
<span id="cb34-6">age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logic </span></span>
<span id="cb34-7">age[age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>]        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># age under 30</span></span>
<span id="cb34-8">age[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with which()</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 18 26 32 41 55
#&gt; [1] 32 41 55 22 35
#&gt; [1] 55 22 35 37 20 25
#&gt; [1] 26 55 35
#&gt;  [1]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE
#&gt; [1] 18 26 22 20 25
#&gt; [1] 18 26 22 20 25</code></pre>
</div>
</div>
</div>
<p>Elementlarga nomi bilan ham murojaat qilinishimiz mumkin, lekin faqat ular nomlangan bo’lsa (Chunki R da vektor yoki list elementlari nomlanishi yoki nomlanmasligiyam mumin). Buni Pandas-Series da indeks nomi bo‘yicha elementlarni tanlash orqali ham qilish mumkin:</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb36-1">note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>); note</span>
<span id="cb36-2">note[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname</span></span>
<span id="cb36-3">note[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span>)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname multiple elements</span></span>
<span id="cb36-4">note[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by index</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt;   best medium   good    bad 
#&gt;      5      4      3      2 
#&gt; medium 
#&gt;      4 
#&gt; good  bad 
#&gt;    3    2 
#&gt; good 
#&gt;    3</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb38-1">age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(r.age)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create array from r vector age</span></span>
<span id="cb38-2">age[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from first until fifth element</span></span>
<span id="cb38-3">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from third until seventh element</span></span>
<span id="cb38-4">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from fifth until last element</span></span>
<span id="cb38-5">[age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second, fifth and seventh elem</span></span>
<span id="cb38-6">age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logic </span></span>
<span id="cb38-7">age[age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>]            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># age under 30</span></span>
<span id="cb38-8">age[np.where(age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with np.where()</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; array([18., 26., 32., 41., 55.])
#&gt; array([32., 41., 55., 22., 35.])
#&gt; array([55., 22., 35., 37., 20., 25.])
#&gt; [32.0, 22.0, 37.0]
#&gt; array([ True,  True, False, False, False,  True, False, False,  True,
#&gt;         True])
#&gt; array([18., 26., 22., 20., 25.])
#&gt; array([18., 26., 22., 20., 25.])</code></pre>
</div>
</div>
</div>
<p>Pandas-Series da ham elementlarga ularning joylashuvi yoki nomi bilan murojaat qilish mumkin, R dagi <em>named vector</em>dagi kabi.</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb40-1">note <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best"</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> note</span>
<span id="cb40-2">note[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname</span></span>
<span id="cb40-3">note[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname multiple elements</span></span>
<span id="cb40-4">note.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by index</span></span>
<span id="cb40-5">note.iloc[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by index multiple elements</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; bad       2
#&gt; good      3
#&gt; medium    4
#&gt; best      5
#&gt; dtype: int64
#&gt; 3
#&gt; best    5
#&gt; bad     2
#&gt; dtype: int64
#&gt; 4
#&gt; good      3
#&gt; medium    4
#&gt; best      5
#&gt; dtype: int64</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="matrix-in-r-and-2d-array-in-python" class="level2">
<h2 class="anchored" data-anchor-id="matrix-in-r-and-2d-array-in-python"><code>matrix</code> in R and <code>2d-Array</code> in Python</h2>
<p>R da matrisalar bu ikki o’lchamli vektorlar bo’lib, sonlaR dan iborat va shu bilan birga bir xil turdagi elementlaR dan tashkil topgan. Ularni <code>matrix(data, nrow, ncol)</code> funksiyasi yoR damida yaratish mumkin. Python da matritsalar yaratish uchun aniq funktsiya yo’q. Python dagi matritsalar asosan <em>2d-NumPy -massivlaridir</em>. Elementlarni ajratish uchun vektorlar yoki 1d-NumPy-massivlari ga qo’llanadiga metodlar qo’llaniladi (oldingi bob), demak qator indeksiga qo’shimcha ravishda ustun indeksi ham to’rtburchakli qavsga <code>[]</code> kiritiladi.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb42-1">matrix_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span> )</span>
<span id="cb42-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3x4-Matix filling by columns (matrix_c):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>);<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(matrix_c)</span>
<span id="cb42-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix_c</span></span>
<span id="cb42-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dimension of matrix_c: {dim(matrix_c)}"</span>)</span>
<span id="cb42-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matrix_c</span></span>
<span id="cb42-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shape of matrix_c: ({nrow(matrix_c)}, {ncol(matrix_c)})"</span>)</span>
<span id="cb42-7">matrix_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> )</span>
<span id="cb42-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">4x3-Matix filling by rows (matrix_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>);<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(matrix_r)</span>
<span id="cb42-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix_r</span></span>
<span id="cb42-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dimension of matrix_r: {dim(matrix_r)}"</span>)</span>
<span id="cb42-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matrix_r</span></span>
<span id="cb42-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shape of matrix_r: ({nrow(matrix_r)}, {ncol(matrix_r)})"</span>)</span>
<span id="cb42-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb42-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Slicing:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-15">matrix_c[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2, col 3</span></span>
<span id="cb42-16">matrix_c[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column 4</span></span>
<span id="cb42-17">matrix_c[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># columns 2 and 4</span></span>
<span id="cb42-18">matrix_r[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2</span></span>
<span id="cb42-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name cols &amp; rows</span></span>
<span id="cb42-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">name the columns and rows of matrix "matrix_r":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb42-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(matrix_r) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col3"</span>)</span>
<span id="cb42-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(matrix_r) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row4"</span>)</span>
<span id="cb42-23">matrix_r</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 3x4-Matix filling by columns (matrix_c):
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    1    4    7   10
#&gt; [2,]    2    5    8   11
#&gt; [3,]    3    6    9   12
#&gt; Dimension of matrix_c: 3
#&gt; Dimension of matrix_c: 4
#&gt; Shape of matrix_c: (3, 4)
#&gt; 
#&gt; 4x3-Matix filling by rows (matrix_r):
#&gt;      [,1] [,2] [,3]
#&gt; [1,]    1    2    3
#&gt; [2,]    4    5    6
#&gt; [3,]    7    8    9
#&gt; [4,]   10   11   12
#&gt; Dimension of matrix_r: 4
#&gt; Dimension of matrix_r: 3
#&gt; Shape of matrix_r: (4, 3)
#&gt; 
#&gt; Slicing:
#&gt; [1] 8
#&gt; [1] 10 11 12
#&gt;      [,1] [,2]
#&gt; [1,]    4   10
#&gt; [2,]    5   11
#&gt; [3,]    6   12
#&gt; [1] 4 5 6
#&gt; 
#&gt; name the columns and rows of matrix "matrix_r":
#&gt;      col1 col2 col3
#&gt; row1    1    2    3
#&gt; row2    4    5    6
#&gt; row3    7    8    9
#&gt; row4   10   11   12</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb44-1">matriks_c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>)</span>
<span id="cb44-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"3x4-Matix filling by columns (matriks_c):</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix matriks_c</span></span>
<span id="cb44-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Dimension of matrix matriks_c: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ndim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matriks_c</span></span>
<span id="cb44-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Shape of matriks_c: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># np.shape(matriks_c)[0]; np.shape(matriks_c)[1]</span></span>
<span id="cb44-8">matriks_r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>)</span>
<span id="cb44-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4x3-Matix filling by rows (matriks_r):</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix matriks_r</span></span>
<span id="cb44-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Dimension of matrix matriks_r: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ndim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matriks_r</span></span>
<span id="cb44-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Shape of matriks_r: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># np.shape(matriks_r)[0]; np.shape(matriks_r)[1]</span></span>
<span id="cb44-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb44-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Slicing:"</span>)</span>
<span id="cb44-17">matriks_c[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2, col 3</span></span>
<span id="cb44-18">matriks_c[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column 4</span></span>
<span id="cb44-19">matriks_c[:, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># columns 2 and 4</span></span>
<span id="cb44-20">matriks_r[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2</span></span>
<span id="cb44-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name cols &amp; rows</span></span>
<span id="cb44-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">name the columns and rows of matrix "matriks_r":'</span>)</span>
<span id="cb44-23">colnames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col3"</span>]</span>
<span id="cb44-24">rownames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row4"</span>]</span>
<span id="cb44-25">pd.DataFrame(matriks_r, columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colnames, index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rownames)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 3x4-Matix filling by columns (matriks_c):
#&gt; [[ 1  4  7 10]
#&gt;  [ 2  5  8 11]
#&gt;  [ 3  6  9 12]]
#&gt; Dimension of matrix matriks_c: 2
#&gt; Shape of matriks_c: (3, 4)
#&gt; 
#&gt; 4x3-Matix filling by rows (matriks_r):
#&gt; [[ 1  2  3]
#&gt;  [ 4  5  6]
#&gt;  [ 7  8  9]
#&gt;  [10 11 12]]
#&gt; Dimension of matrix matriks_r: 2
#&gt; Shape of matriks_r: (4, 3)
#&gt; 
#&gt; Slicing:
#&gt; 8
#&gt; array([10, 11, 12])
#&gt; array([[ 4, 10],
#&gt;        [ 5, 11],
#&gt;        [ 6, 12]])
#&gt; array([4, 5, 6])
#&gt; 
#&gt; name the columns and rows of matrix "matriks_r":
#&gt;       col1  col2  col3
#&gt; row1     1     2     3
#&gt; row2     4     5     6
#&gt; row3     7     8     9
#&gt; row4    10    11    12</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="multidimensional-arrays" class="level2">
<h2 class="anchored" data-anchor-id="multidimensional-arrays">Multidimensional arrays</h2>
<p>R dagi (ko’p o’lchamli) massivlar <code>array(vector, dim = c(nrow, ncol, nmat))</code> funksiyasi yoR damida yaratiladi. Bunda <em>Vektor</em> - bir xil turdagi ma’lumotlar qatori, <em>nrow</em> va <em>ncol</em> - satr va ustun raqamlari, <em>nmat</em> - o’lchamni, ya’ni massivdagi <code>nrow*ncol</code> matritsalar sonini bildiradi.</p>
<p>Python da massivlar yaratish uchun <code>numpy.arange()</code>, <code>numpy.zeros()</code>, <code>numpy.ones()</code> kabi bir nechta funksiyalar mavjud. Quyida R va Python da 3D massiv, shuningdek, elementlarni kesish yoki ajratish (slicing) va qator va ustunlarning yig’indini hisoblash ko’rsatilgan.</p>
<p>Quyida 3D massivda slicing va ushbu massivda yig’indini hisoblash misoli tariqasida vizual va amaliy ravishda keltirilgan.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-6-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-1" aria-controls="tabset-6-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-6-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-2" aria-controls="tabset-6-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-6-1" class="tab-pane active" aria-labelledby="tabset-6-1-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/arr_r.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3" title="3d Array with twice 3x4 2d-Arrays"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/arr_r.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>3d Array with twice 3x4 2d-Arrays</figcaption>
</figure>
</div>
<p><strong>Slicing</strong> <br> Vektorlar hamda 1d- yoki 2d- massivlaR da bo’lgani kabi, 3D massivlaR da ham massivdan alohida biror elementni yoki bir necha elementladan iborat biror to’plamni ajratib ya’ni kesib olish mumkin. Bunda element indeksi yoki elementlar indekslari bizga tanish bo’lgan kvadrat qavslar <code>[]</code> ichiga kiritiladi. Yuqoridagi rasmda misol qilib keltirilgan massiv shape = (3, 4, 2) shakl yoki formatga ega. Buni R dagi <code>dim(array)</code> va Python dagi <code>array.shape</code> funksiyalari orqali aniqlash mumkin. Qavs ichidagi sonlar: 3 - qator, 4 - ustun va 3 - o’lchamni bildiradi. Bu degani, misolda keltirilgan massiv 3 ta qator va 4 ta ustundan iborat ikkita matrisadan tashkil topgan. Indekslashda to’g’ri pozitsiyani kiritish kerak bo’ladi, ya’ni (R da) kvadrat qavsga birinchi qator positsiyasi, ikkinchi ustun va uchunchi matrisa positsiyani berish kerak. Masalan, <code>arr_r[, , 2]</code> barcha satr va ustunlar bilan ikkinchi matritsani qaytaradi. Matrisalarni arraydagi qatlam deb tasavvur qilsayam bo’ladi, misoldagi array demak 2 ta qatlam yani matrisalaR dan iborat (3 qator 4 ustun bilan).</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create 3d-array</span></span>
<span id="cb46-2">arr_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb46-3">arr_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aperm</span>(arr_r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">perm =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb46-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3d-Array:"</span>)</span>
<span id="cb46-5">arr_r</span>
<span id="cb46-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shape: "</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(arr_r), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1st matrix/2d-Array of the 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-8">arr_r[, , <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb46-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Element in 2nd row and 1st col of the 2nd matrix from 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-10">arr_r[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb46-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3rd column elements of the 2nd matrix from 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-12">arr_r[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb46-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2nd row elements of the 1st matrix from 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-14">arr_r[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), , <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb46-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Check if elemnt (9) exist in the array:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-16"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> arr_r</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 3d-Array:, , 1
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    0    1    2    3
#&gt; [2,]    4    5    6    7
#&gt; [3,]    8    9   10   11
#&gt; 
#&gt; , , 2
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]   12   13   14   15
#&gt; [2,]   16   17   18   19
#&gt; [3,]   20   21   22   23
#&gt; 
#&gt; Shape:  3 4 2 
#&gt; 
#&gt; 1st matrix/2d-Array of the 3d-Array (arr_r):
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    0    1    2    3
#&gt; [2,]    4    5    6    7
#&gt; [3,]    8    9   10   11
#&gt; 
#&gt; Element in 2nd row and 1st col of the 2nd matrix from 3d-Array (arr_r):
#&gt; [1] 16
#&gt; 
#&gt; 3rd column elements of the 2nd matrix from 3d-Array (arr_r):
#&gt; [1] 14 18 22
#&gt; 
#&gt; 2nd row elements of the 1st matrix from 3d-Array (arr_r):
#&gt; [1] 4 5 6 7
#&gt; 
#&gt; Check if elemnt (9) exist in the array:
#&gt; [1] TRUE</code></pre>
</div>
</div>
</div>
<p><strong>Operations</strong> <br> R dagi massivlar yig’indisini hisoblash uchun <code>rowSums()</code> - satrlar yig’indisi, <code>colSums()</code> - ustunlar yig’indisi, funksiyalaridan foydalanish mumkin. R da ham Python dagi kabi <code>sum()</code> funksiyasi mavjud, lekin bu yeR da buni <code>apply</code> funksiyasi bilan birga qo’llash kerak.</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3d-Array:"</span>)</span>
<span id="cb48-2">arr_r</span>
<span id="cb48-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum by row-wise with rowSums:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(arr_r)</span>
<span id="cb48-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by row-wise with apply, same like rowSums:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(arr_r, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), sum)</span>
<span id="cb48-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by column-wise with colSums:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(arr_r)</span>
<span id="cb48-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by column-wise with apply</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(arr_r, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), sum)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 3d-Array:, , 1
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    0    1    2    3
#&gt; [2,]    4    5    6    7
#&gt; [3,]    8    9   10   11
#&gt; 
#&gt; , , 2
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]   12   13   14   15
#&gt; [2,]   16   17   18   19
#&gt; [3,]   20   21   22   23
#&gt; 
#&gt; Sum by row-wise with rowSums:
#&gt; [1]  60  92 124
#&gt; 
#&gt; Sum by row-wise with apply, same like rowSums:
#&gt; [1]  60  92 124
#&gt; 
#&gt; Sum by column-wise with colSums:
#&gt;      [,1] [,2]
#&gt; [1,]   12   48
#&gt; [2,]   15   51
#&gt; [3,]   18   54
#&gt; [4,]   21   57
#&gt; 
#&gt; Sum by column-wise with apply
#&gt; [1] 60 66 72 78</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-6-2" class="tab-pane" aria-labelledby="tabset-6-2-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/arr3d.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4" title="3d Array with twice 3x4 2d-Arrays"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/arr3d.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>3d Array with twice 3x4 2d-Arrays</figcaption>
</figure>
</div>
<p><strong>Slicing</strong> <br> <code>array.shape</code> funksiyasi yuqoridagi misoldagi massivdan = (2, 3, 4) shaklini qaytaradi. Ya’ni, birinchi son - 2, o’lchamni, ikkinchi son - 3, qatorni va uchinchi son - 4, ustunni qaytariyapti. Bu massivda har birida 3 ta satr va 4 ta ustundan iborat 2 ta matritsa borligini bildiradi. Tasavvur qiling, bitta kubik bor. Agar biz shu kubikni o’rtasidan kessak, ikkita matrisa yoki 2d_massivga ajraladi. Har bir matrisani massivning qatlami yoki jadvali (layer/sheet) deb tasavvur qisa bo’ladi. Indekslashda to’g’ri pozitsiyani kiritish kerak bo’ladi, ya’ni (Python da) kvadrat qavsga birinchi matrisa positsiyani, ikkinchi qator va uchunchi ustun positsiyani berish kerak (Shu yeR da ahamiyat berilgan bo’lsa R da boshqacharoq edi: 1chi - qator, 2chi - ustun va 2chi - qatlam, ya’ni matrisa positsiyasi). Masalan, bu yeR da <code>arr_r[1, :, :]</code> barcha satr va ustunlar bilan ikkinchi matritsani qaytaradi.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Shape is displayed differently in R and Python
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Etibor berilgan bo’lsa, bir xil massiv uchun <em>shape</em> qaytaradigan qiymatlar taridib R bilan Python da farq qilayapti: shape in R = (3, 4, 2), shape in Python = (2, 3, 4). R da birinchi qatorlar soni, ikkinchi ustunlar soni va uchinchi matrisalar soni ko’rsatilayapti. Python da esa birinchi o’lcham ya’ni matrisalar soni, ikkinchi qatorlar soni va uchinchi ustunlar soni kelayapti.</p>
</div>
</div>
</div>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create 3d-Array</span></span>
<span id="cb50-2">arr3d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb50-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3d-Array"</span>)</span>
<span id="cb50-4">arr3d</span>
<span id="cb50-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>arr3d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb50-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1st 2d-Array (sheet,matrix, layer) of the 3d-Array (arr3d):"</span>)</span>
<span id="cb50-7">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :, :] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or arrd[0]</span></span>
<span id="cb50-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3rd column elements of the 2nd sheet from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-9">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb50-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2nd row elements of the 1st sheet from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-11">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :]</span>
<span id="cb50-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Element (20) in 3rd row and 1st col of the 2nd sheet</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-13">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb50-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Elements (22, 23) from 3rd row and columns 3 and 4</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">in the 2nd sheet:"</span>)</span>
<span id="cb50-15">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb50-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Element (9) in 3rd row and 2nd col of the 1st sheet</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-17">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb50-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Element (11) in 3rd row and last col of the 1st sheet</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-19">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 3d-Array
#&gt; array([[[ 0,  1,  2,  3],
#&gt;         [ 4,  5,  6,  7],
#&gt;         [ 8,  9, 10, 11]],
#&gt; 
#&gt;        [[12, 13, 14, 15],
#&gt;         [16, 17, 18, 19],
#&gt;         [20, 21, 22, 23]]])
#&gt; 
#&gt; Shape: (2, 3, 4)
#&gt; 
#&gt; 1st 2d-Array (sheet,matrix, layer) of the 3d-Array (arr3d):
#&gt; array([[ 0,  1,  2,  3],
#&gt;        [ 4,  5,  6,  7],
#&gt;        [ 8,  9, 10, 11]])
#&gt; 
#&gt; 3rd column elements of the 2nd sheet from 3d-Array (arr3d):
#&gt; array([14, 18, 22])
#&gt; 
#&gt; 2nd row elements of the 1st sheet from 3d-Array (arr3d):
#&gt; array([4, 5, 6, 7])
#&gt; 
#&gt; Element (20) in 3rd row and 1st col of the 2nd sheet
#&gt; from 3d-Array (arr3d):
#&gt; 20
#&gt; 
#&gt; Elements (22, 23) from 3rd row and columns 3 and 4
#&gt; in the 2nd sheet:
#&gt; array([10, 11])
#&gt; 
#&gt; Element (9) in 3rd row and 2nd col of the 1st sheet
#&gt; from 3d-Array (arr3d):
#&gt; 9
#&gt; 
#&gt; Element (11) in 3rd row and last col of the 1st sheet
#&gt; from 3d-Array (arr3d):
#&gt; 11</code></pre>
</div>
</div>
</div>
<p><strong>Operations</strong> <br> Paython da massivlar yig’indisini hisoblash uchun yig’indini qay tarzda hisoblashga qarab, o’qni ya’ni <code>axis</code> kiritish kerak bo’ladi. Axis = 0 da, yig’indi massivning n matritsalari bo’yicha hosil bo’ladi. Axis = 1 holatda yig’indi ustunlar bo’ylab va axis = 2 holatda qatorlar bo’yicha hisoblanadi(Buni yuqorida keltirilgan rasmda ko’rish mumkin).</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a 3d-array - arr3d:"</span>)</span>
<span id="cb52-2">arr3d</span>
<span id="cb52-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Shape:"</span>)</span>
<span id="cb52-4">arr3d.shape</span>
<span id="cb52-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by sheets (axis =0):"</span>)</span>
<span id="cb52-6">np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr3d, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or arr3d.sum(axis=0)</span></span>
<span id="cb52-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by column-wise (axis = 1):"</span>)</span>
<span id="cb52-8">arr3d.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb52-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by row-wise (axis = 2):"</span>)</span>
<span id="cb52-10">np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr3d, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; a 3d-array - arr3d:
#&gt; array([[[ 0,  1,  2,  3],
#&gt;         [ 4,  5,  6,  7],
#&gt;         [ 8,  9, 10, 11]],
#&gt; 
#&gt;        [[12, 13, 14, 15],
#&gt;         [16, 17, 18, 19],
#&gt;         [20, 21, 22, 23]]])
#&gt; 
#&gt; Shape:
#&gt; (2, 3, 4)
#&gt; 
#&gt; Sum by sheets (axis =0):
#&gt; array([[12, 14, 16, 18],
#&gt;        [20, 22, 24, 26],
#&gt;        [28, 30, 32, 34]])
#&gt; 
#&gt; Sum by column-wise (axis = 1):
#&gt; array([[12, 15, 18, 21],
#&gt;        [48, 51, 54, 57]])
#&gt; 
#&gt; Sum by row-wise (axis = 2):
#&gt; array([[ 6, 22, 38],
#&gt;        [54, 70, 86]])</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="heterogeneous-data-structure" class="level1 page-columns page-full">
<h1>Heterogeneous data structure</h1>
<p>Geterogen ma’lumotlar tuzilmalari elementlari har xil bo’lgan objectlarni anglatadi. Masalan, har xil turdagi ma’lumotlarga ega elementlarni ro’yxat sifatidagi objectda saqlanishi mumkin.</p>
<section id="lists-in-r-and-lists-dicts-in-python" class="level2">
<h2 class="anchored" data-anchor-id="lists-in-r-and-lists-dicts-in-python"><code>list</code>s in R and <code>list</code>s &amp; <code>dict</code>s in Python</h2>
<section id="lists-in-r" class="level3">
<h3 class="anchored" data-anchor-id="lists-in-r"><code>list</code>s in R</h3>
<p>R dagi ro’yxatning vektorga nisbatan farqi shundaki, ro’yxat elementlari bir hil turda bo’lishi shart emas va elementlarning uzunligi har xil bo’lishi mumkin. Ro’yxat yaratish uchun R da <code>list()</code> funksiyasi mavjud. Indekslashda R da ro’yxat uchun qo’sh (двойной) kvadrat qavs <code>[[]]</code> ishlatiladi (VektoR da bitta kvadrat qavs <code>[]</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a list</span></span>
<span id="cb54-2">lst_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), </span>
<span id="cb54-3">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>), </span>
<span id="cb54-4">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"love"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello R"</span>)</span>
<span id="cb54-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-6">lst_r</span>
<span id="cb54-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb54-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1</span></span>
<span id="cb54-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb54-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3</span></span>
<span id="cb54-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[3]]</span></span>
<span id="cb54-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb54-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[4]]</span></span>
<span id="cb54-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"   </span></span>
<span id="cb54-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[5]]</span></span>
<span id="cb54-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Hello R"</span></span>
<span id="cb54-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(lst_r), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb54-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Type:  list</span></span>
<span id="cb54-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Atribute of the list:</span></span>
<span id="cb54-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(lst_r)</span>
<span id="cb54-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; List of 5</span></span>
<span id="cb54-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : num 1</span></span>
<span id="cb54-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : num [1:2] 2 3</span></span>
<span id="cb54-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : logi [1:2] TRUE FALSE</span></span>
<span id="cb54-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : chr [1:3] "I" "love" "R"</span></span>
<span id="cb54-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : chr "Hello R"</span></span>
<span id="cb54-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check element (Hello R) is in the list</span></span>
<span id="cb54-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello R"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> lst_r</span>
<span id="cb54-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb54-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the 1st element (1) to 42</span></span>
<span id="cb54-37">lst_r[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb54-38">lst_r[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb54-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 42</span></span>
<span id="cb54-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the last element (Hello R) of the list</span></span>
<span id="cb54-42">lst_r[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(lst_r)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb54-43">lst_r</span>
<span id="cb54-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb54-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 42</span></span>
<span id="cb54-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb54-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3</span></span>
<span id="cb54-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[3]]</span></span>
<span id="cb54-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb54-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[4]]</span></span>
<span id="cb54-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"</span></span>
<span id="cb54-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check element (Hello R) is in the list</span></span>
<span id="cb54-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello R"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> lst_r</span>
<span id="cb54-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb54-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the 1st (42) and 2nd elements ([2, 3]) </span></span>
<span id="cb54-61">(lst_r[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Outer bracket for execute code direct</span></span>
<span id="cb54-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb54-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb54-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb54-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"</span></span></code></pre></div>
</div>
<p>R dagi ro’yxatdagi elementlarni ham nomlash mumkin (Python lug’atlarida bo’lgani kabi). Elementlarga <code>[[]]</code> yoki <code>$</code> operatori (dollar belgisi) yoR damida murojaat qilish mumkin. Yangilanadigan element indeksiga qiymat belgilash orqali ro’yxatni o’zgartirish yoki olib tashlash mumkin.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb55-1">lst_named <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb55-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>,</span>
<span id="cb55-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span>,</span>
<span id="cb55-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it_skills"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Java"</span>)</span>
<span id="cb55-5">)</span>
<span id="cb55-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1st element</span></span>
<span id="cb55-8">lst_named[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb55-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 19</span></span>
<span id="cb55-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3rd element</span></span>
<span id="cb55-12">lst_named[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span>
<span id="cb55-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "R"      "Python" "Java"</span></span>
<span id="cb55-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2nd element of the 3rd element</span></span>
<span id="cb55-16">lst_named[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb55-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Python"</span></span>
<span id="cb55-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2nd element by name</span></span>
<span id="cb55-20">lst_named[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>]]       </span>
<span id="cb55-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "m"</span></span>
<span id="cb55-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3rd element via $</span></span>
<span id="cb55-24">lst_named<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>it_skills</span>
<span id="cb55-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "R"      "Python" "Java"</span></span>
<span id="cb55-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2nd element from 3rd element from the list</span></span>
<span id="cb55-28">lst_named<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>it_skills[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb55-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Python"</span></span>
<span id="cb55-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Names of the list</span></span>
<span id="cb55-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(lst_named)</span>
<span id="cb55-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "age"       "sex"       "it_skills"</span></span></code></pre></div>
</div>
<p><code>append()</code> funksiyasi orqali R roʻyxatiga yangi element qoʻshish mumkin. Bundan tashqari ro’yxatni Vector yoki Data Fareme (agar elementlar <em>nomlangan</em> bo’lsa) kabi boshqa maʼlumotlar strukturasiga aylantirish mumkin.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add an element(\"Python\" and \"C++\") into the list(lst_r):</span></span>
<span id="cb56-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(lst_r, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C++"</span>))</span>
<span id="cb56-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb56-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 42</span></span>
<span id="cb56-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb56-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3</span></span>
<span id="cb56-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[3]]</span></span>
<span id="cb56-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb56-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[4]]</span></span>
<span id="cb56-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"   </span></span>
<span id="cb56-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[5]]</span></span>
<span id="cb56-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Python"</span></span>
<span id="cb56-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[6]]</span></span>
<span id="cb56-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "C++"</span></span>
<span id="cb56-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to vector</span></span>
<span id="cb56-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(lst_r)</span>
<span id="cb56-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "42"    "2"     "3"     "TRUE"  "FALSE" "I"     "love"  "R"</span></span>
<span id="cb56-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create alist</span></span>
<span id="cb56-26">emp_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb56-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emp_name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>),</span>
<span id="cb56-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emp_age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>),</span>
<span id="cb56-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emp_salary =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.300</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.700</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.300</span>)</span>
<span id="cb56-30">)</span>
<span id="cb56-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb56-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of emp_list:</span></span>
<span id="cb56-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(emp_list)</span>
<span id="cb56-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "list"</span></span>
<span id="cb56-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to data frame</span></span>
<span id="cb56-37">emp_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(emp_list); emp_df</span>
<span id="cb56-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   emp_name emp_age emp_salary</span></span>
<span id="cb56-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1      Max      45        5.3</span></span>
<span id="cb56-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2      Ali      34        3.7</span></span>
<span id="cb56-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3     Vali      27        3.3</span></span>
<span id="cb56-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of emp_df</span></span>
<span id="cb56-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(emp_df)</span>
<span id="cb56-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "data.frame"</span></span></code></pre></div>
</div>
</section>
<section id="lists-in-python" class="level3">
<h3 class="anchored" data-anchor-id="lists-in-python"><code>list</code>s in Python</h3>
<p>R dagi ro’yxatdagi kabi, Python dagi ro’yxatdagi elementlar/objectlar har xil uzunlik va turlarga ega bo’lishi mumkin. Agar Python dagi ro’yxatning barcha elementlari bir xil turga ega bo’lsa, buni R dagi vektor bilan solishtirish mumkin.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list</span></span>
<span id="cb57-2">lst_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"love"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello Python"</span>]</span>
<span id="cb57-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lst_py)</span>
<span id="cb57-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1, [1, 2], True, ['I', 'love', 'Python'], 'Hello Python']</span></span>
<span id="cb57-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Type: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(lst_py))</span>
<span id="cb57-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb57-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Type:  &lt;class 'list'&gt;</span></span>
<span id="cb57-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check element (Hello Python) is in the list</span></span>
<span id="cb57-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Hello Python"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lst_py</span>
<span id="cb57-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb57-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the 1st element (1) to 42</span></span>
<span id="cb57-14">lst_py[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst_py</span>
<span id="cb57-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [42, [1, 2], True, ['I', 'love', 'Python'], 'Hello Python']</span></span>
<span id="cb57-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the last element (Hello Python) from the list</span></span>
<span id="cb57-18">lst_py.pop()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst_py  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pop() removes the last element in the list!!</span></span>
<span id="cb57-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'Hello Python'</span></span>
<span id="cb57-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [42, [1, 2], True, ['I', 'love', 'Python']]</span></span>
<span id="cb57-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the 2nd element ([1, 2]) with pop()</span></span>
<span id="cb57-23">lst_py.pop(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst_py</span>
<span id="cb57-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1, 2]</span></span>
<span id="cb57-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [42, True, ['I', 'love', 'Python']]</span></span>
<span id="cb57-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the 1st element (42) with del</span></span>
<span id="cb57-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> lst_py[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb57-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove by name</span></span>
<span id="cb57-31">lst_py.remove(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-32">lst_py</span>
<span id="cb57-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [['I', 'love', 'Python']]</span></span></code></pre></div>
</div>
<p>Python da ro’yxatga yangi elementni <code>append()</code> funktsiyasi (R kabi) orqali qo’shish mumkin. R da bo’lganidek, Python da ham ro’yxatlar boshqa ma’lumotlar tuzilmalariga, NumPy massiviga, Pandas seriyasiga yoki Pandas DataFrame siga aylantirilishi mumkin.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list</span></span>
<span id="cb58-2">ls1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gani"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls1</span>
<span id="cb58-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; ['Ali', 'Vali', 'Gani']</span></span>
<span id="cb58-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a new element (Max) into the list</span></span>
<span id="cb58-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append() adds the new item to the end of the list</span></span>
<span id="cb58-7">ls1.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls1</span>
<span id="cb58-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; ['Ali', 'Vali', 'Gani', 'Max']</span></span>
<span id="cb58-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># insert() adds an element to the list at the specified index</span></span>
<span id="cb58-11">ls1.insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ivan"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># inserted at index 1 (2nd position)</span></span>
<span id="cb58-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Conver to a Pandas Series</span></span>
<span id="cb58-14">ls_pd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(ls1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls_pd</span>
<span id="cb58-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0     Ali</span></span>
<span id="cb58-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1    Ivan</span></span>
<span id="cb58-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2    Vali</span></span>
<span id="cb58-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3    Gani</span></span>
<span id="cb58-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4     Max</span></span>
<span id="cb58-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; dtype: object</span></span>
<span id="cb58-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ls_pd)</span>
<span id="cb58-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'pandas.core.series.Series'&gt;</span></span>
<span id="cb58-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Conver to a A Numpy 1d-Ayrray</span></span>
<span id="cb58-25">ls_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(ls1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls_np</span>
<span id="cb58-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; array(['Ali', 'Ivan', 'Vali', 'Gani', 'Max'], dtype='&lt;U4')</span></span>
<span id="cb58-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ls_np)</span>
<span id="cb58-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'numpy.ndarray'&gt;</span></span>
<span id="cb58-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to a Pandas DataFrame</span></span>
<span id="cb58-31">ls2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb58-32">ls_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(ls1,ls2)), columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ls1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ls2"</span>])</span>
<span id="cb58-33">ls_df</span>
<span id="cb58-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;     ls1  ls2</span></span>
<span id="cb58-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0   Ali    3</span></span>
<span id="cb58-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Ivan    4</span></span>
<span id="cb58-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Vali    5</span></span>
<span id="cb58-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3  Gani    8</span></span>
<span id="cb58-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4   Max    2</span></span></code></pre></div>
</div>
</section>
<section id="dicts-in-python-and-lists-in-r" class="level3">
<h3 class="anchored" data-anchor-id="dicts-in-python-and-lists-in-r"><code>dict</code>s in Python and <code>list</code>s in R</h3>
<p>Yuqorida aytib o’tilganidek, vektorlaR dan farqli ravishda, R da ro’yxat elementlari bir xil turdagi bo’lishi shart emas. R dagi ro’yxat elementlarini ham nomlash mumkin, bu <em>named list</em> ya’ni elementlari nomlangan roy’yxat deb ham ataladi. Python da esa ro’yxat elementlarini nomlab bo’lmaydi, lekin Python da R dagi elementlari nomlangan roy’yxat bilan bir xil tuzilmaga ega bolgan lug’atlar <em>(dictionanries)</em> mavjud. Python tilidagi lug’at <code>d = {key : value}</code> tuzilishidan iborat. Lug’atlaR dagi Kalit <em>unique</em> va <em>immutable</em>, ya’ni unikalniy va o’zgarmasdir. Kalitlar uchun odatda satrlar <em>(strings)</em> ishlatiladi. Agar R dagi vektor elementlari nomlansa Python dagi lug’at strukturasiga ega bo’ladi <code>d = list(name = value)</code>. Lug’atdagi elementlarga <code>d["key"]</code> orqali, nomlangan vektor/ro’yxatdagi elementlarga <code>vector["name"]</code> yoki <code>vector$name</code> orqali murojaat qilinadi.</p>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
named list vs vector in R
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>R da elementlar ro’yxatda ham (<code>l &lt;- list("a" = 1, "b" = b, "c" = c("a", "b", "c"))</code>), vektoR da ham (<code>v &lt;- c("a" = 1, "b" = 2, "c" = 3)</code>) nomlanishi mumkin. Farqi vektoR dagi elementlar bi xil turga ega bo’lishi kerak.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb59-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Named vector with values of the same type:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb59-2">v <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); v</span>
<span id="cb59-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v))</span>
<span id="cb59-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Named list with values of different types:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb59-5">l <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)); l</span>
<span id="cb59-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(l))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Named vector with values of the same type:
#&gt; a b c 
#&gt; 1 2 3 
#&gt; Type:  numeric
#&gt; 
#&gt; Named list with values of different types:
#&gt; $a
#&gt; [1] 1
#&gt; 
#&gt; $b
#&gt; [1] "b"
#&gt; 
#&gt; $c
#&gt; [1] "a" "b" "c"
#&gt; 
#&gt; Type:  list</code></pre>
</div>
</div>
<p>Misol tariqasida, yuqoridagi vektor “v” ga turli xil turdagi qiymatlar berilsa, masalan satr, son aralsh (1, “b”, 3), bu holatda R hamma elementlarni matn sifatida saqlaydi ya’ni qabul qiladi, bu degani 1 va 3 sonlari turi <em>character</em>, ya’ni matnga o’zgartiriladi.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb61-1">v1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); v1</span>
<span id="cb61-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   a   b   c </span></span>
<span id="cb61-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; "1" "b" "3"</span></span>
<span id="cb61-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v1)</span>
<span id="cb61-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "character"</span></span></code></pre></div>
</div>
<p>Qiziqishga man vektorning 3 ta elementlariga quyidagi qiymatlarni berdim: a = 1, b = b und c = c(1, 2, 3). Demak vektorimiz 5 ta qiymatga ega bo’lgan 3 ta nomlanagna elementdan iborat boladi. Ajablanarlisi shundaki, R avtomatik ravishda c elementni barcha qiymatlar nomlanguncha kengaytirdi va c1, c2, c3 qilib nomladi. Shunaqa paytlada R ni yanayam yaxschi korib ketasanda kishi;).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb62-1">v2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)); v2</span>
<span id="cb62-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   a   b  c1  c2  c3 </span></span>
<span id="cb62-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; "1" "b" "1" "2" "3"</span></span></code></pre></div>
</div>
</div>
</div>
</div>
<p>Quyida aksiyalar narxlari lug’atlar va nomlangan vektorlarga misol tqariqasida (2024 yil 27 aprel holatiga ko’ra, OnVista’dan) keltirilgan.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-7-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-1" aria-controls="tabset-7-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-7-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-2" aria-controls="tabset-7-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-7-1" class="tab-pane active" aria-labelledby="tabset-7-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb63-1">share_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AMZN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AAPL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MBG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TSLA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BYD"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BABA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SAP"</span>)</span>
<span id="cb63-2">share_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">179.62</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">169.30</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">74.36</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">168.29</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">25.36</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">75.55</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">174.00</span>)</span>
<span id="cb63-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb63-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create a named list from vectors:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-5">dic_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.list</span>(share_value), share_name); dic_r</span>
<span id="cb63-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">share price from BYD. slice with [[]]:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-7">dic_r[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BYD"</span>]]</span>
<span id="cb63-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">share price from Tesla. slice with $</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-9">dic_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>TSLA</span>
<span id="cb63-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Typ from dic_r: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(dic_r))</span>
<span id="cb63-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Add an element (BMW3) to the list(dic_r[['BMW3']] &lt;- 99.15):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-12">dic_r[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW3"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">99.15</span></span>
<span id="cb63-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is BMW3 there?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-14">dic_r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW3"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> dic_r</span>
<span id="cb63-15">dic_r[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW3"</span>]]</span>
<span id="cb63-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb63-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Remove an element (MBG) from the list (dic_r$MBG &lt;- NULL):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-18">dic_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>MBG <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb63-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is MBG there?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-20">dic_r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MBG"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> dic_r</span>
<span id="cb63-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to python</span></span>
<span id="cb63-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Convert the list (dic_r) to Python object (dic_py)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-23">dic_py <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r_to_py</span>(dic_r)</span>
<span id="cb63-24">dic_py</span>
<span id="cb63-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Type from dic_py:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(dic_py)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Create a named list from vectors:
#&gt; $AMZN
#&gt; [1] 179.62
#&gt; 
#&gt; $AAPL
#&gt; [1] 169.3
#&gt; 
#&gt; $MBG
#&gt; [1] 74.36
#&gt; 
#&gt; $TSLA
#&gt; [1] 168.29
#&gt; 
#&gt; $BYD
#&gt; [1] 25.36
#&gt; 
#&gt; $BABA
#&gt; [1] 75.55
#&gt; 
#&gt; $SAP
#&gt; [1] 174
#&gt; 
#&gt; 
#&gt; share price from BYD. slice with [[]]:
#&gt; [1] 25.36
#&gt; 
#&gt; share price from Tesla. slice with $
#&gt; [1] 168.29
#&gt; 
#&gt; Typ from dic_r:  list
#&gt; Add an element (BMW3) to the list(dic_r[['BMW3']] &lt;- 99.15):
#&gt; Is BMW3 there?
#&gt; [1] TRUE
#&gt; [1] 99.15
#&gt; 
#&gt; Remove an element (MBG) from the list (dic_r$MBG &lt;- NULL):
#&gt; Is MBG there?
#&gt; [1] FALSE
#&gt; 
#&gt; Convert the list (dic_r) to Python object (dic_py)
#&gt; {'AMZN': 179.62, 'AAPL': 169.3, 'TSLA': 168.29, 'BYD': 25.36, 'BABA': 75.55, 'SAP': 174.0, 'BMW3': 99.15}
#&gt; 
#&gt; Type from dic_py:
#&gt; [1] "python.builtin.dict"   "python.builtin.object"</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-7-2" class="tab-pane" aria-labelledby="tabset-7-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"share price at 27.04.2024:"</span>)</span>
<span id="cb65-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k,v <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> r.dic_py.items():</span>
<span id="cb65-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>v<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb65-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Keys:"</span>, r.dic_py.keys())</span>
<span id="cb65-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Values:"</span>, r.dic_py.values())</span>
<span id="cb65-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Share of Tesla: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dic_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TSLA"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb65-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Add MBG to the dictionary(r.dic_py['MBG'] = 74.36):"</span>)</span>
<span id="cb65-8">r.dic_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MBG"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">74.36</span></span>
<span id="cb65-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Is MBG in the dictionary?"</span>)</span>
<span id="cb65-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"MBG"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> r.dic_py</span>
<span id="cb65-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Delete BYD from dictionary(del r.dic_py['BYD']):"</span>)</span>
<span id="cb65-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> r.dic_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BYD"</span>]</span>
<span id="cb65-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Is BYD in the dictionary?"</span>)</span>
<span id="cb65-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"BYD"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> r.dic_py</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; share price at 27.04.2024:
#&gt; AMZN : 179.62
#&gt; AAPL : 169.3
#&gt; TSLA : 168.29
#&gt; BYD : 25.36
#&gt; BABA : 75.55
#&gt; SAP : 174.0
#&gt; BMW3 : 99.15
#&gt; 
#&gt; Keys: dict_keys(['AMZN', 'AAPL', 'TSLA', 'BYD', 'BABA', 'SAP', 'BMW3'])
#&gt; Values: dict_values([179.62, 169.3, 168.29, 25.36, 75.55, 174.0, 99.15])
#&gt; 
#&gt; Share of Tesla: 168.29
#&gt; 
#&gt; Add MBG to the dictionary(r.dic_py['MBG'] = 74.36):
#&gt; 
#&gt; Is MBG in the dictionary?
#&gt; True
#&gt; 
#&gt; Delete BYD from dictionary(del r.dic_py['BYD']):
#&gt; 
#&gt; Is BYD in the dictionary?
#&gt; False</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Python da lug’at elementlariga murojaat qilgandan <code>dict["key"]</code> bilan birga <code>dict.get("key", "default")</code> metodi ham mavjud. Ikkala usul ham bir xil natija beradi. Farqi shundaki, izlanayotgan kalit lug’atda mavjudmi yoki yo’qmi. Agar Key mavjud bo’lmasa birinchi usul <em>KeyError</em> hatoligini beradi. <em>get()</em> usuli bu hatolikni oldini oladi. Kalit bmavjud bo’lmagan holatda get odatda <em>None</em> qaytaradi, lekin qaytarilishi kerak bulgan qiymatni o’zgartirsa ham bo’ladi, masalan <code>dict.get("key", "Mavjud emas!")</code> holatda, agar kalit mavjut bo’lmasa, “Mavjud emas!” qqqaytariladi.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb67-1">bsp_dic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb67-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span> : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb67-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span> : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb67-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span></span>
<span id="cb67-5">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> bsp_dic</span>
<span id="cb67-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"With []:"</span>)</span>
<span id="cb67-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Alini yoshi: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bsp_dic[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb67-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">With get():"</span>)</span>
<span id="cb67-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Alini yoshi: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bsp_dic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb67-10">lstName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gani"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brandon"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lstName</span>
<span id="cb67-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Iterate with devault value, if key not exis"</span>)</span>
<span id="cb67-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lstName:</span>
<span id="cb67-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for k, v in bsp_dic.items():</span></span>
<span id="cb67-14">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bsp_dic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(n, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mavjud emas!'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> )</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; {'Ali': 25, 'Max': 44, 'Vali': 33}
#&gt; With []:
#&gt; Alini yoshi: 25
#&gt; 
#&gt; With get():
#&gt; Alini yoshi: 25
#&gt; ['Ali', 'Gani', 'Max', 'Vali', 'Brandon']
#&gt; 
#&gt; Iterate with devault value, if key not exis
#&gt; Ali - 25
#&gt; Gani - Mavjud emas!
#&gt; Max - 44
#&gt; Vali - 33
#&gt; Brandon - Mavjud emas!</code></pre>
</div>
</div>
</section>
</section>
<section id="sets-and-tuples-in-python" class="level2">
<h2 class="anchored" data-anchor-id="sets-and-tuples-in-python"><code>set</code>s and <code>tuple</code>s in Python</h2>
<p>Python da <code>set{}</code> va <code>tuple()</code> kabi boshqa ma’lumotlar tuzilmalari ham mavjud.</p>
<section id="set-in-python" class="level3">
<h3 class="anchored" data-anchor-id="set-in-python"><code>set{}</code> in Python</h3>
<p>Turlari bo’yicha guruhlangan elementlarni Python da <em>set</em>, ya’ni to’plam yoR damida ham ifodalash mumkin. Buning uchun elementlarni skobka <code>{}</code>ga kiritiladi yoki ularni <code>set()</code> funksiyasiga beriladi. Ushbu kontseptsiyaning o’ziga xos xususiyati shundaki, elementlar <em>unique</em>dir, ya’ni har bir object to’plamda faqat bir marta uchraydi. R da ham vektoR dagi takroriy elementlarni olib tashlaydigan <code>unique()</code> funksiyasi mavjud. Bundan tashqari, elementlar tartiblanmagan va ular indekslarga ega emas. <em>set</em> dagi to’plamlar - <em>mutable</em>, ya’ni o’zgaruvchan va <em>frozenset</em> dagi to’plamlar - <em>immutable</em>, ya’ni o’zgarmasdir.</p>
<p>Python da to’plamlar uchun qo’llaniladigan <code>union</code>, <code>intersection</code> va <code>difference</code> metodlar R da ham mavjud, ular vektorlarga qo’llaniladi.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-8-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-1" aria-controls="tabset-8-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-8-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-2" aria-controls="tabset-8-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-8-1" class="tab-pane active" aria-labelledby="tabset-8-1-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set() - returns the vector without duplicate values</span></span>
<span id="cb69-2">my_lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> my_lst</span>
<span id="cb69-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [2, 3, 1, 5, 3, 9, 3, 2, 7]</span></span>
<span id="cb69-4">my_set <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(my_lst)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> my_set</span>
<span id="cb69-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3, 5, 7, 9}</span></span>
<span id="cb69-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a set</span></span>
<span id="cb69-8">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x</span>
<span id="cb69-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3, 4, 5, 6}</span></span>
<span id="cb69-10">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y</span>
<span id="cb69-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {4, 5, 6, 7, 8, 9}</span></span>
<span id="cb69-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(x), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(y))</span>
<span id="cb69-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'set'&gt; &lt;class 'set'&gt;</span></span>
<span id="cb69-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># union() - combine x and y without duplicates</span></span>
<span id="cb69-16">x.union(y)</span>
<span id="cb69-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3, 4, 5, 6, 7, 8, 9}</span></span>
<span id="cb69-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># intersection() - which obj in both sets</span></span>
<span id="cb69-20">x.intersection(y)</span>
<span id="cb69-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {4, 5, 6}</span></span>
<span id="cb69-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># difference() - objects in x, but not in y</span></span>
<span id="cb69-24">x.difference(y)</span>
<span id="cb69-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3}</span></span>
<span id="cb69-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># difference() - objects in y, but not in x</span></span>
<span id="cb69-28">y.difference(x)</span>
<span id="cb69-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {8, 9, 7}</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-8-2" class="tab-pane" aria-labelledby="tabset-8-2-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb70-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Typ of python sets</span></span>
<span id="cb70-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x)</span>
<span id="cb70-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "python.builtin.set"    "python.builtin.object"</span></span>
<span id="cb70-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y)</span>
<span id="cb70-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "python.builtin.set"    "python.builtin.object"</span></span>
<span id="cb70-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unique() - returns the vector without duplicate values</span></span>
<span id="cb70-8">my_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>); my_vec</span>
<span id="cb70-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3 1 5 3 9 3 2 7</span></span>
<span id="cb70-10">uniq_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(my_vec); uniq_vec</span>
<span id="cb70-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3 1 5 9 7</span></span>
<span id="cb70-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create vectros</span></span>
<span id="cb70-14">x_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>); x_r</span>
<span id="cb70-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1 2 3 4 5 6</span></span>
<span id="cb70-16">y_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>); y_r</span>
<span id="cb70-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 4 5 6 7 8 9</span></span>
<span id="cb70-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># union() - combine x_r and y_r without duplicates</span></span>
<span id="cb70-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">union</span>(x_r, y_r)</span>
<span id="cb70-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1 2 3 4 5 6 7 8 9</span></span>
<span id="cb70-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># intersection() - which obj in both vectors</span></span>
<span id="cb70-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(x_r, y_r)</span>
<span id="cb70-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 4 5 6</span></span>
<span id="cb70-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setdiff() - objects in x_r, but not in y_r</span></span>
<span id="cb70-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(x_r, y_r)</span>
<span id="cb70-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1 2 3</span></span>
<span id="cb70-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setdiff() - objects in y_r, but not in x_r</span></span>
<span id="cb70-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(y_r, x_r)</span>
<span id="cb70-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 7 8 9</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="tuple-in-python" class="level3">
<h3 class="anchored" data-anchor-id="tuple-in-python"><code>tuple()</code> in Python</h3>
<p>Tuple yoki kortej bir objectga bir nechta (turli turdagi) elementlarni birlashtiradi. Ularni vergul bilan ajratilgan elementlarni qavslar ichiga <code>t = (obj1, obj2, ...)</code> yoki qavslarsiz <code>t = obj1, obj2, ...</code> kiritish bilan yoki <code>tuple(obj)</code> funksiyasi orqali yaratish mumkin. Ro’yxatlaR dan farqli ravishda, tupellar <strong>immutable</strong> dir, shunga ular o’zgarmas ro’yxat deb ham ataladi. Tupellar yaratilganidan so’ng, elementlarni o’zgartirib bo’lmaydi (qaysi manodaki, elementlariga boshqa qiymat berib bolmaydi, alashtirib bolmaydi, lekin yangi element qo’shsa bo’ladi), agar o’zgartirish zarur bo’lsa, ularni ro’yxatga aylantirib o’zgartirish kiritib, keyin ularni qayta tupelga aylantirib olish mumkin. Tupellarni lug’atlaR da ham ishlatish mumkin.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a tuple</span></span>
<span id="cb71-2">t1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t1: "</span>, t1)</span>
<span id="cb71-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; t1:  (1, 5, 6, 6, 3)</span></span>
<span id="cb71-4">t2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2: "</span>, t2)</span>
<span id="cb71-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; t2:  (2, 4, 2, 5, 6)</span></span>
<span id="cb71-6">t3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t3: "</span>, t3)</span>
<span id="cb71-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; t3:  (3, 4, 5, 6, 1)</span></span>
<span id="cb71-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb71-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuples in dict keys</span></span>
<span id="cb71-10">koordinat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb71-11">  (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb71-12">  (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb71-13">  (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span></span>
<span id="cb71-14">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> koordinat</span>
<span id="cb71-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {(0, 0): 100, (1, 1): 200, (0, 1): 75}</span></span>
<span id="cb71-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add istem</span></span>
<span id="cb71-17">koordinat[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">125</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> koordinat</span>
<span id="cb71-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {(0, 0): 100, (1, 1): 200, (0, 1): 75, (1, 0): 125}</span></span>
<span id="cb71-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb71-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuples in dict values</span></span>
<span id="cb71-21">greats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb71-22">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Navoi"</span> : (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hirot"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1441</span>),</span>
<span id="cb71-23">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bobur"</span> : (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1483</span>),</span>
<span id="cb71-24">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span> : (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shahrisabz"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1336</span>)</span>
<span id="cb71-25">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> greats</span>
<span id="cb71-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {'Navoi': ('Hirot', 1441), 'Bobur': ('Andijon', 1483), 'Temur': ('Shahrisabz', 1336)}</span></span>
<span id="cb71-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb71-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># iterate dict</span></span>
<span id="cb71-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> great, (place, year) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> greats.items():</span>
<span id="cb71-30">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>great<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - was born in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>place<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>year<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb71-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Navoi - was born in Hirot in 1441.</span></span>
<span id="cb71-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Bobur - was born in Andijon in 1483.</span></span>
<span id="cb71-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Temur - was born in Shahrisabz in 1336.</span></span></code></pre></div>
</div>
</section>
</section>
<section id="data.frames-in-r-and-pandas.dataframe-in-python" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="data.frames-in-r-and-pandas.dataframe-in-python"><code>data.frame</code>s in R and <code>pandas.DataFrame</code> in Python</h2>
<p>Dataframelar, ehtimol, R va Python da ma’lumotlarni saqlash, qayta ishlash va tahlil qilishning eng keng tarqalgan usullaridan bo’lsa kerak. DF (DataFrame) ni to’rtta burchakli (satrlar va ustunlar) jadval sifatida tasavvur qilish mumkin, misol tariqasida eng keng tarqalgani Excel tablolarini (sheets) misol qilib keltirish mumkin. Qatorlar holatlar yoki kuzatishlarni (<em>ingl. observations</em>), ustunlar esa o’zgaruvchilarni yoki statistika tili bilan aytganda xarakteristikalarni (<em>ingl. futures</em>) ifodalaydi. O’ng tomonda Data Frame kichik jadval shaklda misol tariqasida keltirilgan. Jadvalda 10 ta satr (kuzatishlar - bular shaxslar, Navoi, Bobur, …) va 3 ustun (o’zgaruvchi = ism, tug’ilgan yili va tug’ilgan joyi, bular shaxslarning xarakteristikasi, ya’ni shaxslar haqida ma’lumotlar desayam bo’ladi) mavjud.</p>
<div class="cell page-columns page-full">

<div class="no-row-height column-margin column-container"><div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">names</th>
<th style="text-align: right;">byear</th>
<th style="text-align: left;">bplace</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Navoi</td>
<td style="text-align: right;">1441</td>
<td style="text-align: left;">Hirot</td>
</tr>
<tr class="even">
<td style="text-align: left;">Bobur</td>
<td style="text-align: right;">1483</td>
<td style="text-align: left;">Andijon</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Temur</td>
<td style="text-align: right;">1336</td>
<td style="text-align: left;">Shahrisabz</td>
</tr>
<tr class="even">
<td style="text-align: left;">Cholpon</td>
<td style="text-align: right;">1898</td>
<td style="text-align: left;">Andijon</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Qodiriy</td>
<td style="text-align: right;">1894</td>
<td style="text-align: left;">Toshkent</td>
</tr>
<tr class="even">
<td style="text-align: left;">Ulugbek</td>
<td style="text-align: right;">1394</td>
<td style="text-align: left;">Samarqand</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xorazmi</td>
<td style="text-align: right;">783</td>
<td style="text-align: left;">Xiva</td>
</tr>
<tr class="even">
<td style="text-align: left;">Beruniy</td>
<td style="text-align: right;">1048</td>
<td style="text-align: left;">Xorazm</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Termiziy</td>
<td style="text-align: right;">824</td>
<td style="text-align: left;">Termiz</td>
</tr>
<tr class="even">
<td style="text-align: left;">Buxoriy</td>
<td style="text-align: right;">810</td>
<td style="text-align: left;">Buxoro</td>
</tr>
</tbody>
</table>
</div></div></div>
<p>R dagi dataframelar boshqacha aytganda bir xill uzunlikka egan bo’lgan nom berilgan vektorlar ro’yxatidir (Paythondagi pandas.Series lar kabi). Bunda har bir vektor (Series) dataframelar ya’ni jadvallarning ustunini ifodalaydi. Python va R dagi dataframelari dataframe talabini qondirishi kerak bo’lgan ko’pchillik umumiy xususiyatlarga <span class="citation" data-cites="rp_DA">(Brown 2023)</span> ega.</p>
<ul>
<li>har bir ustunning uzunligi bir xil bo’lishi kerak</li>
<li>ustundagi barcha elementlar bir xil turga ega bo’lishi kerak</li>
<li>SatR dagi elementlar har xil turlaR da bo’lishi mumkin</li>
<li>Satrlar va ustunlar boshqacha nomlanishi mumkin</li>
</ul>
<p>Dataframelar R da <code>data.frame()</code> funksiya orqali va Python da pandas modulidagi <code>pandas.DataFrame()</code> funksiya yoR damida yaratiladi.</p>
<section id="create-a-df" class="level3">
<h3 class="anchored" data-anchor-id="create-a-df">Create a DF</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-9-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-1" aria-controls="tabset-9-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-9-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-2" aria-controls="tabset-9-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-9-1" class="tab-pane active" aria-labelledby="tabset-9-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb72-1">names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Navoi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bobur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cholpon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Qodiriy"</span>, </span>
<span id="cb72-2">           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ulugbek"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xorazmi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Beruniy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Termiziy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Buxoriy"</span>)</span>
<span id="cb72-3">byear <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1441</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1483</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1336</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1898</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1894</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1394</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">783</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1048</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">824</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">810</span>) </span>
<span id="cb72-4">bplace <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hirot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shahrisabz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Toshkent"</span>,</span>
<span id="cb72-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Samarqand"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xiva"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xorazm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Termiz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Buxoro"</span>)</span>
<span id="cb72-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataFrame -----------------------------------------</span></span>
<span id="cb72-7">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(names, byear, bplace)</span>
<span id="cb72-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type -------------------------------------------------------</span></span>
<span id="cb72-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(df)</span>
<span id="cb72-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "data.frame"</span></span>
<span id="cb72-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nums of rows and cols --------------------------------------</span></span>
<span id="cb72-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(df)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like shape in pandas</span></span>
<span id="cb72-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 10  3</span></span>
<span id="cb72-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of rows ------------------------------------------------</span></span>
<span id="cb72-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df)</span>
<span id="cb72-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 10</span></span>
<span id="cb72-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of columns ---------------------------------------------</span></span>
<span id="cb72-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(df)</span>
<span id="cb72-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 3</span></span>
<span id="cb72-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># structur of DataFrame --------------------------------------</span></span>
<span id="cb72-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str(df) or</span></span>
<span id="cb72-22">pillar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(df) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like pandas.DataFrame.info()</span></span>
<span id="cb72-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Rows: 10</span></span>
<span id="cb72-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Columns: 3</span></span>
<span id="cb72-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $ names  &lt;chr&gt; "Navoi", "Bobur", "Temur", "Cholpon", "Qodiriy", "Ulugbek", "Xo…</span></span>
<span id="cb72-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $ byear  &lt;dbl&gt; 1441, 1483, 1336, 1898, 1894, 1394, 783, 1048, 824, 810</span></span>
<span id="cb72-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $ bplace &lt;chr&gt; "Hirot", "Andijon", "Shahrisabz", "Andijon", "Toshkent", "Samar…</span></span>
<span id="cb72-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First n lines, default = 6 ---------------------------------</span></span>
<span id="cb72-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb72-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   names byear     bplace</span></span>
<span id="cb72-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1 Navoi  1441      Hirot</span></span>
<span id="cb72-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2 Bobur  1483    Andijon</span></span>
<span id="cb72-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3 Temur  1336 Shahrisabz</span></span>
<span id="cb72-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Last n lines -----------------------------------------------</span></span>
<span id="cb72-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb72-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names byear bplace</span></span>
<span id="cb72-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9  Termiziy   824 Termiz</span></span>
<span id="cb72-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10  Buxoriy   810 Buxoro</span></span>
<span id="cb72-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># colnames ---------------------------------------------------</span></span>
<span id="cb72-40"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)</span>
<span id="cb72-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "names"  "byear"  "bplace"</span></span>
<span id="cb72-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows -------------------------------------------------------</span></span>
<span id="cb72-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(df)</span>
<span id="cb72-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10"</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-9-2" class="tab-pane" aria-labelledby="tabset-9-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create pandas DataFrame from created df in r -------</span></span>
<span id="cb73-2">df_pd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(r.df)</span>
<span id="cb73-3">df_pd[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"byear"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_pd[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"byear"</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb73-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type -----------------------------------------------</span></span>
<span id="cb73-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(df_pd)</span>
<span id="cb73-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'pandas.core.frame.DataFrame'&gt;</span></span>
<span id="cb73-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nums of rows and cols ------------------------------</span></span>
<span id="cb73-8">df_pd.shape   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like dim() in r</span></span>
<span id="cb73-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; (10, 3)</span></span>
<span id="cb73-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of rows ----------------------------------------</span></span>
<span id="cb73-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_pd)</span>
<span id="cb73-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10</span></span>
<span id="cb73-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of columns -------------------------------------</span></span>
<span id="cb73-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_pd.columns)</span>
<span id="cb73-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3</span></span>
<span id="cb73-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># structur of DataFrame ------------------------------</span></span>
<span id="cb73-17">df_pd.info()   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like str() in r</span></span>
<span id="cb73-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'pandas.core.frame.DataFrame'&gt;</span></span>
<span id="cb73-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; RangeIndex: 10 entries, 0 to 9</span></span>
<span id="cb73-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Data columns (total 3 columns):</span></span>
<span id="cb73-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  #   Column  Non-Null Count  Dtype </span></span>
<span id="cb73-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; ---  ------  --------------  ----- </span></span>
<span id="cb73-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  0   names   10 non-null     object</span></span>
<span id="cb73-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  1   byear   10 non-null     int32 </span></span>
<span id="cb73-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  2   bplace  10 non-null     object</span></span>
<span id="cb73-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; dtypes: int32(1), object(2)</span></span>
<span id="cb73-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; memory usage: 332.0+ bytes</span></span>
<span id="cb73-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First n lines, default = 5 -------------------------</span></span>
<span id="cb73-29">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb73-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    names  byear      bplace</span></span>
<span id="cb73-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0  Navoi   1441       Hirot</span></span>
<span id="cb73-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Bobur   1483     Andijon</span></span>
<span id="cb73-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Temur   1336  Shahrisabz</span></span>
<span id="cb73-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Last n lines ---------------------------------------</span></span>
<span id="cb73-35">df_pd.tail(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb73-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names  byear  bplace</span></span>
<span id="cb73-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8  Termiziy    824  Termiz</span></span>
<span id="cb73-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9   Buxoriy    810  Buxoro</span></span>
<span id="cb73-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># colnames -------------------------------------------</span></span>
<span id="cb73-40">df_pd.columns</span>
<span id="cb73-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Index(['names', 'byear', 'bplace'], dtype='object')</span></span>
<span id="cb73-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows -----------------------------------------------</span></span>
<span id="cb73-43">df_pd.index</span>
<span id="cb73-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; RangeIndex(start=0, stop=10, step=1)</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="access-a-the-elements" class="level3">
<h3 class="anchored" data-anchor-id="access-a-the-elements">Access a (the) element(s)</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-10-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-1" aria-controls="tabset-10-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-10-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-2" aria-controls="tabset-10-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-10-1" class="tab-pane active" aria-labelledby="tabset-10-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb74-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1st row, 1st col -------------------------------</span></span>
<span id="cb74-2">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb74-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Navoi"</span></span>
<span id="cb74-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1-3 rows, all cols -----------------------------</span></span>
<span id="cb74-5">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, ]</span>
<span id="cb74-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   names byear     bplace</span></span>
<span id="cb74-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1 Navoi  1441      Hirot</span></span>
<span id="cb74-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2 Bobur  1483    Andijon</span></span>
<span id="cb74-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3 Temur  1336 Shahrisabz</span></span>
<span id="cb74-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all rows, 1-2 cols -----------------------------</span></span>
<span id="cb74-11">df[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb74-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names byear</span></span>
<span id="cb74-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1     Navoi  1441</span></span>
<span id="cb74-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2     Bobur  1483</span></span>
<span id="cb74-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3     Temur  1336</span></span>
<span id="cb74-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4   Cholpon  1898</span></span>
<span id="cb74-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 5   Qodiriy  1894</span></span>
<span id="cb74-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 6   Ulugbek  1394</span></span>
<span id="cb74-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 7   Xorazmi   783</span></span>
<span id="cb74-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8   Beruniy  1048</span></span>
<span id="cb74-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9  Termiziy   824</span></span>
<span id="cb74-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10  Buxoriy   810</span></span>
<span id="cb74-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3 rows, col bplace -----------------------------</span></span>
<span id="cb74-24">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb74-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Hirot"      "Andijon"    "Shahrisabz"</span></span>
<span id="cb74-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col bplace = "Andijon" --------------</span></span>
<span id="cb74-27">df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bplace <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>, ]</span>
<span id="cb74-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;     names byear  bplace</span></span>
<span id="cb74-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2   Bobur  1483 Andijon</span></span>
<span id="cb74-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4 Cholpon  1898 Andijon</span></span>
<span id="cb74-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col byear &lt; 1000 -------------------</span></span>
<span id="cb74-32">df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>byear <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ]</span>
<span id="cb74-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names byear bplace</span></span>
<span id="cb74-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 7   Xorazmi   783   Xiva</span></span>
<span id="cb74-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9  Termiziy   824 Termiz</span></span>
<span id="cb74-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10  Buxoriy   810 Buxoro</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-10-2" class="tab-pane" aria-labelledby="tabset-10-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1st row, 1st col -------------------------------------</span></span>
<span id="cb75-2">df_pd.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># iloc by postion(s)</span></span>
<span id="cb75-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'Navoi'</span></span>
<span id="cb75-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1-3 rows, all cols -----------------------------------</span></span>
<span id="cb75-5">df_pd.iloc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, ]</span>
<span id="cb75-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    names  byear      bplace</span></span>
<span id="cb75-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0  Navoi   1441       Hirot</span></span>
<span id="cb75-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Bobur   1483     Andijon</span></span>
<span id="cb75-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Temur   1336  Shahrisabz</span></span>
<span id="cb75-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all rows, 1-2 cols -----------------------------------</span></span>
<span id="cb75-11">df_pd.iloc[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb75-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names  byear</span></span>
<span id="cb75-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0     Navoi   1441</span></span>
<span id="cb75-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1     Bobur   1483</span></span>
<span id="cb75-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2     Temur   1336</span></span>
<span id="cb75-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3   Cholpon   1898</span></span>
<span id="cb75-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4   Qodiriy   1894</span></span>
<span id="cb75-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 5   Ulugbek   1394</span></span>
<span id="cb75-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 6   Xorazmi    783</span></span>
<span id="cb75-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 7   Beruniy   1048</span></span>
<span id="cb75-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8  Termiziy    824</span></span>
<span id="cb75-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9   Buxoriy    810</span></span>
<span id="cb75-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3 rows, col bplace -----------------------------------</span></span>
<span id="cb75-24">df_pd.loc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bplace"</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loc by labels(s)</span></span>
<span id="cb75-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0         Hirot</span></span>
<span id="cb75-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1       Andijon</span></span>
<span id="cb75-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2    Shahrisabz</span></span>
<span id="cb75-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3       Andijon</span></span>
<span id="cb75-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Name: bplace, dtype: object</span></span>
<span id="cb75-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1-2 rows, cols names and bplace ----------------------</span></span>
<span id="cb75-31">df_pd.loc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"names"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"byear"</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or df_pd.bplace</span></span>
<span id="cb75-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    names  byear</span></span>
<span id="cb75-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0  Navoi   1441</span></span>
<span id="cb75-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Bobur   1483</span></span>
<span id="cb75-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Temur   1336</span></span>
<span id="cb75-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col bplace = "Andijon" --------------------</span></span>
<span id="cb75-37">df_pd.loc[df_pd[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bplace"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>]</span>
<span id="cb75-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;      names  byear   bplace</span></span>
<span id="cb75-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1    Bobur   1483  Andijon</span></span>
<span id="cb75-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3  Cholpon   1898  Andijon</span></span>
<span id="cb75-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col byear &lt; 1000 --------------------------</span></span>
<span id="cb75-42">df_pd.loc[df_pd.byear <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]</span>
<span id="cb75-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names  byear  bplace</span></span>
<span id="cb75-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 6   Xorazmi    783    Xiva</span></span>
<span id="cb75-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8  Termiziy    824  Termiz</span></span>
<span id="cb75-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9   Buxoriy    810  Buxoro</span></span>
<span id="cb75-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------------------------------</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="change-row--and-colnames" class="level3">
<h3 class="anchored" data-anchor-id="change-row--and-colnames">Change Row- and Colnames</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-11-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-1" aria-controls="tabset-11-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-11-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-2" aria-controls="tabset-11-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-11-1" class="tab-pane active" aria-labelledby="tabset-11-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb76-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rownames:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(df))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rownames </span></span>
<span id="cb76-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Colnames:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># colnames</span></span>
<span id="cb76-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb76-4">new_rname <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person"</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>)</span>
<span id="cb76-5">new_rname <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strsplit</span>(new_rname, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>))</span>
<span id="cb76-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">New Rowsname:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, new_rname)</span>
<span id="cb76-7"></span>
<span id="cb76-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified rownames:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb76-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change the rownames</span></span>
<span id="cb76-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(df) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (new_rname)</span>
<span id="cb76-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb76-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change the colnames</span></span>
<span id="cb76-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Method1: colnames(c(names of new columns))</span></span>
<span id="cb76-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Method2: setNames(df, c(names of new columns)) </span></span>
<span id="cb76-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Here will be used Method2</span></span>
<span id="cb76-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change colname</span></span>
<span id="cb76-17">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ism"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan yil"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan joy"</span>))</span>
<span id="cb76-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified colnames:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb76-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb76-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb76-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Set key in DF with data.table:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb76-22">dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(df)</span>
<span id="cb76-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setkey</span>(dt, Ism)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Like Index in pandas</span></span>
<span id="cb76-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#call("Key: ", key(dt))</span></span>
<span id="cb76-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(dt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Rownames:
#&gt;  1 2 3 4 5 6 7 8 9 10
#&gt; Colnames: names byear bplace
#&gt; 
#&gt; New Rowsname:
#&gt;  person_1 person_2 person_3 person_4 person_5 person_6 person_7 person_8 person_9 person_10
#&gt; DF with modified rownames:
#&gt;          names byear  bplace
#&gt; person_1 Navoi  1441   Hirot
#&gt; person_2 Bobur  1483 Andijon
#&gt; 
#&gt; 
#&gt; DF with modified colnames:
#&gt;            Ism Tug'ilgan yil Tug'ilgan joy
#&gt; person_1 Navoi          1441         Hirot
#&gt; person_2 Bobur          1483       Andijon
#&gt; 
#&gt; 
#&gt; Set key in DF with data.table:
#&gt; Key: &lt;Ism&gt;
#&gt;        Ism Tug'ilgan yil Tug'ilgan joy
#&gt;     &lt;char&gt;         &lt;num&gt;        &lt;char&gt;
#&gt; 1: Beruniy          1048        Xorazm
#&gt; 2:   Bobur          1483       Andijon</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
data.frame() vs data.table()
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>R da dataframelar uchun turli funktsiyalar mavjud. Umumiy olganda, data.frame() va data.table bir xil. Biz <code>data.table</code> kengaytirilgan funksiyalarga ega <code>data.frame</code> sifatida tasavvur qilishimiz mumkin. <em>data.frame()</em> funksiyasi R ning base ya’ni asosiy(bazaviy, fundamental) funksiyalari qatoriga kiradi. Bu degani, R ni komputerga install qilgandan, R ning asosiy funksiyalari sifatida data.frame ham bo’ladi. Buni telefonni zaryadkasiga taqqoslash mumkin, chunki telefon sotib olsak zaryadkasi birga bo’ladi. Ko’pchillik telefonlaR da esa naushniklarini alohida sotib olish kerak. A <em>data.table</em> easa naushnik, R da alohida paket hisoblanadi, uni funksiyalarini ishlatish uchun avval yuklab olib keyin R ga o’qish kerak, xuddi Python da pandas modulini import qilish kerak bo’lganidek. Bundan tashqari R da jadvallarni tahrirlashda ko’proq qulaylik va funksionallikni ta’minlaydigan boshqa paketlar mavjud, masalan, <em>tibble</em>, <em>tidyverse</em>, <em>dplyr</em> va boshqalar.</p>
</div>
</div>
</div>
</div>
<div id="tabset-11-2" class="tab-pane" aria-labelledby="tabset-11-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb78-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Rownames(index):</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df_pd.index)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb78-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Colnames: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df_pd.columns)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb78-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb78-4">new_pname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user_"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(idx) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df_pd.index)]</span>
<span id="cb78-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">New Rowsname:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_pname<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb78-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified rownames:"</span>)</span>
<span id="cb78-7">df_pd.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_pname</span>
<span id="cb78-8">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb78-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified colnames:"</span>)</span>
<span id="cb78-10">df_pd.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ism"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan yil"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan joy"</span>]</span>
<span id="cb78-11">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb78-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Set a column as index:"</span>)</span>
<span id="cb78-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like key in data.table in r</span></span>
<span id="cb78-14">df_pd.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ism"</span>, inplace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, append <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb78-15">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Rownames(index):
#&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
#&gt; 
#&gt; Colnames: ['names', 'byear', 'bplace']
#&gt; 
#&gt; New Rowsname:
#&gt; ['user_0', 'user_1', 'user_2', 'user_3', 'user_4', 'user_5', 'user_6', 'user_7', 'user_8', 'user_9']
#&gt; 
#&gt; DF with modified rownames:
#&gt;         names  byear   bplace
#&gt; user_0  Navoi   1441    Hirot
#&gt; user_1  Bobur   1483  Andijon
#&gt; 
#&gt; DF with modified colnames:
#&gt;           Ism  Tug'ilgan yil Tug'ilgan joy
#&gt; user_0  Navoi           1441         Hirot
#&gt; user_1  Bobur           1483       Andijon
#&gt; 
#&gt; 
#&gt; Set a column as index:
#&gt;               Tug'ilgan yil Tug'ilgan joy
#&gt;        Ism                               
#&gt; user_0 Navoi           1441         Hirot
#&gt; user_1 Bobur           1483       Andijon</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Dataframelar, yuqorida aytib o’tilganidek, R va Python da eng ko’p ishlatiladigan ma’lumotlar tuzilmalaridandir. Shuning uchun, bu mavzuga am’lumotla tizimini bir qismi sifatida qisqacha yoritildi va diqqat faqat asosiy funktsiyalarga qaratildi. Buning uchun alohida mavzu bo’ladi, xudo xohlasa.</p>
</section>
</section>
</section>
<section id="references" class="level1">




</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-LearnR" class="csl-entry">
Aphalo, Pedro J. 2020. <em><span class="nocase">Learn R As a Language</span></em>. CRC Press.
</div>
<div id="ref-rp_DA" class="csl-entry">
Brown, Taylor R. 2023. <em><span class="nocase">An Introduction to R and Python For Data Analysis</span></em>. CRC Press.
</div>
<div id="ref-reticulate" class="csl-entry">
<span>“<span class="nocase">Calling Python from R</span>.”</span> Apr 2024. https://rstudio.github.io/reticulate/articles/calling_python.html, [Accessed on 2024-04-28].
</div>
<div id="ref-py_ProgWithPy" class="csl-entry">
Dimitrios Xanthidis, Ourania K. Xanthidou, Christos Manolas. 2023. <em>Handbook of Computer Programming with Python</em>. Springer Gabler.
</div>
<div id="ref-r_ModernDA" class="csl-entry">
Sauer, Sebastian. 2019. <em><span class="nocase">Moderne Datenanalyse mit R</span></em>. Springer Gabler.
</div>
<div id="ref-r_DMforSocial" class="csl-entry">
Weidmann, Nils B. 2023. <em>Data Management for Social Scientists</em>. Cambridge University Press.
</div>
<div id="ref-py_Python3" class="csl-entry">
Weigend, Michael. 2019. <em><span class="nocase">Python 3 : Lernen und professionell anwenden. Das umfassende Praxisbuch,</span></em>. 8th ed. Springer Gabler.
</div>
<div id="ref-r_AdvancedR" class="csl-entry">
Wickham, Hadley. 2019. <em><span>Advanced R</span></em>. 2nd ed. Chapman; Hall/CRC.
</div>
<div id="ref-worldpop" class="csl-entry">
<span>“World Population Review.”</span> Feb 2024. https://worldpopulationreview.com/countries, [Accessed on 2024-02-24].
</div>
<div id="ref-TourofDS" class="csl-entry">
Zhang, Nailong. 2021. <em>A Tour of Data Science</em>. Wiley-Blackwell.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Python</category>
  <category>Data Structure</category>
  <category>Uzbek</category>
  <guid>https://sultanov.quarto.pub/blog/posts/DataStructures/datastructures_uz.html</guid>
  <pubDate>Sat, 04 May 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>R &amp; Python: Data Structures
 in German</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/DataStructures/datastructures_de.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/datastructure_de.png" class="nolightbox img-fluid"></p>
<section id="set-up" class="level1 page-columns page-full">
<h1>Set Up</h1>
<p>Der Codeblock bzw. Input wird in <span style="background-color: lightcyan"><em>R hellcyan</em></span> und in <span style="background-color: yellow"><em>Python gelb</em></span> dargestellt. Zeilenanfang im Output ist mit <code>#&gt;</code> belegt.</p>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hallo R Lover!"</span>)</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Hallo R Lover!</span></span></code></pre></div>
</details>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hallo Python Lover!"</span>)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Hallo Python Lover!</span></span></code></pre></div>
</details>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p>
</div>
</div>
</div>
<div class="page-columns page-full"><p>Eine Zusatzinfo ist im Boxe wie unten geschrieben kann duerch ausklappen angezeigt werden: </p><div class="no-row-height column-margin column-container"><span class="margin-aside">Hinweise oder kleine Infos werden auf der Seite dargestellt</span></div></div>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Expand for more
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>More Info here!</p>
</div>
</div>
</div>
</section>
<section id="data-structures" class="level1 page-columns page-full">
<h1>Data Structures</h1>
<div class="page-columns page-full"><p>Es gibt einmal die Basic Data Types, die bei der Zuweisung eines Werts oder bei der Erzeugung einer Variable bzw. eines Objekts festlegen, welche <strong>Werte</strong> dieses Objekt/Variable annehmen kann und welche <strong>Operationen</strong> auf diese Objekte anzuwenden sind. Z.B. eine Zahl 42 der Variable namens beispielsweise <em>var_zahl</em> zugewiesen und mit dem Typ <em>Integer</em> gespeichert werden. Dann kan weitere Berechnugen mit dieser Variable wie Multioplikation, Addition usw. durchgeführt werden. So können Daten als <em>systematisch kodierte Informationen über die reale Welt definiert <span class="citation" data-cites="r_DMforSocial">(Weidmann 2023)</span></em> werden.  Daten sind für uns dann vom Nutzen, wenn sie in einer Format sind, so dass sie gespeichert, geteilt, analisiert und auf sie irgendwelche Operationen und Fubktionen angewendet werden können. Das bestimmt die <strong><em>Data Dstructure</em></strong>, also <em>Oraganisation</em> und <em>Speicherung</em> von Daten. Was gemeint ist, möchte ich durch ein Beispiel in Anlehnung an <span class="citation" data-cites="r_DMforSocial">(Weidmann 2023)</span> zeigen.</p><div class="no-row-height column-margin column-container"><span class="margin-aside">Mehr zu Basic Data Types in <a href="../../posts/DataTypes/datatypes_de.html" target="_blank">R &amp; Python: Types of Data</a>).</span></div></div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">raw_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb3-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Deutschland ist ein Land mit 83,3 Mln. Einwohnern und sein Hauptstadt</span></span>
<span id="cb3-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ist Berlin; Russland hat 144,1 Mln. Einwohner, Hauptstadt ist Moskau;</span></span>
<span id="cb3-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  Weiteres Land ist Usbekistan mit 35,5 Mln. Einwohnern, sein Hauptstadt</span></span>
<span id="cb3-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  ist Taschkent. Letztes Land sind USA mit 341,2 Mln. Einwohnern, die</span></span>
<span id="cb3-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  Hauptstadt ist Washington, D.C."</span></span></code></pre></div>
</div>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">Im Beispiel sind Populationen in Deutschland, Usbekistan. Russland und den USA in 2023 von <span class="citation" data-cites="worldpop">(<span>“World Population Review”</span> Feb 2024)</span>.</span></div></div>
<p>Man kann das Object <em>raw_data</em> im Grunde als eine Datenbank sehen, welche die Informationen über vier Länder, ihre Hauptstädte und ihre Bevölkerungszahl enthält. Für Menschen ist einfach, aus diesem Text die Informationen zu extrahieren, wie z.B. welches Land hat größere Population, welche Population ist die größte oder kleinste usw. Aber für Komputer ist nicht verständlich, sie rechnerisch zu verarbeiten, weil die Daten keine Struktur haben. Wir könnten aber diese Daten mit dem gleichen Inhalt anders speichern, also mit einer bestimmten Struktur z. B. als <em>datafarame</em>. Somit sind Daten dem Komputer verständlich, so dass er rechnerisch verarbeiten kann.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">df_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Germany"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Uzbekistan"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Russia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USA"</span>),</span>
<span id="cb4-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">population =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">83.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">35.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">144.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">341.2</span>),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">capital =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Berlin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tashkent"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Moscow"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Washington"</span>)</span>
<span id="cb4-5">)</span>
<span id="cb4-6">df_r</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt;      country population    capital
#&gt; 1    Germany       83.3     Berlin
#&gt; 2 Uzbekistan       35.5   Tashkent
#&gt; 3     Russia      144.1     Moscow
#&gt; 4        USA      341.2 Washington</code></pre>
</div>
</div>
<p>Um die Daten zu speichern, wurde im zweiten Beispiel <code>data.frame</code> von R verwendet, eine Data Structure von R für Tabellen, wie es in Python dafür <code>pandas</code> gibt. Jedes Land hat verschieden Typen von Informationen (county ist character also string, population ist double also float). Im Verglich zu den im ersten Beispiel als normaler Text (raw_data) gespeicherten Daten sind als dataframe bzw Tabelle gespeicherte (df_r) Daten leichter zu verstehen und zu verarbeiten.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum of population</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum of population: {sum(df_r$population)}"</span>)</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Max of Population</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max of Population: {max(df_r$population)}"</span>)</span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary of Data</span></span>
<span id="cb6-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary of data:"</span>)</span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(df_r)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Sum of population: 604.1
#&gt; Max of Population: 341.2
#&gt; 
#&gt; Summary of data:
#&gt;    country            population       capital         
#&gt;  Length:4           Min.   : 35.50   Length:4          
#&gt;  Class :character   1st Qu.: 71.35   Class :character  
#&gt;  Mode  :character   Median :113.70   Mode  :character  
#&gt;                     Mean   :151.03                     
#&gt;                     3rd Qu.:193.38                     
#&gt;                     Max.   :341.20</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb8-2">df_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(r.df_r)</span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum of population</span></span>
<span id="cb8-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Sum of population: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"population"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum of population</span></span>
<span id="cb8-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Sum of population: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"population"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summary of Data</span></span>
<span id="cb8-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary of data:"</span>)</span>
<span id="cb8-9">df_py.describe()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Sum of population: 604.0999999999999
#&gt; Sum of population: 341.2
#&gt; 
#&gt; Summary of data:
#&gt;        population
#&gt; count    4.000000
#&gt; mean   151.025000
#&gt; std    134.346799
#&gt; min     35.500000
#&gt; 25%     71.350000
#&gt; 50%    113.700000
#&gt; 75%    193.375000
#&gt; max    341.200000</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="how-is-the-data-are-structured-in-r-and-python" class="level1 page-columns page-full">
<h1>How is the data are structured in R and Python</h1>
<p>Egal, ob wir die Daten in R oder in Python bearbeiten, in beiden Sprachen werden sie als <strong><em>Object</em></strong> gespeichert. Objekte können erstellt werden, indem man z.B einer Variable (Name des Objekts) den Wert (Objekt) zuweist. Sagen wir, wir erzeugen ein Objekt namens <em>age</em> und weiesen ihm den Wert <em>35</em> (Alter): <code>age &lt;- 35</code> (in R) und <code>age = 35</code> (in Python). Aber meistens will man nicht manulell Tausende von Objekten (age1, age2, age3, …) erstellen, sondern eine Liste namens <em>ages</em> haben, die alle Alter (Objekte) enthält. Daraus wird eine <em>gruppierte Datenstruktur</em>, aslo ein Object, das aus mehreren Einzelobjecten zusammengesetzt sind. Davon gibt es unterschiedliche, wie <strong><em>Lists</em></strong>, <strong><em>Vectors</em></strong>, <strong><em>Arrays</em></strong>, <strong><em>Series</em></strong>, <strong><em>Dictionaries</em></strong> etc. Sie unterscheiden sich durch ihre Format, Struktur, Methoden usw., aber Kernpunkt ist gleich: Es werden mehrere Objekte in ein gruppiertes bzw kombiniertes Objekt (in einer von dieser Datenstruktur) gespeichert.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1">ages_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>)</span>
<span id="cb10-2">names_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ben"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brandon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dirk"</span>)</span>
<span id="cb10-3">ages_r</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ages_r)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of ages_r</span></span>
<span id="cb10-5">names_r</span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(names_r)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of names_r</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 35 24 42 24 52 35 37
#&gt; [1] "numeric"
#&gt; [1] "Ali"     "Temur"   "Ben"     "Brandon" "John"    "Doe"     "Dirk"   
#&gt; [1] "character"</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More about <code>c()</code> in R
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>In R werden Sequenzen oder Reihen mit <code>c()</code> <em>(c wie combine)</em> erzeugt, das ist wie man in Python die Objekte bzw. Daten in Form <code>[]</code> eingibt.</p>
</div>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1">ages_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>]</span>
<span id="cb12-2">names_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ben"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brandon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dirk"</span>]</span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ages_py)</span>
<span id="cb12-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ages_py)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of ages_py</span></span>
<span id="cb12-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(names_py)</span>
<span id="cb12-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(names_py)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of names_py</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [35, 24, 42, 24, 52, 35, 37]
#&gt; &lt;class 'list'&gt;
#&gt; ['Ali', 'Temur', 'Ben', 'Brandon', 'John', 'Doe', 'Dirk']
#&gt; &lt;class 'list'&gt;</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="page-columns page-full"><p>Sie sind in Python und R ähnlich, nur Obekt in R heiß <strong>Vektor</strong> und in Python heiß <strong>Liste</strong>. Es gibt auch andere Datenstrukturen in Python und R, die nach Eigenschaften identisch sind oder sich unterscheiden. Beim Vergleich die Datenstrukturen in R und Python, denke ich, <span style="color:red;">ist es aber wichtig, dass die Objekte <em>homogen</em> oder <em>heterogen</em></span> sind. </p><div class="no-row-height column-margin column-container"><span class="margin-aside"><strong>homogen</strong> – Objekte sind vom gleichen Typ (Alle Obkete sind nur Zahlen oder Texte), z.B Vektoren in R oder NumPy-Arrays oder Liste <em>mit gleichen Datentypen</em> in Python <strong>heterogen</strong> – Objekte können unterschiedlich sein wie Liste in R oder Liste oder Dictionaries in Python</span></div></div>
<section id="data-structures-in-r" class="level2">
<h2 class="anchored" data-anchor-id="data-structures-in-r">Data Structures in R</h2>
<p>Wichtige Datenstrukturen in R könen dadurch, wie viele <strong>Dimensionen</strong> ein Objekt hat - ein demensional (Vektor), zwei demensional (Matrix) und mehr (Arrays) und dadurch, ob die Elemente eines Objekts <strong>homogen</strong> - alle Elemente von gleicher Art z.B. nur Text, Zahlen sind, oder ob die Elemente <strong>heterogen</strong> - alle Elemente unterschiedlich sind, gekenzeichnet werden. Anhand dieser Merkmalen kann man die zentralen Objektarten wie folgt zusammenfassen <span class="citation" data-cites="r_ModernDA">(Sauer 2019)</span>:</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th style="text-align: left;">Dimension</th>
<th style="text-align: left;">Homogen</th>
<th style="text-align: left;">Heterogen</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1d</td>
<td style="text-align: left;">Vector</td>
<td style="text-align: left;">List</td>
</tr>
<tr class="even">
<td style="text-align: left;">2d</td>
<td style="text-align: left;">Matrix</td>
<td style="text-align: left;">Dataframe</td>
</tr>
<tr class="odd">
<td style="text-align: left;">nd</td>
<td style="text-align: left;">Array</td>
<td style="text-align: left;"></td>
</tr>
</tbody>
</table>
<p>Vektoren sind eine der wichtigsten Datensrtukturen in R und stellen ein zentrales Elemnt in R-Objekten dar. Es gibt vier Arten von Atomar- bzw. Reinvektoren: <code>Logical</code>, <code>Integer</code>, <code>Double</code> und <code>Character</code> (welche stings entält), wobei <em>Integer</em> und <em>Double</em> sich zum Datentyp <code>Numeric</code> zusammenfassen lassen. Hier eine Übersicht von atomaren Vektoren nach <span class="citation" data-cites="r_AdvancedR">(Wickham 2019)</span>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/ds_r.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Atomar Vectors"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/ds_r.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Atomar Vectors</figcaption>
</figure>
</div>
</section>
<section id="data-structute-in-python" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="data-structute-in-python">Data Structute in Python</h2>
<p>Datenstrukturen können also als „Container“ betrachtet werden, die Daten nach Typ organisieren und gruppieren. Die sogenannten wichtigen Built-in Data Structures in Python sind Liste (<code>list</code>), Menge (<code>set</code>), Dictionaries (<code>dict</code>) und Tupel (<code>tuple</code>). Jeder Datentypen haben eigene Struktur und Eigenschaften</p>
<p><br> - <code>lists</code> <br> - <code>ditionaries</code> <br> - <code>tuples</code> <br> - <code>sets</code></p>
<p><br>Darüber hinaus gibt Arrays und Dataframes(Tabellen): <br> - <code>arrays</code> von NumPy (Numerical Python) <br> - <code>DataFrame</code> von Pandas</p>
<p>Im Folgenden sind die Data Structures in R und Python grafisch dargestellt.</p>
<div class="column-screen-inset">
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Quelle: <a href="https://r.qcbs.ca/workshop01/pres-en/workshop01-pres-en.html#100" target="_blank">Internet</a> <img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/r_ds.png" class="img-fluid" alt="Click for zooming"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Quelle: <a href="https://www.linkedin.com/posts/venkateshpappakrishnan_data-structures-in-python-python-for-aspiring-activity-6447685118260756480-rU36/?trk=public_profile_like_view" target="_blank">Internet</a> <img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/py_ds.png" class="img-fluid" alt="Click for zooming"></p>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="homogeneous-data-structure" class="level1">
<h1>Homogeneous data structure</h1>
<p>Wie oben schon erwähnt, homogene Datenstrukturen enthalten die Daten (Objekte oder Elemente) desselben Typs. Meistents werden die Daten auf dieser Art gespeichert. Dazu gehören in R Vektoren (1d-NumPy-Arrays in Python), Matizien (2d-NumPy-Arrays in Python) und Arrays (nd-NumPy-Arrays in Python).</p>
<section id="vector-in-r-and-arrays-series-in-python" class="level2">
<h2 class="anchored" data-anchor-id="vector-in-r-and-arrays-series-in-python"><code>vector</code> in R and <code>arrays</code> &amp; <code>Series</code> in Python</h2>
<p>Vektoren in R sind eindimensional und homogen. Mit dieser Eigenschaft haben sie Gemeinsamkeit mit 1d-NumPy-Arrays und Pandas Series in Python. Vektoren in R sind auch ähnlich wie die Liste in Python, aber <em>nur dann, wenn die Daten in der Liste von Python den gleichen Typ haben</em>.</p>
<!-- [Achrung!]{style="color:red;"} --  -->
<section id="creating" class="level3">
<h3 class="anchored" data-anchor-id="creating">Creating</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<p>– with <code>c()</code> (like <code>[]</code> in Python)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1">v1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>); v1</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v1)</span>
<span id="cb14-3">v2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f"</span>); v2</span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v2)</span>
<span id="cb14-5">v3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logical"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); v3</span>
<span id="cb14-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v3)</span>
<span id="cb14-7">v4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>); v4</span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v4)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 1 7 2 4 5 8 2 9
#&gt; [1] "numeric"
#&gt; [1] "a" "b" "c" "z" "f"
#&gt; [1] "character"
#&gt; [1] FALSE FALSE FALSE FALSE FALSE
#&gt; [1] "logical"
#&gt; [1] 0 0 0 0 0 0 0
#&gt; [1] "numeric"</code></pre>
</div>
</div>
</div>
<p>– with <code>seq(from, to, by)</code> (like <code>range(from, to, by)</code> in Python or <code>arange()</code> from NumPy)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1">seq1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>; seq1                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from 2 to 9</span></span>
<span id="cb16-2">seq2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); seq2                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from 1 to 5</span></span>
<span id="cb16-3">seq3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); seq3 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># step = 3</span></span>
<span id="cb16-4">seq4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); seq4     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># count = 5</span></span>
<span id="cb16-5">seq5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">along.with =</span> seq4); seq5 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seq of same length with seq4</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 2 3 4 5 6 7 8 9
#&gt; [1] 1 2 3 4 5
#&gt; [1] 3 6 9
#&gt; [1]  3.00  4.75  6.50  8.25 10.00
#&gt; [1] 11.0 12.5 14.0 15.5 17.0</code></pre>
</div>
</div>
</div>
<p>– with <code>rep()</code> (like <code>np.repeat()</code> from NumPy or <code>pd.rep()</code> from Pandas)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">rep1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); rep1 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeating seq 3 times</span></span>
<span id="cb18-2">rep2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); rep2  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repeating each obj 3 times</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 1 2 3 1 2 3 1 2 3
#&gt; [1] 1 1 1 2 2 2 3 3 3</code></pre>
</div>
</div>
</div>
<p>– with <code>sample()</code> or <code>runif()</code> (like <code>random.choice()</code> from NumPy)</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1">smp1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>); smp1</span>
<span id="cb20-2">vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neutral"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>)</span>
<span id="cb20-3">smp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(vec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>); smp2</span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vector with 5 elements:</span></span>
<span id="cb20-5">run1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); run1</span>
<span id="cb20-6">run2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>); run2</span>
<span id="cb20-7">run3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)); run3</span>
<span id="cb20-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normal distribution</span></span>
<span id="cb20-9">rn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>); rn</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1]  1  8 10  6  9
#&gt; [1] "neutral"  "positive" "positive" "negative" "negative"
#&gt; [1] 0.2332719 0.4469084 0.9075884 0.2411691 0.6932269
#&gt; [1] 2.734668 4.615119 9.273173
#&gt;  [1] 75 80 22 37 76 89 47 36 21 49 25 19 73 46 40
#&gt; [1] -0.6840332  0.7098267 -0.8828714 -0.5181750  0.2727017</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<p>– with <code>[]</code> like <code>c()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb22-2"></span>
<span id="cb22-3">v1_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v1_p)</span>
<span id="cb22-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v1_p)</span>
<span id="cb22-5">v2_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v2_p)</span>
<span id="cb22-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v2_p)</span>
<span id="cb22-7">v3_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v3_p)</span>
<span id="cb22-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v3_p)</span>
<span id="cb22-9">v4_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ones((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(v4_p) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rep(1,7) in R</span></span>
<span id="cb22-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(v4_p)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1, 7, 2, 4, 5, 8, 2, 9]
#&gt; &lt;class 'list'&gt;
#&gt; [False False False False False]
#&gt; &lt;class 'numpy.ndarray'&gt;
#&gt; [0 0 0 0 0 0 0]
#&gt; &lt;class 'numpy.ndarray'&gt;
#&gt; [1 1 1 1 1 1 1]
#&gt; &lt;class 'numpy.ndarray'&gt;</code></pre>
</div>
</div>
</div>
<p>– with <code>arange()</code> like <code>seq()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1">ar1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar1                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pythonlist</span></span>
<span id="cb24-2">ar2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar2             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># python list</span></span>
<span id="cb24-3">ar3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar3                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NumPy 1d array</span></span>
<span id="cb24-4">ar4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ar4                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># step = 3 </span></span>
<span id="cb24-5">ar5 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, retstep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>ar5 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># count = 5, with step = 1.75    </span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [0, 1, 2, 3, 4]
#&gt; [2, 3, 4, 5, 6, 7, 8, 9]
#&gt; array([2, 3, 4, 5, 6, 7, 8, 9])
#&gt; array([3, 6, 9])
#&gt; (array([ 3.  ,  4.75,  6.5 ,  8.25, 10.  ]), 1.75)</code></pre>
</div>
</div>
</div>
<p>– with <code>np.repeat()</code> or <code>pd.Series.repeat()</code> like <code>rep()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb26-2"></span>
<span id="cb26-3">rep1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep1             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Python</span></span>
<span id="cb26-4">rep2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.tile(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep2      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NumPy: repeating seq 3 times</span></span>
<span id="cb26-5">rep3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.repeat(np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep3    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NumPy: repeating each obj 3 times</span></span>
<span id="cb26-6">rep4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)).repeat(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rep4 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pandas Series: repeating each obj 2 times</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1, 2, 3, 1, 2, 3, 1, 2, 3]
#&gt; array([1, 2, 3, 1, 2, 3, 1, 2, 3])
#&gt; array([1, 1, 1, 2, 2, 2, 3, 3, 3])
#&gt; 0    1
#&gt; 0    1
#&gt; 1    2
#&gt; 1    2
#&gt; 2    3
#&gt; 2    3
#&gt; dtype: int64</code></pre>
</div>
</div>
</div>
<p>– with <code>random()</code> like <code>sample()</code> or <code>runif()</code> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb28-2">lis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neutral"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>]</span>
<span id="cb28-3">rd1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(lis, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, replace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rd1)</span>
<span id="cb28-4">rd2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.rand(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rd2                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5 random numbers</span></span>
<span id="cb28-5">rd3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rd3  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># integer random numbers from 0 to 100</span></span>
<span id="cb28-6">rd4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> rd4                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># standard normal distribution</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; ['neutral' 'neutral' 'neutral' 'neutral' 'negative']
#&gt; array([0.37621427, 0.340763  , 0.43995926, 0.61406061, 0.32292481])
#&gt; array([32, 26, 10, 59, 86])
#&gt; array([ 0.47682804,  0.89101471, -0.21079475, -0.00142282])</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="slicing" class="level3">
<h3 class="anchored" data-anchor-id="slicing">Slicing</h3>
<p>Eine der wichtigsten nützlichsten Operationen, die man auf Vektoren, Listen und eindimensionale Arrays anwenden kann, ist <em>Indexierung</em>. Dabei kann man einzelnes Element oder Teilmenge von Elementen durch ihre Position <em>(Index)</em> auswählen.</p>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><span style="background-color:yellow;">Index vom ersten Element ist in R – <code>1</code> und in Python beginnt mit <code>0</code>.</span> Die Länge eines Vektors, einer Liste oder eines 1d-Arrays kann in R mit der Funktion <code>length(Obj)</code> und in Python mit <code>len(Obj)</code> ermittelt werden.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/index.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="Indexes in R and Python"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/index.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>Indexes in R and Python</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In Python</span></span>
<span id="cb30-2">lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]</span>
<span id="cb30-3">lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first element</span></span>
<span id="cb30-4">lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second element</span></span>
<span id="cb30-5">lst[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># last element</span></span>
<span id="cb30-6">lst[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># backward</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In R</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Used Variable lst created in Python Chunk</span></span>
<span id="cb31-3">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first element</span></span>
<span id="cb31-4">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second element</span></span>
<span id="cb31-5">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst)]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># last element</span></span>
<span id="cb31-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lst)              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># backward</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 1
#&gt; 3
#&gt; 7
#&gt; [7, 5, 3, 1]</code></pre>
</div>
</div>
<div class="cell quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 1
#&gt; [1] 3
#&gt; [1] 7
#&gt; [1] 7 5 3 1</code></pre>
</div>
</div>
</div>
</div>
<p>Hier noch weitere Beispiele für Teilmengen und logisches Indexieren. Bei der logischen Indexierung werden die Elemente zurückgegeben, deren logischer Wert gleich <code>TRUE</code> ist.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb34-1">age <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb34-2">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from first until fifth element</span></span>
<span id="cb34-3">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from third until seventh element</span></span>
<span id="cb34-4">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(age)]   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from fifth until last element</span></span>
<span id="cb34-5">age[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)]        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second, fifth and seventh element</span></span>
<span id="cb34-6">age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logic </span></span>
<span id="cb34-7">age[age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>]        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># age under 30</span></span>
<span id="cb34-8">age[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with which()</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; [1] 18 26 32 41 55
#&gt; [1] 32 41 55 22 35
#&gt; [1] 55 22 35 37 20 25
#&gt; [1] 26 55 35
#&gt;  [1]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE
#&gt; [1] 18 26 22 20 25
#&gt; [1] 18 26 22 20 25</code></pre>
</div>
</div>
</div>
<p>Elemente können auch beim Namen angesprochen werden, aber nur dann, wenn sie benannt sind. Das könnte mann auch in Series von Pandas machen, in dem man Element durch den Indexnamen auswählt:</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb36-1">note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>); note</span>
<span id="cb36-2">note[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname</span></span>
<span id="cb36-3">note[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span>)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname multiple elements</span></span>
<span id="cb36-4">note[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by index</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt;   best medium   good    bad 
#&gt;      5      4      3      2 
#&gt; medium 
#&gt;      4 
#&gt; good  bad 
#&gt;    3    2 
#&gt; good 
#&gt;    3</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb38-1">age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(r.age)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create array from r vector age</span></span>
<span id="cb38-2">age[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from first until fifth element</span></span>
<span id="cb38-3">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from third until seventh element</span></span>
<span id="cb38-4">age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from fifth until last element</span></span>
<span id="cb38-5">[age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], age[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># second, fifth and seventh elem</span></span>
<span id="cb38-6">age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logic </span></span>
<span id="cb38-7">age[age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>]            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># age under 30</span></span>
<span id="cb38-8">age[np.where(age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with np.where()</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; array([18., 26., 32., 41., 55.])
#&gt; array([32., 41., 55., 22., 35.])
#&gt; array([55., 22., 35., 37., 20., 25.])
#&gt; [32.0, 22.0, 37.0]
#&gt; array([ True,  True, False, False, False,  True, False, False,  True,
#&gt;         True])
#&gt; array([18., 26., 22., 20., 25.])
#&gt; array([18., 26., 22., 20., 25.])</code></pre>
</div>
</div>
</div>
<p>Auch bei Series kann man Element oder Elemente durch ihre Indexen oder Indexnamen ansprechen, das geht wie bei <em>named vectors</em> in R</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb40-1">note <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"medium"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best"</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> note</span>
<span id="cb40-2">note[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname</span></span>
<span id="cb40-3">note[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by indexname multiple elements</span></span>
<span id="cb40-4">note.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by index</span></span>
<span id="cb40-5">note.iloc[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># by index multiple elements</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; bad       2
#&gt; good      3
#&gt; medium    4
#&gt; best      5
#&gt; dtype: int64
#&gt; 3
#&gt; best    5
#&gt; bad     2
#&gt; dtype: int64
#&gt; 4
#&gt; good      3
#&gt; medium    4
#&gt; best      5
#&gt; dtype: int64</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="matrix-in-r-and-2d-array-in-python" class="level2">
<h2 class="anchored" data-anchor-id="matrix-in-r-and-2d-array-in-python"><code>matrix</code> in R and <code>2d-Array</code> in Python</h2>
<p>Matrizen in R sind zweidimensionale Vektoren, deren Elemente numerisch sind, also <em>homogen</em>. Sie werden durch die Funktion <code>matrix(data, nrow, ncol)</code> erstellt. In Python gibt es keine Funktion explizit für die Erstellung von Matrizen. Matrizen in Python sind im Prinzip <em>2d-NumPy-Arrays</em>. Für die Slicing kommen hier auch gleiche Methoden wie bei Vektoren oder 1d-NumPy-Arrys <em>(vorheriges Kapitel)</em> zur Anwenung, eben werden neben Rowindex auch Columnindex in rechteckigen Klammern <code>[]</code> eingegeben.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb42-1">matrix_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span> )</span>
<span id="cb42-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3x4-Matix filling by columns (matrix_c):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>);<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(matrix_c)</span>
<span id="cb42-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix_c</span></span>
<span id="cb42-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dimension of matrix_c: {dim(matrix_c)}"</span>)</span>
<span id="cb42-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matrix_c</span></span>
<span id="cb42-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shape of matrix_c: ({nrow(matrix_c)}, {ncol(matrix_c)})"</span>)</span>
<span id="cb42-7">matrix_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> )</span>
<span id="cb42-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">4x3-Matix filling by rows (matrix_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>);<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(matrix_r)</span>
<span id="cb42-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix_r</span></span>
<span id="cb42-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dimension of matrix_r: {dim(matrix_r)}"</span>)</span>
<span id="cb42-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matrix_r</span></span>
<span id="cb42-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shape of matrix_r: ({nrow(matrix_r)}, {ncol(matrix_r)})"</span>)</span>
<span id="cb42-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb42-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Slicing:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-15">matrix_c[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2, col 3</span></span>
<span id="cb42-16">matrix_c[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column 4</span></span>
<span id="cb42-17">matrix_c[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># columns 2 and 4</span></span>
<span id="cb42-18">matrix_r[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2</span></span>
<span id="cb42-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name cols &amp; rows</span></span>
<span id="cb42-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">name the columns and rows of matrix "matrix_r":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb42-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(matrix_r) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col3"</span>)</span>
<span id="cb42-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(matrix_r) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row4"</span>)</span>
<span id="cb42-23">matrix_r</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 3x4-Matix filling by columns (matrix_c):
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    1    4    7   10
#&gt; [2,]    2    5    8   11
#&gt; [3,]    3    6    9   12
#&gt; Dimension of matrix_c: 3
#&gt; Dimension of matrix_c: 4
#&gt; Shape of matrix_c: (3, 4)
#&gt; 
#&gt; 4x3-Matix filling by rows (matrix_r):
#&gt;      [,1] [,2] [,3]
#&gt; [1,]    1    2    3
#&gt; [2,]    4    5    6
#&gt; [3,]    7    8    9
#&gt; [4,]   10   11   12
#&gt; Dimension of matrix_r: 4
#&gt; Dimension of matrix_r: 3
#&gt; Shape of matrix_r: (4, 3)
#&gt; 
#&gt; Slicing:
#&gt; [1] 8
#&gt; [1] 10 11 12
#&gt;      [,1] [,2]
#&gt; [1,]    4   10
#&gt; [2,]    5   11
#&gt; [3,]    6   12
#&gt; [1] 4 5 6
#&gt; 
#&gt; name the columns and rows of matrix "matrix_r":
#&gt;      col1 col2 col3
#&gt; row1    1    2    3
#&gt; row2    4    5    6
#&gt; row3    7    8    9
#&gt; row4   10   11   12</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb44-1">matriks_c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>)</span>
<span id="cb44-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"3x4-Matix filling by columns (matriks_c):</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix matriks_c</span></span>
<span id="cb44-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Dimension of matrix matriks_c: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ndim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matriks_c</span></span>
<span id="cb44-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Shape of matriks_c: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># np.shape(matriks_c)[0]; np.shape(matriks_c)[1]</span></span>
<span id="cb44-8">matriks_r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>)</span>
<span id="cb44-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4x3-Matix filling by rows (matriks_r):</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dimension of matrix matriks_r</span></span>
<span id="cb44-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Dimension of matrix matriks_r: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ndim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counts of rows &amp; Cols from matriks_r</span></span>
<span id="cb44-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Shape of matriks_r: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>matriks_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># np.shape(matriks_r)[0]; np.shape(matriks_r)[1]</span></span>
<span id="cb44-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb44-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Slicing:"</span>)</span>
<span id="cb44-17">matriks_c[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2, col 3</span></span>
<span id="cb44-18">matriks_c[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column 4</span></span>
<span id="cb44-19">matriks_c[:, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># columns 2 and 4</span></span>
<span id="cb44-20">matriks_r[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :]     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row 2</span></span>
<span id="cb44-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name cols &amp; rows</span></span>
<span id="cb44-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">name the columns and rows of matrix "matriks_r":'</span>)</span>
<span id="cb44-23">colnames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col3"</span>]</span>
<span id="cb44-24">rownames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row4"</span>]</span>
<span id="cb44-25">pd.DataFrame(matriks_r, columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colnames, index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rownames)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; 3x4-Matix filling by columns (matriks_c):
#&gt; [[ 1  4  7 10]
#&gt;  [ 2  5  8 11]
#&gt;  [ 3  6  9 12]]
#&gt; Dimension of matrix matriks_c: 2
#&gt; Shape of matriks_c: (3, 4)
#&gt; 
#&gt; 4x3-Matix filling by rows (matriks_r):
#&gt; [[ 1  2  3]
#&gt;  [ 4  5  6]
#&gt;  [ 7  8  9]
#&gt;  [10 11 12]]
#&gt; Dimension of matrix matriks_r: 2
#&gt; Shape of matriks_r: (4, 3)
#&gt; 
#&gt; Slicing:
#&gt; 8
#&gt; array([10, 11, 12])
#&gt; array([[ 4, 10],
#&gt;        [ 5, 11],
#&gt;        [ 6, 12]])
#&gt; array([4, 5, 6])
#&gt; 
#&gt; name the columns and rows of matrix "matriks_r":
#&gt;       col1  col2  col3
#&gt; row1     1     2     3
#&gt; row2     4     5     6
#&gt; row3     7     8     9
#&gt; row4    10    11    12</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="mehrdiminsionale-arrays" class="level2">
<h2 class="anchored" data-anchor-id="mehrdiminsionale-arrays">Mehrdiminsionale Arrays</h2>
<p>(Mehrdimensionale)Arrays in R werden mit der Funktion <code>array(vector, dim = c(nrow, ncol, nmat))</code> erstellt. Dabei ist <em>vector</em> Datenreihe vom gleichen Typ, <em>nrow</em> und <em>ncol</em> sind Zeilen- und Spaltennummer, <em>nmat</em> gibt die Dimension an, also die Zahl von <code>nrow*ncol</code> Matrizen im Array.</p>
<p>Für die Erstellung von Arrays in Python gibt es mehrere Funktionen wie <code>numpy.arange()</code>, <code>numpy.zeros()</code>, <code>numpy.ones()</code>. Im Folgenden wird ein 3d-Array in R und Python sowie Slicing und Summenberechnung dargestellt.</p>
<p>Im Folgenden wird ein Beispiel für 3d-Array visuell und Slicing und Summenberechnung bei diesem Array praktisch dargestellt.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-6-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-1" aria-controls="tabset-6-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-6-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-2" aria-controls="tabset-6-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-6-1" class="tab-pane active" aria-labelledby="tabset-6-1-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/arr_r.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3" title="3d Array with twice 3x4 2d-Arrays"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/arr_r.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>3d Array with twice 3x4 2d-Arrays</figcaption>
</figure>
</div>
<p><strong>Slicing</strong> <br> Wie bei Vektoren, oder 1d- oder 2d-Arrays kann auch bei 3d-Arrays ein Element oder eine Teilmenge aus dem Array abgeschnitten werden. Dabei werden Index von dem Element oder Indizies von der Teilmenge in bekannten rechteckigen Klammern <code>[]</code> eingegeben. Im Beispiel hat der Array shape = (3, 4, 2). Das gibt die Funktion in R <code>dim(array)</code> und in Python <code>array.shape</code> zurück. im Beispiel gibt 3 - Zeilen, 4 - Spalten und 2 - Dimension an. D.h., der Array hat 2 Matrizen jeweils mit 3 Zeilen und 4 Spalten. Beim Indexieren muss man dementsprechen in richtige Position eingeben. Z.B. <code>arr_r[, , 2]</code> gibt den zweiten Matrix mit allen Zeilen und Spalten zurück.</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create 3d-array</span></span>
<span id="cb46-2">arr_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb46-3">arr_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aperm</span>(arr_r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">perm =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)); arr_r</span>
<span id="cb46-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shape: "</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(arr_r), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1st matrix/2d-Array of the 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-6">arr_r[, , <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb46-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Element in 2nd row and 1st col of the 2nd matrix from 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-8">arr_r[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb46-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3rd column elements of the 2nd matrix from 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-10">arr_r[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb46-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2nd row elements of the 1st matrix from 3d-Array (arr_r):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-12">arr_r[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), , <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb46-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Check if elemnt (9) exist in the array:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-14"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> arr_r</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; , , 1
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    0    1    2    3
#&gt; [2,]    4    5    6    7
#&gt; [3,]    8    9   10   11
#&gt; 
#&gt; , , 2
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]   12   13   14   15
#&gt; [2,]   16   17   18   19
#&gt; [3,]   20   21   22   23
#&gt; 
#&gt; Shape:  3 4 2 
#&gt; 
#&gt; 1st matrix/2d-Array of the 3d-Array (arr_r):
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    0    1    2    3
#&gt; [2,]    4    5    6    7
#&gt; [3,]    8    9   10   11
#&gt; 
#&gt; Element in 2nd row and 1st col of the 2nd matrix from 3d-Array (arr_r):
#&gt; [1] 16
#&gt; 
#&gt; 3rd column elements of the 2nd matrix from 3d-Array (arr_r):
#&gt; [1] 14 18 22
#&gt; 
#&gt; 2nd row elements of the 1st matrix from 3d-Array (arr_r):
#&gt; [1] 4 5 6 7
#&gt; 
#&gt; Check if elemnt (9) exist in the array:
#&gt; [1] TRUE</code></pre>
</div>
</div>
</div>
<p><strong>Operationen</strong> <br> Um die Summe bei Arrays in R zu berechnen, kann man die Funktion <code>rowSums()</code>- Summe von Zeilen, <code>colSums()</code>- Summe von Spalten benutzen, es gibt auch in R die Funktion <code>sum()</code> wie in Python, diese kann man hier mit der Funktion <code>apply</code> benutzen.</p>
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb48-1">arr_r</span>
<span id="cb48-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum by row-wise with rowSums:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(arr_r)</span>
<span id="cb48-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by row-wise with apply, same like rowSums:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(arr_r, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), sum)</span>
<span id="cb48-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by column-wise with colSums:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(arr_r)</span>
<span id="cb48-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by column-wise with apply</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(arr_r, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), sum)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; , , 1
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]    0    1    2    3
#&gt; [2,]    4    5    6    7
#&gt; [3,]    8    9   10   11
#&gt; 
#&gt; , , 2
#&gt; 
#&gt;      [,1] [,2] [,3] [,4]
#&gt; [1,]   12   13   14   15
#&gt; [2,]   16   17   18   19
#&gt; [3,]   20   21   22   23
#&gt; 
#&gt; Sum by row-wise with rowSums:
#&gt; [1]  60  92 124
#&gt; 
#&gt; Sum by row-wise with apply, same like rowSums:
#&gt; [1]  60  92 124
#&gt; 
#&gt; Sum by column-wise with colSums:
#&gt;      [,1] [,2]
#&gt; [1,]   12   48
#&gt; [2,]   15   51
#&gt; [3,]   18   54
#&gt; [4,]   21   57
#&gt; 
#&gt; Sum by column-wise with apply
#&gt; [1] 60 66 72 78</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-6-2" class="tab-pane" aria-labelledby="tabset-6-2-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="pics/arr3d.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4" title="3d Array with twice 3x4 2d-Arrays"><img src="https://sultanov.quarto.pub/blog/posts/DataStructures/pics/arr3d.png" class="img-fluid figure-img" alt="Click for zooming"></a></p>
<figcaption>3d Array with twice 3x4 2d-Arrays</figcaption>
</figure>
</div>
<p><strong>Slicing</strong> <br> Die Funktion <code>array.shape</code> geibt shape = (2, 3, 4) von dem Array im Beispiel oben im Bild zurück. D.h., als erstes die Dimension - 2, als zweites Zeilen - 3 und als viertes Spalten - 4 zurückgegeben. D.h., der Array hat 2 Matrizen jeweils mit 3 Zeilen und 4 Spalten. Man möge sich einen Zauberwürfel vorstellen. Wenn man diesen in der Mitte in Scheiben schneidet und in zwei teilt, wäre jeder Teil ein Matrix oder 2d-Array. Man könnte auch diese Teile als Schicht (layer/sheet) vorstellen. Beim Indexieren muss man dementsprechen in richtige Position eingeben. Z.B. <code>arr_r[1, :, :]</code> gibt den zweiten Matrix mit allen Zeilen und Spalten zurück.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Shape is displayed differently in R and Python
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>In R wird die Reihenfolge in Shape anders dargestellt als in Python für gleichen Array, shape in R = (3, 4, 2), shape in Python = (2, 3, 4). In R werden erst Zeilen, dann Spalten und als letztes Dimension) dargestellt. In Python kommt erst Dimension, dann Zeilen und Spalten.</p>
</div>
</div>
</div>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create 3d-Array</span></span>
<span id="cb50-2">arr3d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>).reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>arr3d</span>
<span id="cb50-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>arr3d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb50-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1st 2d-Array (sheet,matrix, layer) of the 3d-Array (arr3d):"</span>)</span>
<span id="cb50-5">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :, :] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or arrd[0]</span></span>
<span id="cb50-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3rd column elements of the 2nd sheet from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-7">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb50-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2nd row elements of the 1st sheet from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-9">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :]</span>
<span id="cb50-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Element (20) in 3rd row and 1st col of the 2nd sheet from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-11">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb50-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Elements (22, 23) from 3rd row and columns 3 and 4 in the 2nd sheet:"</span>)</span>
<span id="cb50-13">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb50-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Element (9) in 3rd row and 2nd col of the 1st sheet from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-15">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb50-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Element (11) in 3rd row and last col of the 1st sheet from 3d-Array (arr3d):"</span>)</span>
<span id="cb50-17">arr3d[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; array([[[ 0,  1,  2,  3],
#&gt;         [ 4,  5,  6,  7],
#&gt;         [ 8,  9, 10, 11]],
#&gt; 
#&gt;        [[12, 13, 14, 15],
#&gt;         [16, 17, 18, 19],
#&gt;         [20, 21, 22, 23]]])
#&gt; 
#&gt; Shape: (2, 3, 4)
#&gt; 
#&gt; 1st 2d-Array (sheet,matrix, layer) of the 3d-Array (arr3d):
#&gt; array([[ 0,  1,  2,  3],
#&gt;        [ 4,  5,  6,  7],
#&gt;        [ 8,  9, 10, 11]])
#&gt; 
#&gt; 3rd column elements of the 2nd sheet from 3d-Array (arr3d):
#&gt; array([14, 18, 22])
#&gt; 
#&gt; 2nd row elements of the 1st sheet from 3d-Array (arr3d):
#&gt; array([4, 5, 6, 7])
#&gt; 
#&gt; Element (20) in 3rd row and 1st col of the 2nd sheet from 3d-Array (arr3d):
#&gt; 20
#&gt; 
#&gt; Elements (22, 23) from 3rd row and columns 3 and 4 in the 2nd sheet:
#&gt; array([10, 11])
#&gt; 
#&gt; Element (9) in 3rd row and 2nd col of the 1st sheet from 3d-Array (arr3d):
#&gt; 9
#&gt; 
#&gt; Element (11) in 3rd row and last col of the 1st sheet from 3d-Array (arr3d):
#&gt; 11</code></pre>
</div>
</div>
</div>
<p><strong>Operationen</strong> <br> Um die Summe bei Arrays in Paython zu berechnen, muss <code>axis</code> eingegeben werden, je nachdem, auf welche Weise man die Summe berechnen will. Gibt man 0 ein, wird die Summe über n-Matrizen gebildet. Bei 1 wird die Summe über spaltenweise und bei 2 zeilenweise berechnet.</p>
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a 3d-array - arr3d:"</span>)</span>
<span id="cb52-2">arr3d</span>
<span id="cb52-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Shape:"</span>)</span>
<span id="cb52-4">arr3d.shape</span>
<span id="cb52-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by sheets (axis =0):"</span>)</span>
<span id="cb52-6">np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr3d, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or arr3d.sum(axis=0)</span></span>
<span id="cb52-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by column-wise (axis = 1):"</span>)</span>
<span id="cb52-8">arr3d.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb52-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Sum by row-wise (axis = 2):"</span>)</span>
<span id="cb52-10">np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr3d, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; a 3d-array - arr3d:
#&gt; array([[[ 0,  1,  2,  3],
#&gt;         [ 4,  5,  6,  7],
#&gt;         [ 8,  9, 10, 11]],
#&gt; 
#&gt;        [[12, 13, 14, 15],
#&gt;         [16, 17, 18, 19],
#&gt;         [20, 21, 22, 23]]])
#&gt; 
#&gt; Shape:
#&gt; (2, 3, 4)
#&gt; 
#&gt; Sum by sheets (axis =0):
#&gt; array([[12, 14, 16, 18],
#&gt;        [20, 22, 24, 26],
#&gt;        [28, 30, 32, 34]])
#&gt; 
#&gt; Sum by column-wise (axis = 1):
#&gt; array([[12, 15, 18, 21],
#&gt;        [48, 51, 54, 57]])
#&gt; 
#&gt; Sum by row-wise (axis = 2):
#&gt; array([[ 6, 22, 38],
#&gt;        [54, 70, 86]])</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="heterogeneous-data-structure" class="level1 page-columns page-full">
<h1>Heterogeneous data structure</h1>
<p>Bei heterogenen Daten handelt sich um die Datenstrukturen bzw. Objekten, deren Elemente unterschiedlich sind. Z.B. in eine Liste können Objekte mit unterschiedlichen Datentypen gespeichert werden.</p>
<section id="lists-in-r-and-lists-dicts-in-python" class="level2">
<h2 class="anchored" data-anchor-id="lists-in-r-and-lists-dicts-in-python"><code>list</code>s in R and <code>list</code>s &amp; <code>dict</code>s in Python</h2>
<section id="lists-in-r" class="level3">
<h3 class="anchored" data-anchor-id="lists-in-r"><code>list</code>s in R</h3>
<p>Unterschied zwischen der Liste und dem Vektor in R besteht darin, dass sie <em>nicht homogen</em> sein müssen und die Länge der Elemente unterschiedlich sein können. Zur Erstellung gibt es Funktion <code>list()</code> in R. Beim Indexieren werden die doppelte rechteckige Klammer <code>[[]]</code> benutzt (im Vergleich zum Vektor <code>[]</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a list</span></span>
<span id="cb54-2">lst_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), </span>
<span id="cb54-3">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>), </span>
<span id="cb54-4">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"love"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello R"</span>)</span>
<span id="cb54-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-6">lst_r</span>
<span id="cb54-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb54-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1</span></span>
<span id="cb54-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb54-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3</span></span>
<span id="cb54-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[3]]</span></span>
<span id="cb54-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb54-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[4]]</span></span>
<span id="cb54-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"   </span></span>
<span id="cb54-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[5]]</span></span>
<span id="cb54-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Hello R"</span></span>
<span id="cb54-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(lst_r), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb54-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Type:  list</span></span>
<span id="cb54-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Atribute of the list:</span></span>
<span id="cb54-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(lst_r)</span>
<span id="cb54-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; List of 5</span></span>
<span id="cb54-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : num 1</span></span>
<span id="cb54-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : num [1:2] 2 3</span></span>
<span id="cb54-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : logi [1:2] TRUE FALSE</span></span>
<span id="cb54-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : chr [1:3] "I" "love" "R"</span></span>
<span id="cb54-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  $ : chr "Hello R"</span></span>
<span id="cb54-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check element (Hello R) is in the list</span></span>
<span id="cb54-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello R"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> lst_r</span>
<span id="cb54-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb54-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the 1st element (1) to 42</span></span>
<span id="cb54-37">lst_r[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb54-38">lst_r[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb54-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 42</span></span>
<span id="cb54-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the last element (Hello R) of the list</span></span>
<span id="cb54-42">lst_r[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(lst_r)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb54-43">lst_r</span>
<span id="cb54-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb54-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 42</span></span>
<span id="cb54-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb54-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3</span></span>
<span id="cb54-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[3]]</span></span>
<span id="cb54-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb54-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[4]]</span></span>
<span id="cb54-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"</span></span>
<span id="cb54-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check element (Hello R) is in the list</span></span>
<span id="cb54-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello R"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> lst_r</span>
<span id="cb54-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb54-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb54-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the 1st (42) and 2nd elements ([2, 3]) </span></span>
<span id="cb54-61">(lst_r[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Outer bracket for execute code direct</span></span>
<span id="cb54-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb54-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb54-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb54-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb54-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"</span></span></code></pre></div>
</div>
<p>Die Elemente von der Liste in R können auch benannt sein (wie in dictionaries in Python). Dabei kann man auf die Elemente durch <code>[[]]</code> oder durch den Operator <code>$</code> (Dollar-Zeichen) zugreifen. In R kann man die Liste ändern oder entfernen, indem man dem Index von dem zu updatenden Element zu ändernde Wert zuweist.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb55-1">lst_named <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb55-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>,</span>
<span id="cb55-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span>,</span>
<span id="cb55-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it_skills"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Java"</span>)</span>
<span id="cb55-5">)</span>
<span id="cb55-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1st element</span></span>
<span id="cb55-8">lst_named[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb55-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 19</span></span>
<span id="cb55-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3rd element</span></span>
<span id="cb55-12">lst_named[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span>
<span id="cb55-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "R"      "Python" "Java"</span></span>
<span id="cb55-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2nd element of the 3rd element</span></span>
<span id="cb55-16">lst_named[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb55-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Python"</span></span>
<span id="cb55-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2nd element by name</span></span>
<span id="cb55-20">lst_named[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>]]       </span>
<span id="cb55-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "m"</span></span>
<span id="cb55-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3rd element via $</span></span>
<span id="cb55-24">lst_named<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>it_skills</span>
<span id="cb55-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "R"      "Python" "Java"</span></span>
<span id="cb55-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2nd element from 3rd element from the list</span></span>
<span id="cb55-28">lst_named<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>it_skills[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb55-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Python"</span></span>
<span id="cb55-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb55-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Names of the list</span></span>
<span id="cb55-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(lst_named)</span>
<span id="cb55-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "age"       "sex"       "it_skills"</span></span></code></pre></div>
</div>
<p>Man kann in die Liste in R neues Element durch <code>append()</code> - Funktion hinzufügen oder sie in eine andere Datenstruktur wie Vektor oder Data Fareme (wenn sie ein <em>named list</em> ist) umwandeln.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add an element(\"Python\" and \"C++\") into the list(lst_r):</span></span>
<span id="cb56-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(lst_r, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C++"</span>))</span>
<span id="cb56-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[1]]</span></span>
<span id="cb56-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 42</span></span>
<span id="cb56-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[2]]</span></span>
<span id="cb56-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3</span></span>
<span id="cb56-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[3]]</span></span>
<span id="cb56-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1]  TRUE FALSE</span></span>
<span id="cb56-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[4]]</span></span>
<span id="cb56-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "I"    "love" "R"   </span></span>
<span id="cb56-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[5]]</span></span>
<span id="cb56-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Python"</span></span>
<span id="cb56-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb56-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [[6]]</span></span>
<span id="cb56-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "C++"</span></span>
<span id="cb56-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to vector</span></span>
<span id="cb56-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(lst_r)</span>
<span id="cb56-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "42"    "2"     "3"     "TRUE"  "FALSE" "I"     "love"  "R"</span></span>
<span id="cb56-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create alist</span></span>
<span id="cb56-26">emp_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb56-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emp_name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>),</span>
<span id="cb56-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emp_age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>),</span>
<span id="cb56-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">emp_salary =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.300</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.700</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.300</span>)</span>
<span id="cb56-30">)</span>
<span id="cb56-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb56-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of emp_list:</span></span>
<span id="cb56-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(emp_list)</span>
<span id="cb56-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "list"</span></span>
<span id="cb56-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to data frame</span></span>
<span id="cb56-37">emp_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(emp_list); emp_df</span>
<span id="cb56-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   emp_name emp_age emp_salary</span></span>
<span id="cb56-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1      Max      45        5.3</span></span>
<span id="cb56-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2      Ali      34        3.7</span></span>
<span id="cb56-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3     Vali      27        3.3</span></span>
<span id="cb56-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb56-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of emp_df</span></span>
<span id="cb56-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(emp_df)</span>
<span id="cb56-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "data.frame"</span></span></code></pre></div>
</div>
</section>
<section id="lists-in-python" class="level3">
<h3 class="anchored" data-anchor-id="lists-in-python"><code>list</code>s in Python</h3>
<p>Wie in R können auch die Elemente/Objekte in einer Liste in Python unterschiedliche Länge und Typen haben. Wenn alle Element der Liste in Python den gleichen Type haben, das ist diese vergleichbar mit dem Vektor in R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list</span></span>
<span id="cb57-2">lst_py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"love"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello Python"</span>]</span>
<span id="cb57-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lst_py)</span>
<span id="cb57-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1, [1, 2], True, ['I', 'love', 'Python'], 'Hello Python']</span></span>
<span id="cb57-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Type: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(lst_py))</span>
<span id="cb57-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb57-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Type:  &lt;class 'list'&gt;</span></span>
<span id="cb57-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check element (Hello Python) is in the list</span></span>
<span id="cb57-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Hello Python"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lst_py</span>
<span id="cb57-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb57-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the 1st element (1) to 42</span></span>
<span id="cb57-14">lst_py[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst_py</span>
<span id="cb57-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [42, [1, 2], True, ['I', 'love', 'Python'], 'Hello Python']</span></span>
<span id="cb57-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the last element (Hello Python) from the list</span></span>
<span id="cb57-18">lst_py.pop()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst_py  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pop() removes the last element in the list!!</span></span>
<span id="cb57-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'Hello Python'</span></span>
<span id="cb57-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [42, [1, 2], True, ['I', 'love', 'Python']]</span></span>
<span id="cb57-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the 2nd element ([1, 2]) with pop()</span></span>
<span id="cb57-23">lst_py.pop(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lst_py</span>
<span id="cb57-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1, 2]</span></span>
<span id="cb57-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [42, True, ['I', 'love', 'Python']]</span></span>
<span id="cb57-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the 1st element (42) with del</span></span>
<span id="cb57-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> lst_py[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb57-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb57-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove by name</span></span>
<span id="cb57-31">lst_py.remove(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-32">lst_py</span>
<span id="cb57-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [['I', 'love', 'Python']]</span></span></code></pre></div>
</div>
<p>Neues Element in die Liste in Python kann durch <code>append()</code>- Funktion (wie in R) hinzugefügt werden. Die Listen kann man auch in Python wie in R in andere Datenstruktur umwandeln, in NumPy-Array, Pndas-Series oder Pandas-DataFrame.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list</span></span>
<span id="cb58-2">ls1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gani"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls1</span>
<span id="cb58-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; ['Ali', 'Vali', 'Gani']</span></span>
<span id="cb58-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a new element (Max) into the list</span></span>
<span id="cb58-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append() adds the new item to the end of the list</span></span>
<span id="cb58-7">ls1.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls1</span>
<span id="cb58-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; ['Ali', 'Vali', 'Gani', 'Max']</span></span>
<span id="cb58-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># insert() adds an element to the list at the specified index</span></span>
<span id="cb58-11">ls1.insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ivan"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># inserted at index 1 (2nd position)</span></span>
<span id="cb58-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Conver to a Pandas Series</span></span>
<span id="cb58-14">ls_pd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(ls1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls_pd</span>
<span id="cb58-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0     Ali</span></span>
<span id="cb58-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1    Ivan</span></span>
<span id="cb58-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2    Vali</span></span>
<span id="cb58-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3    Gani</span></span>
<span id="cb58-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4     Max</span></span>
<span id="cb58-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; dtype: object</span></span>
<span id="cb58-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ls_pd)</span>
<span id="cb58-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'pandas.core.series.Series'&gt;</span></span>
<span id="cb58-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Conver to a A Numpy 1d-Ayrray</span></span>
<span id="cb58-25">ls_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(ls1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ls_np</span>
<span id="cb58-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; array(['Ali', 'Ivan', 'Vali', 'Gani', 'Max'], dtype='&lt;U4')</span></span>
<span id="cb58-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(ls_np)</span>
<span id="cb58-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'numpy.ndarray'&gt;</span></span>
<span id="cb58-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb58-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to a Pandas DataFrame</span></span>
<span id="cb58-31">ls2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb58-32">ls_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(ls1,ls2)), columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ls1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ls2"</span>])</span>
<span id="cb58-33">ls_df</span>
<span id="cb58-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;     ls1  ls2</span></span>
<span id="cb58-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0   Ali    3</span></span>
<span id="cb58-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Ivan    4</span></span>
<span id="cb58-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Vali    5</span></span>
<span id="cb58-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3  Gani    8</span></span>
<span id="cb58-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4   Max    2</span></span></code></pre></div>
</div>
</section>
<section id="dicts-in-python-and-lists-in-r" class="level3">
<h3 class="anchored" data-anchor-id="dicts-in-python-and-lists-in-r"><code>dict</code>s in Python and <code>list</code>s in R</h3>
<p>Wie oben bereits erwähnt, in R müssen die Elemente einer Liste nicht vom gleichen Typ im Vergleich zu den Vektoren sein. Die Elemente in einer Liste in R können aber auch benannt sein, das nennt man dann <em>named list</em>. In Python dagegen können die Elemente nicht benannt sein, dafür aber gibt es in Python <em>dictionanries</em>, die gleiche Struktur wie named list in R haben. Dictionary in Python besteht aus <code>d = {key : value}</code> Struktur. Der Key bzw Schlüssel ist <em>unique</em> und <em>immutable</em>. Meistens werden für den Schlüssel strings benutzt. Die gleiche Struktur hat man in R, wenn man die Elemente in der Liste benennt: <code>d = list(name = value)</code>. Zugriff auf einzelnes Element erfolgt durch <code>d["key"]</code> in Python und durch <code>d["name"]</code> oder <code>d$name</code> in R.</p>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
named list vs vector in R
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>In R können sowohl lists (<code>l &lt;- list("a" = 1, "b" = b, "c" = c("a", "b", "c"))</code>) als auch vectors (<code>v &lt;- c("a" = 1, "b" = 2, "c" = 3)</code>) benannt werden. Der Unterscheid ist, dass die Values in Vektor den gleichen Typ haben muss und in der Liste unterschieliche Typen haben kann.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb59-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Named vector with values of the same type:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb59-2">v <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); v</span>
<span id="cb59-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v))</span>
<span id="cb59-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Named list with values of different types:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb59-5">l <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)); l</span>
<span id="cb59-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Type: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(l))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Named vector with values of the same type:
#&gt; a b c 
#&gt; 1 2 3 
#&gt; Type:  numeric
#&gt; 
#&gt; Named list with values of different types:
#&gt; $a
#&gt; [1] 1
#&gt; 
#&gt; $b
#&gt; [1] "b"
#&gt; 
#&gt; $c
#&gt; [1] "a" "b" "c"
#&gt; 
#&gt; Type:  list</code></pre>
</div>
</div>
<p>Wenn ich in den Vektor “v” von oben die Werte mit unterschiedlichen Typen (bsp. 1, b, 3) eingebe, dann speichert bzw. gibt R alle Values als character bzw string zurück, also die 1 und 3 in character umgewandelt</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb61-1">v1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>); v1</span>
<span id="cb61-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   a   b   c </span></span>
<span id="cb61-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; "1" "b" "3"</span></span>
<span id="cb61-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(v1)</span>
<span id="cb61-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "character"</span></span></code></pre></div>
</div>
<p>Aus Interesse habe ich den Namen die Werte wie folgt zugewiesen: a = 1, b = b und c = c(1, 2, 3). Also hier haben wir drei Namen und 5 Werte. Erstaunlicherweise hat R den Namen c automatisch erweitert wie c1, c2, c3, bis alle Werte bannt sind. Dafür mag ich ja auch den R ;).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb62-1">v2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)); v2</span>
<span id="cb62-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   a   b  c1  c2  c3 </span></span>
<span id="cb62-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; "1" "b" "1" "2" "3"</span></span></code></pre></div>
</div>
</div>
</div>
</div>
<p>Folgendes Beispiel mit den Aktienkursen (Stand: 27.04.2024, von OnVista) möge es besser zum Ausdruck bringen.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-7-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-1" aria-controls="tabset-7-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-7-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-2" aria-controls="tabset-7-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-7-1" class="tab-pane active" aria-labelledby="tabset-7-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb63-1">share_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AMZN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AAPL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MBG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TSLA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BYD"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BABA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SAP"</span>)</span>
<span id="cb63-2">share_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">179.62</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">169.30</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">74.36</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">168.29</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">25.36</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">75.55</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">174.00</span>)</span>
<span id="cb63-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb63-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create a named list from vectors:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-5">dic_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.list</span>(share_value), share_name); dic_r</span>
<span id="cb63-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">share price from BYD. slice with [[]]:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-7">dic_r[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BYD"</span>]]</span>
<span id="cb63-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">share price from Tesla. slice with $</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-9">dic_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>TSLA</span>
<span id="cb63-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Typ from dic_r: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(dic_r))</span>
<span id="cb63-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Add an element (BMW3) to the list(dic_r[['BMW3']] &lt;- 99.15):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-12">dic_r[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW3"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">99.15</span></span>
<span id="cb63-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is BMW3 there?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-14">dic_r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW3"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> dic_r</span>
<span id="cb63-15">dic_r[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW3"</span>]]</span>
<span id="cb63-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb63-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Remove an element (MBG) from the list (dic_r$MBG &lt;- NULL):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-18">dic_r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>MBG <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb63-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is MBG there?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-20">dic_r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MBG"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> dic_r</span>
<span id="cb63-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to python</span></span>
<span id="cb63-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Convert the list (dic_r) to Python object (dic_py)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-23">dic_py <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r_to_py</span>(dic_r)</span>
<span id="cb63-24">dic_py</span>
<span id="cb63-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Type from dic_py:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb63-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(dic_py)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Create a named list from vectors:
#&gt; $AMZN
#&gt; [1] 179.62
#&gt; 
#&gt; $AAPL
#&gt; [1] 169.3
#&gt; 
#&gt; $MBG
#&gt; [1] 74.36
#&gt; 
#&gt; $TSLA
#&gt; [1] 168.29
#&gt; 
#&gt; $BYD
#&gt; [1] 25.36
#&gt; 
#&gt; $BABA
#&gt; [1] 75.55
#&gt; 
#&gt; $SAP
#&gt; [1] 174
#&gt; 
#&gt; 
#&gt; share price from BYD. slice with [[]]:
#&gt; [1] 25.36
#&gt; 
#&gt; share price from Tesla. slice with $
#&gt; [1] 168.29
#&gt; 
#&gt; Typ from dic_r:  list
#&gt; Add an element (BMW3) to the list(dic_r[['BMW3']] &lt;- 99.15):
#&gt; Is BMW3 there?
#&gt; [1] TRUE
#&gt; [1] 99.15
#&gt; 
#&gt; Remove an element (MBG) from the list (dic_r$MBG &lt;- NULL):
#&gt; Is MBG there?
#&gt; [1] FALSE
#&gt; 
#&gt; Convert the list (dic_r) to Python object (dic_py)
#&gt; {'AMZN': 179.62, 'AAPL': 169.3, 'TSLA': 168.29, 'BYD': 25.36, 'BABA': 75.55, 'SAP': 174.0, 'BMW3': 99.15}
#&gt; 
#&gt; Type from dic_py:
#&gt; [1] "python.builtin.dict"   "python.builtin.object"</code></pre>
</div>
</div>
</div>
</div>
<div id="tabset-7-2" class="tab-pane" aria-labelledby="tabset-7-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"share price at 27.04.2024:"</span>)</span>
<span id="cb65-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k,v <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> r.dic_py.items():</span>
<span id="cb65-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>v<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb65-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Keys:"</span>, r.dic_py.keys())</span>
<span id="cb65-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Values:"</span>, r.dic_py.values())</span>
<span id="cb65-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Share of Tesla: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dic_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TSLA"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb65-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Add MBG to the dictionary(r.dic_py['MBG'] = 74.36):"</span>)</span>
<span id="cb65-8">r.dic_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MBG"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">74.36</span></span>
<span id="cb65-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Is MBG in the dictionary?"</span>)</span>
<span id="cb65-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"MBG"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> r.dic_py</span>
<span id="cb65-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Delete BYD from dictionary(del r.dic_py['BYD']):"</span>)</span>
<span id="cb65-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> r.dic_py[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BYD"</span>]</span>
<span id="cb65-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Is BYD in the dictionary?"</span>)</span>
<span id="cb65-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"BYD"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> r.dic_py</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; share price at 27.04.2024:
#&gt; AMZN : 179.62
#&gt; AAPL : 169.3
#&gt; TSLA : 168.29
#&gt; BYD : 25.36
#&gt; BABA : 75.55
#&gt; SAP : 174.0
#&gt; BMW3 : 99.15
#&gt; 
#&gt; Keys: dict_keys(['AMZN', 'AAPL', 'TSLA', 'BYD', 'BABA', 'SAP', 'BMW3'])
#&gt; Values: dict_values([179.62, 169.3, 168.29, 25.36, 75.55, 174.0, 99.15])
#&gt; 
#&gt; Share of Tesla: 168.29
#&gt; 
#&gt; Add MBG to the dictionary(r.dic_py['MBG'] = 74.36):
#&gt; 
#&gt; Is MBG in the dictionary?
#&gt; True
#&gt; 
#&gt; Delete BYD from dictionary(del r.dic_py['BYD']):
#&gt; 
#&gt; Is BYD in the dictionary?
#&gt; False</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Zum Zugrif auf Elemente in einem Dictionary in Python gibt es neben dem Method <code>dict["key"]</code>noch das Method <code>dict.get("key", "default")</code>. Die beiden Methode liefern das gleiche Ergebnis. Unterschied besteht darin, ob der gesuchte Key in diectionary vorhanden ist oder nicht. Wenn Key nicht vorhanden ist, erhält man beim ersten Method den <em>KeyError</em>, das wird mit get() umgegangen. Standardmäsig wird <em>None</em> zurückgegeben, das kann man aber feststellen.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb67-1">bsp_dic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb67-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span> : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb67-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span> : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>,</span>
<span id="cb67-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span></span>
<span id="cb67-5">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> bsp_dic</span>
<span id="cb67-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"With []:"</span>)</span>
<span id="cb67-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Alini yoshi: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bsp_dic[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb67-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">With get():"</span>)</span>
<span id="cb67-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Alini yoshi: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bsp_dic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb67-10">lstName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gani"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vali"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brandon"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> lstName</span>
<span id="cb67-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Iterate with devault value, if key not exis"</span>)</span>
<span id="cb67-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lstName:</span>
<span id="cb67-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for k, v in bsp_dic.items():</span></span>
<span id="cb67-14">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bsp_dic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(n, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mavjud emas!'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> )</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; {'Ali': 25, 'Max': 44, 'Vali': 33}
#&gt; With []:
#&gt; Alini yoshi: 25
#&gt; 
#&gt; With get():
#&gt; Alini yoshi: 25
#&gt; ['Ali', 'Gani', 'Max', 'Vali', 'Brandon']
#&gt; 
#&gt; Iterate with devault value, if key not exis
#&gt; Ali - 25
#&gt; Gani - Mavjud emas!
#&gt; Max - 44
#&gt; Vali - 33
#&gt; Brandon - Mavjud emas!</code></pre>
</div>
</div>
</section>
</section>
<section id="sets-and-tuples-in-python" class="level2">
<h2 class="anchored" data-anchor-id="sets-and-tuples-in-python"><code>set</code>s and <code>tuple</code>s in Python</h2>
<p>In Python gibt es weitere Strukturen von Daten, <code>set{}</code> und <code>tuple()</code>.</p>
<section id="set-in-python" class="level3">
<h3 class="anchored" data-anchor-id="set-in-python"><code>set{}</code> in Python</h3>
<p>Die gruppierten Elemente lassen sich in Python unter anderem auch durch <em>set</em> darstellen: die Elemente im geschweiften Klammern <code>set{}</code> eingeben oder in <code>set()</code>- Funktion übergeben. Besonderheit in diesem Konzept ist, dass die Elemente <em>unique</em> sind, d.h. ein Objekt kommt in Mengen nur einmal vor. In R gibt es die Funktion <code>unique()</code>, die doppelt vorkommende Elemente in einem Vektor entfernt. Desweiteren sind sie ungeordnet und besitzen keine Indizes, über die man auf Elemente zugreifen kann. Die Menge mit <em>set</em> - <em>mutable</em>, also veränderlich und mit <em>frozenset</em> -<em>immutable</em>, aslo nicht veränderbar.</p>
<p>Die Methoden in von <em>sets</em> in Python wie <code>union</code>, <code>intersection</code> oder <code>difference</code> gibt es auch in R, die man bei Vektoren anwenden kann.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-8-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-1" aria-controls="tabset-8-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-8-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-2" aria-controls="tabset-8-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-8-1" class="tab-pane active" aria-labelledby="tabset-8-1-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set() - returns the vector without duplicate values</span></span>
<span id="cb69-2">my_lst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> my_lst</span>
<span id="cb69-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [2, 3, 1, 5, 3, 9, 3, 2, 7]</span></span>
<span id="cb69-4">my_set <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(my_lst)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> my_set</span>
<span id="cb69-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3, 5, 7, 9}</span></span>
<span id="cb69-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a set</span></span>
<span id="cb69-8">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x</span>
<span id="cb69-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3, 4, 5, 6}</span></span>
<span id="cb69-10">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y</span>
<span id="cb69-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {4, 5, 6, 7, 8, 9}</span></span>
<span id="cb69-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(x), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(y))</span>
<span id="cb69-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'set'&gt; &lt;class 'set'&gt;</span></span>
<span id="cb69-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># union() - combine x and y without duplicates</span></span>
<span id="cb69-16">x.union(y)</span>
<span id="cb69-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3, 4, 5, 6, 7, 8, 9}</span></span>
<span id="cb69-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># intersection() - which obj in both sets</span></span>
<span id="cb69-20">x.intersection(y)</span>
<span id="cb69-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {4, 5, 6}</span></span>
<span id="cb69-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># difference() - objects in x, but not in y</span></span>
<span id="cb69-24">x.difference(y)</span>
<span id="cb69-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {1, 2, 3}</span></span>
<span id="cb69-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb69-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># difference() - objects in y, but not in x</span></span>
<span id="cb69-28">y.difference(x)</span>
<span id="cb69-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {8, 9, 7}</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-8-2" class="tab-pane" aria-labelledby="tabset-8-2-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb70-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Typ of python sets</span></span>
<span id="cb70-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x)</span>
<span id="cb70-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "python.builtin.set"    "python.builtin.object"</span></span>
<span id="cb70-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y)</span>
<span id="cb70-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "python.builtin.set"    "python.builtin.object"</span></span>
<span id="cb70-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unique() - returns the vector without duplicate values</span></span>
<span id="cb70-8">my_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>); my_vec</span>
<span id="cb70-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3 1 5 3 9 3 2 7</span></span>
<span id="cb70-10">uniq_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(my_vec); uniq_vec</span>
<span id="cb70-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 2 3 1 5 9 7</span></span>
<span id="cb70-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create vectros</span></span>
<span id="cb70-14">x_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>); x_r</span>
<span id="cb70-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1 2 3 4 5 6</span></span>
<span id="cb70-16">y_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>); y_r</span>
<span id="cb70-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 4 5 6 7 8 9</span></span>
<span id="cb70-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># union() - combine x_r and y_r without duplicates</span></span>
<span id="cb70-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">union</span>(x_r, y_r)</span>
<span id="cb70-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1 2 3 4 5 6 7 8 9</span></span>
<span id="cb70-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># intersection() - which obj in both vectors</span></span>
<span id="cb70-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(x_r, y_r)</span>
<span id="cb70-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 4 5 6</span></span>
<span id="cb70-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setdiff() - objects in x_r, but not in y_r</span></span>
<span id="cb70-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(x_r, y_r)</span>
<span id="cb70-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1 2 3</span></span>
<span id="cb70-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb70-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setdiff() - objects in y_r, but not in x_r</span></span>
<span id="cb70-32"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(y_r, x_r)</span>
<span id="cb70-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 7 8 9</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="tuple-in-python" class="level3">
<h3 class="anchored" data-anchor-id="tuple-in-python"><code>tuple()</code> in Python</h3>
<p>Ein Tupel fasst mehrere (mit unterschiedlichen Typen) Elemente zu einem Objekt. Sie werden mit Komma getrennten Elementen in Klammern <code>t = (obj1, obj2, ...)</code>, auch ohne Klammenr <code>t = obj1, obj2, ...</code> oder mit der Funktion <code>tuple(obj)</code> erzeugt. Im Vergleich zu den Listen sind Teuples <strong>immutable</strong>, man sagt auch unveränderbare Liste. Wenn man sie einmal erstellt, lassen sie sich nicht ändern, wenn das Ändern notwendig ist, kann man sie in die Liste umwandeln und nach der Änderung wieder zurück in den Tupel. Sie können auch in/mit Dictionaries verwendet werden.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a tuple</span></span>
<span id="cb71-2">t1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t1: "</span>, t1)</span>
<span id="cb71-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; t1:  (1, 5, 6, 6, 3)</span></span>
<span id="cb71-4">t2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2: "</span>, t2)</span>
<span id="cb71-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; t2:  (2, 4, 2, 5, 6)</span></span>
<span id="cb71-6">t3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t3: "</span>, t3)</span>
<span id="cb71-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; t3:  (3, 4, 5, 6, 1)</span></span>
<span id="cb71-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb71-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuples in dict keys</span></span>
<span id="cb71-10">koordinat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb71-11">  (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb71-12">  (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb71-13">  (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) : <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span></span>
<span id="cb71-14">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> koordinat</span>
<span id="cb71-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {(0, 0): 100, (1, 1): 200, (0, 1): 75}</span></span>
<span id="cb71-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add istem</span></span>
<span id="cb71-17">koordinat[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">125</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> koordinat</span>
<span id="cb71-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {(0, 0): 100, (1, 1): 200, (0, 1): 75, (1, 0): 125}</span></span>
<span id="cb71-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb71-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tuples in dict values</span></span>
<span id="cb71-21">greats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb71-22">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Navoi"</span> : (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hirot"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1441</span>),</span>
<span id="cb71-23">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bobur"</span> : (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1483</span>),</span>
<span id="cb71-24">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span> : (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shahrisabz"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1336</span>)</span>
<span id="cb71-25">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> greats</span>
<span id="cb71-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; {'Navoi': ('Hirot', 1441), 'Bobur': ('Andijon', 1483), 'Temur': ('Shahrisabz', 1336)}</span></span>
<span id="cb71-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb71-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># iterate dict</span></span>
<span id="cb71-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> great, (place, year) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> greats.items():</span>
<span id="cb71-30">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>great<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - was born in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>place<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>year<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb71-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Navoi - was born in Hirot in 1441.</span></span>
<span id="cb71-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Bobur - was born in Andijon in 1483.</span></span>
<span id="cb71-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Temur - was born in Shahrisabz in 1336.</span></span></code></pre></div>
</div>
</section>
</section>
<section id="data.frames-in-r-and-pandas.dataframe-in-python" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="data.frames-in-r-and-pandas.dataframe-in-python"><code>data.frame</code>s in R and <code>pandas.DataFrame</code> in Python</h2>
<p>Dataframes sind möchlicherweise die häufigste Art, die Daten in R und Python zu speichern, zu bearbeiten und zu analyisieren. Als DF (DataFrame) kann man sich eine Tabelle mit vier Ecken (Zeilen und Spalten) vorstellen, die gängigsten sind Excel Sheets. Die Zeilen stellen die Fälle oder Beobachtungen (<em>engl. observations</em>) und Spalten die Variable oder auch in der Statistik Merkmale (<em>engl. futures</em>) dar. Rechts ist Data Frame durch eine kleine Tabelle dargestellt. Die Tabelle hat 10 Zeilen (Beobachtungen = Namen) und 3 Spalten (Variable = Name, Geburtsjahr und Geburtsort).</p>
<div class="cell page-columns page-full">

<div class="no-row-height column-margin column-container"><div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">names</th>
<th style="text-align: right;">byear</th>
<th style="text-align: left;">bplace</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Navoi</td>
<td style="text-align: right;">1441</td>
<td style="text-align: left;">Hirot</td>
</tr>
<tr class="even">
<td style="text-align: left;">Bobur</td>
<td style="text-align: right;">1483</td>
<td style="text-align: left;">Andijon</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Temur</td>
<td style="text-align: right;">1336</td>
<td style="text-align: left;">Shahrisabz</td>
</tr>
<tr class="even">
<td style="text-align: left;">Cholpon</td>
<td style="text-align: right;">1898</td>
<td style="text-align: left;">Andijon</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Qodiriy</td>
<td style="text-align: right;">1894</td>
<td style="text-align: left;">Toshkent</td>
</tr>
<tr class="even">
<td style="text-align: left;">Ulugbek</td>
<td style="text-align: right;">1394</td>
<td style="text-align: left;">Samarqand</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Xorazmi</td>
<td style="text-align: right;">783</td>
<td style="text-align: left;">Xiva</td>
</tr>
<tr class="even">
<td style="text-align: left;">Beruniy</td>
<td style="text-align: right;">1048</td>
<td style="text-align: left;">Xorazm</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Termiziy</td>
<td style="text-align: right;">824</td>
<td style="text-align: left;">Termiz</td>
</tr>
<tr class="even">
<td style="text-align: left;">Buxoriy</td>
<td style="text-align: right;">810</td>
<td style="text-align: left;">Buxoro</td>
</tr>
</tbody>
</table>
</div></div></div>
<p>Data Frames sind in R praktisch eine benannte Liste von Vektoren (in Python wären pandas.Series) gleicher Länge, wobei jeder Vektor (Series) eine Spalte darstellt. Dataframes in R und Python besitzen einige Gemeinsamkeiten <span class="citation" data-cites="rp_DA">(Brown 2023)</span>, die dataframes voraussetzen.</p>
<ul>
<li>jede Spalte muss gleiche Länge haben</li>
<li>alle Elemente in der Spalte müssen gleichen Typ haben</li>
<li>Elemente in der Zeile können unterschiedlichen Type haben</li>
<li>Zeilen und Spalten können unterschiedlich benannt werden</li>
</ul>
<p>Sie werden in R mit <code>data.frame()</code> und in Python mit pandas <code>pandas.DataFrame()</code> erzeugt.</p>
<section id="create-a-df" class="level3">
<h3 class="anchored" data-anchor-id="create-a-df">Create a DF</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-9-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-1" aria-controls="tabset-9-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-9-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-2" aria-controls="tabset-9-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-9-1" class="tab-pane active" aria-labelledby="tabset-9-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb72-1">names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Navoi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bobur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temur"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cholpon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Qodiriy"</span>, </span>
<span id="cb72-2">           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ulugbek"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xorazmi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Beruniy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Termiziy"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Buxoriy"</span>)</span>
<span id="cb72-3">byear <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1441</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1483</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1336</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1898</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1894</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1394</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">783</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1048</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">824</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">810</span>) </span>
<span id="cb72-4">bplace <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hirot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shahrisabz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Toshkent"</span>,</span>
<span id="cb72-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Samarqand"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xiva"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xorazm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Termiz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Buxoro"</span>)</span>
<span id="cb72-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataFrame -----------------------------------------</span></span>
<span id="cb72-7">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(names, byear, bplace)</span>
<span id="cb72-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type -------------------------------------------------------</span></span>
<span id="cb72-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(df)</span>
<span id="cb72-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "data.frame"</span></span>
<span id="cb72-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nums of rows and cols --------------------------------------</span></span>
<span id="cb72-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(df)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like shape in pandas</span></span>
<span id="cb72-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 10  3</span></span>
<span id="cb72-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of rows ------------------------------------------------</span></span>
<span id="cb72-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df)</span>
<span id="cb72-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 10</span></span>
<span id="cb72-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of columns ---------------------------------------------</span></span>
<span id="cb72-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(df)</span>
<span id="cb72-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 3</span></span>
<span id="cb72-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># structur of DataFrame --------------------------------------</span></span>
<span id="cb72-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str(df) or</span></span>
<span id="cb72-22">pillar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(df) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like pandas.DataFrame.info()</span></span>
<span id="cb72-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Rows: 10</span></span>
<span id="cb72-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Columns: 3</span></span>
<span id="cb72-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $ names  &lt;chr&gt; "Navoi", "Bobur", "Temur", "Cholpon", "Qodiriy", "Ulugbek", "Xo…</span></span>
<span id="cb72-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $ byear  &lt;dbl&gt; 1441, 1483, 1336, 1898, 1894, 1394, 783, 1048, 824, 810</span></span>
<span id="cb72-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $ bplace &lt;chr&gt; "Hirot", "Andijon", "Shahrisabz", "Andijon", "Toshkent", "Samar…</span></span>
<span id="cb72-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First n lines, default = 6 ---------------------------------</span></span>
<span id="cb72-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb72-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   names byear     bplace</span></span>
<span id="cb72-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1 Navoi  1441      Hirot</span></span>
<span id="cb72-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2 Bobur  1483    Andijon</span></span>
<span id="cb72-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3 Temur  1336 Shahrisabz</span></span>
<span id="cb72-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Last n lines -----------------------------------------------</span></span>
<span id="cb72-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb72-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names byear bplace</span></span>
<span id="cb72-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9  Termiziy   824 Termiz</span></span>
<span id="cb72-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10  Buxoriy   810 Buxoro</span></span>
<span id="cb72-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># colnames ---------------------------------------------------</span></span>
<span id="cb72-40"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)</span>
<span id="cb72-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "names"  "byear"  "bplace"</span></span>
<span id="cb72-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows -------------------------------------------------------</span></span>
<span id="cb72-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(df)</span>
<span id="cb72-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10"</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-9-2" class="tab-pane" aria-labelledby="tabset-9-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create pandas DataFrame from created df in r -------</span></span>
<span id="cb73-2">df_pd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(r.df)</span>
<span id="cb73-3">df_pd[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"byear"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_pd[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"byear"</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb73-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type -----------------------------------------------</span></span>
<span id="cb73-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(df_pd)</span>
<span id="cb73-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'pandas.core.frame.DataFrame'&gt;</span></span>
<span id="cb73-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nums of rows and cols ------------------------------</span></span>
<span id="cb73-8">df_pd.shape   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like dim() in r</span></span>
<span id="cb73-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; (10, 3)</span></span>
<span id="cb73-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of rows ----------------------------------------</span></span>
<span id="cb73-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_pd)</span>
<span id="cb73-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10</span></span>
<span id="cb73-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num of columns -------------------------------------</span></span>
<span id="cb73-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_pd.columns)</span>
<span id="cb73-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3</span></span>
<span id="cb73-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># structur of DataFrame ------------------------------</span></span>
<span id="cb73-17">df_pd.info()   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like str() in r</span></span>
<span id="cb73-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'pandas.core.frame.DataFrame'&gt;</span></span>
<span id="cb73-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; RangeIndex: 10 entries, 0 to 9</span></span>
<span id="cb73-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Data columns (total 3 columns):</span></span>
<span id="cb73-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  #   Column  Non-Null Count  Dtype </span></span>
<span id="cb73-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; ---  ------  --------------  ----- </span></span>
<span id="cb73-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  0   names   10 non-null     object</span></span>
<span id="cb73-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  1   byear   10 non-null     int32 </span></span>
<span id="cb73-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  2   bplace  10 non-null     object</span></span>
<span id="cb73-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; dtypes: int32(1), object(2)</span></span>
<span id="cb73-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; memory usage: 332.0+ bytes</span></span>
<span id="cb73-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First n lines, default = 5 -------------------------</span></span>
<span id="cb73-29">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb73-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    names  byear      bplace</span></span>
<span id="cb73-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0  Navoi   1441       Hirot</span></span>
<span id="cb73-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Bobur   1483     Andijon</span></span>
<span id="cb73-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Temur   1336  Shahrisabz</span></span>
<span id="cb73-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Last n lines ---------------------------------------</span></span>
<span id="cb73-35">df_pd.tail(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb73-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names  byear  bplace</span></span>
<span id="cb73-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8  Termiziy    824  Termiz</span></span>
<span id="cb73-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9   Buxoriy    810  Buxoro</span></span>
<span id="cb73-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># colnames -------------------------------------------</span></span>
<span id="cb73-40">df_pd.columns</span>
<span id="cb73-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Index(['names', 'byear', 'bplace'], dtype='object')</span></span>
<span id="cb73-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows -----------------------------------------------</span></span>
<span id="cb73-43">df_pd.index</span>
<span id="cb73-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; RangeIndex(start=0, stop=10, step=1)</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="access-a-the-elements" class="level3">
<h3 class="anchored" data-anchor-id="access-a-the-elements">Access a (the) element(s)</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-10-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-1" aria-controls="tabset-10-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-10-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-2" aria-controls="tabset-10-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-10-1" class="tab-pane active" aria-labelledby="tabset-10-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb74-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1st row, 1st col -------------------------------</span></span>
<span id="cb74-2">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb74-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Navoi"</span></span>
<span id="cb74-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1-3 rows, all cols -----------------------------</span></span>
<span id="cb74-5">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, ]</span>
<span id="cb74-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;   names byear     bplace</span></span>
<span id="cb74-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1 Navoi  1441      Hirot</span></span>
<span id="cb74-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2 Bobur  1483    Andijon</span></span>
<span id="cb74-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3 Temur  1336 Shahrisabz</span></span>
<span id="cb74-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all rows, 1-2 cols -----------------------------</span></span>
<span id="cb74-11">df[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb74-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names byear</span></span>
<span id="cb74-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1     Navoi  1441</span></span>
<span id="cb74-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2     Bobur  1483</span></span>
<span id="cb74-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3     Temur  1336</span></span>
<span id="cb74-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4   Cholpon  1898</span></span>
<span id="cb74-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 5   Qodiriy  1894</span></span>
<span id="cb74-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 6   Ulugbek  1394</span></span>
<span id="cb74-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 7   Xorazmi   783</span></span>
<span id="cb74-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8   Beruniy  1048</span></span>
<span id="cb74-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9  Termiziy   824</span></span>
<span id="cb74-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10  Buxoriy   810</span></span>
<span id="cb74-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3 rows, col bplace -----------------------------</span></span>
<span id="cb74-24">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb74-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "Hirot"      "Andijon"    "Shahrisabz"</span></span>
<span id="cb74-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col bplace = "Andijon" --------------</span></span>
<span id="cb74-27">df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bplace <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>, ]</span>
<span id="cb74-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;     names byear  bplace</span></span>
<span id="cb74-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2   Bobur  1483 Andijon</span></span>
<span id="cb74-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4 Cholpon  1898 Andijon</span></span>
<span id="cb74-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col byear &lt; 1000 -------------------</span></span>
<span id="cb74-32">df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>byear <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, ]</span>
<span id="cb74-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names byear bplace</span></span>
<span id="cb74-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 7   Xorazmi   783   Xiva</span></span>
<span id="cb74-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9  Termiziy   824 Termiz</span></span>
<span id="cb74-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 10  Buxoriy   810 Buxoro</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-10-2" class="tab-pane" aria-labelledby="tabset-10-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1st row, 1st col -------------------------------------</span></span>
<span id="cb75-2">df_pd.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># iloc by postion(s)</span></span>
<span id="cb75-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'Navoi'</span></span>
<span id="cb75-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1-3 rows, all cols -----------------------------------</span></span>
<span id="cb75-5">df_pd.iloc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, ]</span>
<span id="cb75-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    names  byear      bplace</span></span>
<span id="cb75-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0  Navoi   1441       Hirot</span></span>
<span id="cb75-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Bobur   1483     Andijon</span></span>
<span id="cb75-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Temur   1336  Shahrisabz</span></span>
<span id="cb75-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all rows, 1-2 cols -----------------------------------</span></span>
<span id="cb75-11">df_pd.iloc[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb75-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names  byear</span></span>
<span id="cb75-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0     Navoi   1441</span></span>
<span id="cb75-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1     Bobur   1483</span></span>
<span id="cb75-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2     Temur   1336</span></span>
<span id="cb75-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3   Cholpon   1898</span></span>
<span id="cb75-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 4   Qodiriy   1894</span></span>
<span id="cb75-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 5   Ulugbek   1394</span></span>
<span id="cb75-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 6   Xorazmi    783</span></span>
<span id="cb75-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 7   Beruniy   1048</span></span>
<span id="cb75-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8  Termiziy    824</span></span>
<span id="cb75-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9   Buxoriy    810</span></span>
<span id="cb75-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3 rows, col bplace -----------------------------------</span></span>
<span id="cb75-24">df_pd.loc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bplace"</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loc by labels(s)</span></span>
<span id="cb75-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0         Hirot</span></span>
<span id="cb75-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1       Andijon</span></span>
<span id="cb75-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2    Shahrisabz</span></span>
<span id="cb75-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3       Andijon</span></span>
<span id="cb75-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Name: bplace, dtype: object</span></span>
<span id="cb75-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1-2 rows, cols names and bplace ----------------------</span></span>
<span id="cb75-31">df_pd.loc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"names"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"byear"</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or df_pd.bplace</span></span>
<span id="cb75-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;    names  byear</span></span>
<span id="cb75-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0  Navoi   1441</span></span>
<span id="cb75-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1  Bobur   1483</span></span>
<span id="cb75-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 2  Temur   1336</span></span>
<span id="cb75-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col bplace = "Andijon" --------------------</span></span>
<span id="cb75-37">df_pd.loc[df_pd[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bplace"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Andijon"</span>]</span>
<span id="cb75-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;      names  byear   bplace</span></span>
<span id="cb75-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1    Bobur   1483  Andijon</span></span>
<span id="cb75-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 3  Cholpon   1898  Andijon</span></span>
<span id="cb75-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rows where col byear &lt; 1000 --------------------------</span></span>
<span id="cb75-42">df_pd.loc[df_pd.byear <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]</span>
<span id="cb75-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;       names  byear  bplace</span></span>
<span id="cb75-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 6   Xorazmi    783    Xiva</span></span>
<span id="cb75-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 8  Termiziy    824  Termiz</span></span>
<span id="cb75-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 9   Buxoriy    810  Buxoro</span></span>
<span id="cb75-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ------------------------------------------------------</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="change-row--and-colnames" class="level3">
<h3 class="anchored" data-anchor-id="change-row--and-colnames">Change Row- and Colnames</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-11-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-1" aria-controls="tabset-11-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-11-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-2" aria-controls="tabset-11-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-11-1" class="tab-pane active" aria-labelledby="tabset-11-1-tab">
<div class="code-r">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb76-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rownames:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(df))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rownames </span></span>
<span id="cb76-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Colnames:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># colnames</span></span>
<span id="cb76-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb76-4">new_rname <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"person"</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>)</span>
<span id="cb76-5">new_rname <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strsplit</span>(new_rname, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>))</span>
<span id="cb76-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">New Rowsname:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, new_rname)</span>
<span id="cb76-7"></span>
<span id="cb76-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified rownames:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb76-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change the rownames</span></span>
<span id="cb76-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(df) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (new_rname)</span>
<span id="cb76-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb76-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change the colnames</span></span>
<span id="cb76-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Method1: colnames(c(names of new columns))</span></span>
<span id="cb76-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Method2: setNames(df, c(names of new columns)) </span></span>
<span id="cb76-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Here will be used Method2</span></span>
<span id="cb76-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change colname</span></span>
<span id="cb76-17">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ism"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan yil"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan joy"</span>))</span>
<span id="cb76-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified colnames:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb76-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb76-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb76-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Set key in DF with data.table:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb76-22">dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(df)</span>
<span id="cb76-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setkey</span>(dt, Ism)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Like Index in pandas</span></span>
<span id="cb76-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#call("Key: ", key(dt))</span></span>
<span id="cb76-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(dt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Rownames:
#&gt;  1 2 3 4 5 6 7 8 9 10
#&gt; Colnames: names byear bplace
#&gt; 
#&gt; New Rowsname:
#&gt;  person_1 person_2 person_3 person_4 person_5 person_6 person_7 person_8 person_9 person_10
#&gt; DF with modified rownames:
#&gt;          names byear  bplace
#&gt; person_1 Navoi  1441   Hirot
#&gt; person_2 Bobur  1483 Andijon
#&gt; 
#&gt; 
#&gt; DF with modified colnames:
#&gt;            Ism Tug'ilgan yil Tug'ilgan joy
#&gt; person_1 Navoi          1441         Hirot
#&gt; person_2 Bobur          1483       Andijon
#&gt; 
#&gt; 
#&gt; Set key in DF with data.table:
#&gt; Key: &lt;Ism&gt;
#&gt;        Ism Tug'ilgan yil Tug'ilgan joy
#&gt;     &lt;char&gt;         &lt;num&gt;        &lt;char&gt;
#&gt; 1: Beruniy          1048        Xorazm
#&gt; 2:   Bobur          1483       Andijon</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
data.frame() vs data.table()
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Es gibt unterschiedliche Funktionen in R für Data Frames. Im Grunde genommen, sind <code>data.frame()</code> und <code>data.table</code> sind gleiche. Mann kann sich <em>data.table</em> als <em>data.frame</em> mit <em>erweiterte Funktionen</em> vorstellen. Die Funktion data.frame ist in R-base, dh. wenn mann R installiert, ist diese mit Basisfunktionen mitdabei. Dagegegn muss data.table als Package installiert und eingelesen werden, wie man pandas in Python erst importieren muss. Es gibt aber auch weiter Packages in R, die mehr Kompfort und Funktionalitäte bei der Bearbeitung der Tabellen bietet wie <em>tibble</em>, <em>tidyverse</em>, <em>dplyr</em> ect.</p>
</div>
</div>
</div>
</div>
<div id="tabset-11-2" class="tab-pane" aria-labelledby="tabset-11-2-tab">
<div class="code-py">
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb78-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Rownames(index):</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df_pd.index)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb78-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Colnames: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df_pd.columns)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb78-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb78-4">new_pname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user_"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(idx) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df_pd.index)]</span>
<span id="cb78-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">New Rowsname:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_pname<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb78-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified rownames:"</span>)</span>
<span id="cb78-7">df_pd.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_pname</span>
<span id="cb78-8">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb78-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DF with modified colnames:"</span>)</span>
<span id="cb78-10">df_pd.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ism"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan yil"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tug</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ilgan joy"</span>]</span>
<span id="cb78-11">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb78-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Set a column as index:"</span>)</span>
<span id="cb78-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># like key in data.table in r</span></span>
<span id="cb78-14">df_pd.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ism"</span>, inplace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, append <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb78-15">df_pd.head(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>#&gt; Rownames(index):
#&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
#&gt; 
#&gt; Colnames: ['names', 'byear', 'bplace']
#&gt; 
#&gt; New Rowsname:
#&gt; ['user_0', 'user_1', 'user_2', 'user_3', 'user_4', 'user_5', 'user_6', 'user_7', 'user_8', 'user_9']
#&gt; 
#&gt; DF with modified rownames:
#&gt;         names  byear   bplace
#&gt; user_0  Navoi   1441    Hirot
#&gt; user_1  Bobur   1483  Andijon
#&gt; 
#&gt; DF with modified colnames:
#&gt;           Ism  Tug'ilgan yil Tug'ilgan joy
#&gt; user_0  Navoi           1441         Hirot
#&gt; user_1  Bobur           1483       Andijon
#&gt; 
#&gt; 
#&gt; Set a column as index:
#&gt;               Tug'ilgan yil Tug'ilgan joy
#&gt;        Ism                               
#&gt; user_0 Navoi           1441         Hirot
#&gt; user_1 Bobur           1483       Andijon</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Data Frames, wie schon erwähnt, wahrscheinlich die meist benutzten Datenstrukturen sowohl in R als auch in Python. Daher wurde das Thema hier kurz dargestellt und Fokus nur auf Basisfunktionen gelegt. Dazu wird es ein eigenes Thema geben.</p>
</section>
</section>
</section>
<section id="references" class="level1">




</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-LearnR" class="csl-entry">
Aphalo, Pedro J. 2020. <em><span class="nocase">Learn R As a Language</span></em>. CRC Press.
</div>
<div id="ref-rp_DA" class="csl-entry">
Brown, Taylor R. 2023. <em><span class="nocase">An Introduction to R and Python For Data Analysis</span></em>. CRC Press.
</div>
<div id="ref-reticulate" class="csl-entry">
<span>“<span class="nocase">Calling Python from R</span>.”</span> Apr 2024. https://rstudio.github.io/reticulate/articles/calling_python.html, [Accessed on 2024-04-28].
</div>
<div id="ref-py_ProgWithPy" class="csl-entry">
Dimitrios Xanthidis, Ourania K. Xanthidou, Christos Manolas. 2023. <em>Handbook of Computer Programming with Python</em>. Springer Gabler.
</div>
<div id="ref-r_ModernDA" class="csl-entry">
Sauer, Sebastian. 2019. <em><span class="nocase">Moderne Datenanalyse mit R</span></em>. Springer Gabler.
</div>
<div id="ref-r_DMforSocial" class="csl-entry">
Weidmann, Nils B. 2023. <em>Data Management for Social Scientists</em>. Cambridge University Press.
</div>
<div id="ref-py_Python3" class="csl-entry">
Weigend, Michael. 2019. <em><span class="nocase">Python 3 : Lernen und professionell anwenden. Das umfassende Praxisbuch,</span></em>. 8th ed. Springer Gabler.
</div>
<div id="ref-r_AdvancedR" class="csl-entry">
Wickham, Hadley. 2019. <em><span>Advanced R</span></em>. 2nd ed. Chapman; Hall/CRC.
</div>
<div id="ref-worldpop" class="csl-entry">
<span>“World Population Review.”</span> Feb 2024. https://worldpopulationreview.com/countries, [Accessed on 2024-02-24].
</div>
<div id="ref-TourofDS" class="csl-entry">
Zhang, Nailong. 2021. <em>A Tour of Data Science</em>. Wiley-Blackwell.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Python</category>
  <category>Data Structure</category>
  <category>German</category>
  <guid>https://sultanov.quarto.pub/blog/posts/DataStructures/datastructures_de.html</guid>
  <pubDate>Thu, 29 Feb 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>R &amp; Python: Types of Data
 in Uzbek</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/DataTypes/datatypes_uz.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/DataTypes/datatype_uz.png" class="img-fluid"></p>
<hr>
<p>Bu yerda ma’lumotlar turi (Data Type) hamda ular bilan R va Python da ishlash haqida o’qigan/o’rgangan/tushunganlarimni qisqacha tushuntirishga harakat qilaman, demak bu kontentni mani konspektim desayam boladi;). Avvalo, bu artikelning tuzilishi, <code>Input(Codeblock)</code>, <code>Output(Natija)</code>, eslatma va shunga o’hshash narsalar qanday kurinishdaligi haqida qisqacha tushunchadan boshlamoqchiman, yan’i yozilmaning tuzilishi,</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><strong>Input(Codeblock)</strong>- Quyida shunchaki <em>Input</em> deb ketilade va konsolga kiritilgan R yoki Python kodlari nazarda tutiladi, <strong>Output(Result)</strong>- Quyida shunchaki <em>Output</em> deb ketiladi va kiritlgan kodning konsoldagi natijasi nazarda tutiladi.</p>
</div></div><section id="struktur" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="struktur">Struktur</h2>
<p>R va Python uchun kiritilgan kod yonma-yon yoki tabsetlarda ko’rsatilishi mumkin. <span style="background-color: lightcyan">R-Sourse ochiq ko’k</span> rangda va <span style="background-color: yellow">Python-Sourse sariq</span> rangda ko’rsatiladi. Output natijalarining satrlari <code>#&gt;</code> belgisi bilan boshlanadi. Quyida R va Pythonda oddiy textni ekranga chiqarish kodining natijasi tabset sifadida ko’rsatilgan:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hallo R Lover!"</span>)</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Hallo R Lover!</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hallo Python Lover!"</span>)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Hallo Python Lover!</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<p>Muhim narsalar rang bilan ajratib ko’rsatilgan va mos ravishda belgilangan:</p>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Batafsil ma’lumot uchun bu yerga bosing
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>R va Pythondagi Input va Output taqqoslanmagan hollarda, masalan faqat o’zgaruvchi yaratilsa va uni ustida qandaydir amallar bajarilsa kod blocklari, ya’ni yuqorida aytilganidek, Pyton sariq va R och ko’k rangda alohida ranglarda ajratib kursatilmaydi:</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Python engine</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a va b o'zgaruvchilariga 42, 13 qiymatlarini biriktirish va ularni yigindisini hisoblash</span></span>
<span id="cb3-3">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb3-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span></span>
<span id="cb3-5">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; 55</code></pre>
</div>
</div>
<p><code>reticulate</code> paketi yoki bibliotekasi Python da yaratilgan o’zgaruvchilar bilan R da ishlashni davom etishni taminlaydi, ya’ni man R da bu o’zgaruvchini boshqatdan yaratishim shart emas.</p>

<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># R engine</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a und b o'zgaruvchilari qiymatlarini ko'paytirish </span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (R da, o'zgaruvchilar yuqorida Pythonda yaratilgan)</span></span>
<span id="cb5-4">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>b</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] 546</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="no-row-height column-margin column-container"><div class="callout-1-contents callout-collapse collapse callout-margin-content">
<p><code>reticulate</code>- paketi (R da malum funksiyalarga ega bo’lgan to’plam yoki biblioteka, Pythonda modul deyiladi), R va Python o’rtasida o’zaro ishlashni taminlaydigan vosita. Bu paket orqali Pythonni R da chaqirish, Python modullarini import qilish va R da Python-dan interaktiv foydalanish imkonini beradi. Buning uchun avval u ishhga tushirilishi kerak ya’ni yuklab olishi kerak. Masalan Pythonda pandas modulidan foydalanish uchun yuklash y’ani import qilisch kerak: <code>mport pandas as pd</code>, keyin esa modul ichidagi funksiyalarni ishlatisch imkoniyati boladi, R da ham shunday, ular Paket engl. <em>Package</em> deyiladi, ulardan foydalanish uchun, avval kerakli paketni yuklash kerak, R da esa masalan retikulate paketi <code>library(retikulate)</code> tarzda yuklanadi yani ishga tushiriladi, undan oldin esa paketni tushirib olish kerak: <code>install.packages("reticulate")</code>. Ko’proq malumotni reticulate <a href="https://rstudio.github.io/reticulate/">saytidan</a> olish mumkin.</p>
</div></div><p>Biror bir ifodaning tushunchasi yoki eslatmalar yon tomonda (o’ngda) izoh kabi keltiriladi. Masalan tekst davomida Variable ishlatilsa, u haqdagi ma’lumotni o’ng tomonda keltirilgan izohdan olish mumkin</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><strong>Variable</strong> - o’zgaruvchi bo’lib, bunda har xil ko’rinishdagi qiymatlarga, ma’lumotlarga, data frame yani jadvallarga berilgan nom nazarda tutiladi.</p>
</div></div><p>Yuqorida ta’kidlanganidek, biror narsa o’qish va o’rganish jarayonida o’zimga konspekt qilib olaman, shunda tushunishim osonrog’, bu mandagi ko’nikma, lekin hammada har xil. Bu yerda es shu jarayonda o’rgangan va tushunganlarimni baham ko’rmoqchiman va umid qilamanki, bu R yoki Python tillarini manga o’xshab boshidan o’rganmoqchi bo’lhganlar uchun qiziqarli va foydali boladi. Grammatik, imloviy va/yoki orfografik xatolar uchun oldindan uzr so’raladi;). Birinchi navbatda gap nima qadilagi to’g’risida ikki og’iz:</p>
</section>
<section id="what-is-it-about" class="level2">
<h2 class="anchored" data-anchor-id="what-is-it-about">What is it about</h2>
<p>Bu konspektda ma’lumotlarning turlari engl. <strong>Data Types</strong>, ularning nima uchun va qanday farqlanishi undan tashqari R va Pythonda ular bilan ishlash haqida gap boradi. Bunda e’tibor ko’proq muhim bolgan ya’ni kundalik hayotda biz ko’p duch keladigan, ishlatadigan va ko’pincha ular bilan shug’ullanishimiz mumkin bo’lgan ma’lumotlar turlarini yoritishga harakat qilinadi.Birinchi marta o’qib turgan yoki eshitgan kalajakda karak bolmasligi mumkin bolgan m’lumot turlariga fokus qaratilmaydi, masalan murakkab ma’lumot turlari (Complex Data Types) yoki shunga o’xshagan R-dagi Raw Data Types, Python-dagi Bytes Data Types. Aytilgandek fokus kerakli deb hisoblangan ma’lumot turlariga qaratiladi. </p>
<p>Avvaliga shuni oydinlashtirmoqchimanki,</p>
</section>
<section id="what-the-data-types-are" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="what-the-data-types-are">What the data types are</h2>
<p>Har xil turdagi ma’lumotlar o’rtasida qanday farqlar mavjudligi va nima uchun ma’lumotlar turlari umuman farqlanishi haqida gap ketganda hayolimizga ma’lumotlar bilan ishlashda kundalik hayotda eng ko’p duch keladigan raqamlar va matnlar o’rtasidagi farq kelishi mumkin. Biz ma’lumotlar bilan ishlashni davom ettirmoqchi bo’lganda va ular ustida qandaydir amallarni bajarmoqchi, hisob-kitoblarni amalga oshirmoqchi bo’lganda, ular o’rtasidagi farqning ham muhimligi kelib chiqadi. Bunda ma’lumotlar o’zgaruvchilarda saqlanadi, shunda dastur ushbu ma’lumotlarga murojaat qilishi mumkin. Demak kompyuter ham birinchi navbatda tushunishi kerak, masalan ma’lumot raqammi yoki matnmi, ayniqsa u bu ma’lumot ustida qandaydir amal bajarishi kerak bolsa. Bu o’zgaruvchilarni biz R yoki Python-da <strong><code>object</code></strong>lar deb atashimiz mumkin. Eslab qolish kerak bolgan muhim narsa shuki, aynan ushbu <em>objektlarning turi ma’lumotlar qay tarzda saqlanishi va taqdim etilishini belgilaydi.</em> Masalan, <em>Integer</em> turi butun son 42 ni misol uchun <em>var_son</em> sifatida saqlashga imkon beradi, va bu raqam <em>var_son</em> objekti bilan ifodalanadi. Ko’p dasturlash tillaridan farqli ravishda, Python va R o’zgaruvchi yaratislishida turni ko’rsatishni yoki aniq tur bilan belgilashni talab qilmaydi. Ob’ektni yaratishda ular avtomatik ravishda uning turini aniqlaydi. Shuning uchun ular <strong>OOP</strong>(<em>Object Oriented Programming</em>)-Dasturlash tillariga kiradilar.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><strong>Object</strong> - R yoki Python-da biz ma’lumotlarni object sifatida saqlashimiz mumkin, masalan bir yoki bir necha qiymatlarni, jadvallarni, modellarni, biror bir amalning natijalarini, funksiyalar etc.</p>
</div></div><p>Umid qilamanki, ma’lumotlar turi nima ekanligi haqida kengroq tasavvurga ega boldik . Quyida R va Python-da ko’p ishlatiladigan asosiy ma’lumot turlarini ko’rib chiqamiz:</p>
</section>
<section id="frequently-used-basic-data-types-in-python-and-r" class="level2">
<h2 class="anchored" data-anchor-id="frequently-used-basic-data-types-in-python-and-r">Frequently used basic data types in Python and R</h2>
<p>Yuqorida aytilganidek, ma’lumotlar R va Python-da ob’ektlar sifatida saqlanadi. Har bir ob’ekt shu nomga qiymat berish orqali nom oladi. Masalan, 42 raqamini <em>var_numb</em> nomi bilan yoki “world” so’zini <em>var_txt</em> nomi bilan saqlashim mumkin. R yoki Python masalan 42 ni son ya’ni raqam sifatida qabul qiladi. Ammo bu raqamni saqlashda Python va R boshqacha yo’l tutadi, R uni <em>numeric</em> ya’ni o’nlink son sifatida saqlaydi. Agar raqam butun son sifatida bo’lishi kerak bolsa, R ni bu sonni butun son sifatida saqlashiga majburlash kerak boladi. Python buning aksini qiladi, bu raqamni <em>int</em> sifatida saqlaydi, agar men uni o’nlik son (engl. float) sifatida xohlasam, turni belgilashim yoki shu turga aylantirishim kerak.<br>
</p>
<p>Bu erda R va Python-da umumiy asosiy ma’lumotlar turlarining umumiy ko’rinishi <span class="citation" data-cites="WouterCo">(Wouter van Atteveldt 2022 ga asoslangan)</span> qisqcha jadval sifatida tasvirlangan:</p>
<table class="caption-top table">
<colgroup>
<col style="width: 14%">
<col style="width: 18%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 39%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: left;">Example</th>
<th style="text-align: left;"></th>
<th style="text-align: left;">Example</th>
<th style="text-align: right;">Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><span style="color: blue;">integer</span></td>
<td style="text-align: left;"><span style="color: red;">42L</span></td>
<td style="text-align: left;"><span style="color: blue;">int</span></td>
<td style="text-align: left;"><span style="color: red;">42</span></td>
<td style="text-align: right;">Butun Sonlar</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span style="color: blue;">double</span></td>
<td style="text-align: left;"><span style="color: red;">42.33</span></td>
<td style="text-align: left;"><span style="color: blue;">float</span></td>
<td style="text-align: left;"><span style="color: red;">42.33</span></td>
<td style="text-align: right;">Real/O’nlik sonlar</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span style="color: blue;">character</span></td>
<td style="text-align: left;"><span style="color: red;">“Text”</span></td>
<td style="text-align: left;"><span style="color: blue;">str</span></td>
<td style="text-align: left;"><span style="color: red;">“Text”</span></td>
<td style="text-align: right;">Satrlar, Matnlar</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span style="color: blue;">logical</span></td>
<td style="text-align: left;"><span style="color: red;">TRUE, FALSE</span></td>
<td style="text-align: left;"><span style="color: blue;">bool</span></td>
<td style="text-align: left;"><span style="color: red;">True, False</span></td>
<td style="text-align: right;">Mantiqiy qiymatlar</td>
</tr>
</tbody>
</table>
<p>R dasturida <em>integer</em> va <em>double</em> ko’pincha <strong>numeric</strong> sifatida umumlashtirilib tasvirlanadi. Jadvaldan kelib chiqb aytish mumkinki, bizga R va Pythond-da eng kup kerak boladigan va biz ular bilan eng kup ishlaydigan 3 ta asosiy ma’lumotlar turi bor. Bular: <strong>numeric</strong> - ya’ni butun (<em>integer</em>) va o’nlik (<em>float</em>) sonlaridan tashkil topgan raqamli ma’lumot turlari, <strong>logical</strong> - ya’ni mantiqiy ma’lumot turlari va <strong>textual</strong> - ya’ni matnli (<em>strings</em>) malumot turlaridan tashkil topgan.</p>
<p>Endi alohida turlarni ko’rib chiqamiz.</p>
<section id="integerint" class="level3">
<h3 class="anchored" data-anchor-id="integerint">integer/int</h3>
<p>Integer - butun sonni ifodalaydi masalan, 7, -7. R da orqasida <code>L</code> qoyilgan raqamlar butun son sifatida ifodalanadi. Nima uchun “L” turishi kerakligini man ham aniq bilmayman;). Ma’lumki R bu C dasturlash tiliga asoslanib yaratilgan dastur. C dasturlash tilida L <em>long integer</em> ma’nosini bergani uchun, R-da ham shunchaki o’zlashtirib olingan bolsa kerak. Python-da butun sonlar odatdagidek <em>integer</em> sifatida saqlanadi.</p>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">ri1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>L</span>
<span id="cb7-2">ri2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>L</span>
<span id="cb7-3">ri3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">13.0</span></span>
<span id="cb7-4">ri4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri1))</span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri2))</span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri3))</span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "numeric"</span></span>
<span id="cb7-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri4))</span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "character"</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">pi1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span></span>
<span id="cb8-2">pi2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb8-3">pi3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">13.0</span></span>
<span id="cb8-4">pi4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb8-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi1))</span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb8-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi2))</span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb8-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi3))</span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'float'&gt;</span></span>
<span id="cb8-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi4))</span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'str'&gt;</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout="[[50,50], [100]]">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>R</em></strong></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>Python</em></strong></p>
</div>
</div>
</div>
<p>Ob’ektning qaysi turiga ega ekanligini bilish yoki ko’rsatish uchun R-da <strong><em><code>class()</code></em></strong> va Pythonda <strong><em><code>type()</code></em></strong> funksiyasi mavjud. R dasturida obyektlar <strong><code>&lt;-</code></strong> va Python-da <strong><code>=</code></strong> bilan biriktiriladi. Umuman olganda, R <code>=</code> bilan ham ishlaydi, lekin strelka keng tarqalgan, va R-da strelka orqali biriktirish tavsiosa qilinadi.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More about assignment in R: <code>&lt;-</code> or <code>=</code> ?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>R-da ob’ektlarni <code>&lt;-</code> bilan belgilash odatiy hol, Pythonda esa <code>=</code> bilan biriktiriladi. Umuman olganda, R ham teng belgisi bilan ishlaydi. Lekin strelkani ishlatish afzalroq va hatodan holiroq boladi. Tenglik belgisi biror bir funksiya ichida biriktirish uchun ishlatiladi. Misol tariqasida kichkina demonstartsiya:<br>
Bu yerda man 1 dan 15 gacha sonlarga ega bolgan vektorni <em>vec</em> variabliga biriktiraman va vektor (1 dan 15 gacha sonlar) yigindisini hisoblaayman:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vec =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] 120</code></pre>
</div>
</div>
<p>Agar man <em>vec</em> ob’ektini yana chaqirsam hatolik yuz beradi, chunki bu objekt faqat funksiya ichida mavjud :</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(vec)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>#&gt; Error in eval(expr, envir, enclos): Objekt 'vec' nicht gefunden</code></pre>
</div>
</div>
<p>Endi shu narsani <code>&lt;-</code> bilan qilib koraman:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 120</span></span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(vec)</span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15</span></span></code></pre></div>
</div>
<p>Shuning uchun biriktirishda kopincha strelka tavsiya qilinadi va ishlatiladi. Koproq ma’lumotlarni buy erdan: <a href="http://adv-r.had.co.nz/Style.html">Style guide von Hadley Wickham</a> va bu yerdan: <a href="https://google.github.io/styleguide/Rguide.html">Google’s R Style Guide</a> olish mumkin</p>
</div>
</div>
</div>
<p><strong> <img src="https://latex.codecogs.com/png.latex?~"> – <img src="https://latex.codecogs.com/png.latex?~"> Check for integer</strong><br>
R-da <strong><em><code>is.integer()</code></em></strong> yoki <strong><em><code>inherits(object, "type")</code></em></strong> unksiyasidan foydalanib ob’ekt turini tekshirishingiz mumkin.</p>
<div class="code-r">
<p><strong><em>R</em></strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check in R if a number is integer</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(ri1)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 11L integer?</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inherits</span>(ri2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integer"</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is -12 integer?</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb14-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(ri3)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 13.0 integer?</span></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(ri4)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is "123" integer?</span></span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb14-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inherits</span>(ri4, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"character"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is "123"character?</span></span>
<span id="cb14-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span></code></pre></div>
</div>
</div>
<p><strong>– Convert to integer in R</strong><br>
Aytilganidek, sonlarni orqasida L bolmasa, R bu objektni numeric, ya’ni o’nlik son yoki float <em>(yuqoridagi misoldagi ri3 ob’ektiga qarang)</em>. Men R buyurishim kerakki, u sonni butun son sifatida saqlasin. Buning uchun <strong><em><code>as.integer()</code></em></strong> funksiyasidan foydalanishim mumkin.</p>
<div class="code-r">
<p><strong><em>R</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making R treat the object as an integer</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri3))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 13.0</span></span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri4))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of "123"</span></span>
<span id="cb15-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(ri3)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 13.0 to integer</span></span>
<span id="cb15-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(ri3)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing "123" to integer</span></span>
<span id="cb15-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of FALSE</span></span>
<span id="cb15-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of True</span></span>
<span id="cb15-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as Integer</span></span>
<span id="cb15-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as Integer</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] "numeric"
#&gt; [1] "character"
#&gt; [1] "integer"
#&gt; [1] "integer"
#&gt; [1] "logical"
#&gt; [1] "logical"
#&gt; [1] 0
#&gt; [1] 1</code></pre>
</div>
</div>
</div>
<p><strong> <img src="https://latex.codecogs.com/png.latex?~"> – <img src="https://latex.codecogs.com/png.latex?~"> Check for int</strong><br>
Python-da tekshirishning bir necha yo’llari mavjud: <strong><em><code>isinstance(ob'ekt, turi)</code></em></strong> funksiyasi orqali huddi, R-dagi <code>inherits(ob'ekt, ""turi")</code> kabi yoki ob’ekt turini ma’lumot turi bilan tenglashtirib ham tekshirish mumkin. , masalan, <strong><em><code>type(object) ==/is int()</code></em></strong>. Shuningdek, <strong><em><code>is_integer()</code></em></strong> funksiyasi ham mavjud. Bu funksiya <em>float</em>-o’nlik nnni <em>int</em>-butun songa tekshirishda ishlaydi, boshqa turlarida ishlamaydi. Boshqa turlari uchun manimcha <em>sumpy</em> moduli kerak. Uni ishlatib kurmadim, chunki yuqorida keltirilgan funksiyalarni uzi ham yetadi, boshqacha aytganda Rimga olib boradigan boshqa yo’llar ham bor. </p>
<div class="code-py">
<p><strong><em>Python</em></strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check in Python if a number is integer</span></span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pi1, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 11 integer?</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb17-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is -12 integer?</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb17-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pi3, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 13.0 integer?</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb17-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi4) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is '123' integer?</span></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span></code></pre></div>
</div>
</div>
<p><strong>– Convert to int in Python</strong><br>
Python raqamlarni butun sonlar sifatida saqlaydi. Agar men uni float ya’ni o’nlik son sifatida xohlasam, men float turiga o’tkazishim kerak. Agar menda matn(matn sifatida saqlangan sonlar), Float yoki Logical kabi turdagi ma’lumotlarim bo’lsa, men ob’ektni <strong><em><code>int()</code></em></strong> funksiyasiga o’tkazish orqali uni Python-da Integerga aylantira olaman.</p>
<div class="code-py">
<p><strong><em>Python</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making Python treat the object as an integer</span></span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi3))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 13.0</span></span>
<span id="cb18-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi4))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of "123"</span></span>
<span id="cb18-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pi3)))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 13.0 to integer</span></span>
<span id="cb18-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pi3)))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing "123" to integer</span></span>
<span id="cb18-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of FALSE</span></span>
<span id="cb18-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of True</span></span>
<span id="cb18-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as Integer</span></span>
<span id="cb18-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as Integer</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; &lt;class 'float'&gt;
#&gt; &lt;class 'str'&gt;
#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'bool'&gt;
#&gt; &lt;class 'bool'&gt;
#&gt; 0
#&gt; 1</code></pre>
</div>
</div>
</div>
</section>
<section id="numericfloat" class="level3">
<h3 class="anchored" data-anchor-id="numericfloat">numeric/float</h3>
<p>Float bu aniqligi uncha katta bo’lmagan suzuvchi nuqtali sonlar, <em>Floating point numbers</em>, Python-da float sifatida ifodalanadi. R odatda (orqasiga L harfi quo’yilmagan) sonlarni <em>float</em> () sifatida saqlaydi. Umuman olganda R sonlarni <code>numeric</code> sifatida ifodalaydi. Ular integer yoki float bo’lishi mumkin. Misol uchun R 12 sonini float, ya’ni 12.0 sifatida saqlaydi, <code>class()</code> funksiyasi bilan u turni <em><code>numeric</code></em> sifatida ifodalaydi. R-da ma’lumot turni tekshirish uchun ishlatilishi mumkin bo’lgan yana bir funksiya ham mavjud: <strong><em><code>typeof()</code></em></strong>. Bu funksiya orqali 12 sonini <code>double</code> sifatida kursatadi, ehtimol bu C dasturlash tilidan. O’ylaymanki, quyidagi misol nimani nazarda tutayotganimni aniqroq qiladi;).</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class() und typeof()</span></span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numeric</span></span>
<span id="cb20-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># double</span></span>
<span id="cb20-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>L)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># integer</span></span>
<span id="cb20-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>L)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># integer</span></span>
<span id="cb20-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numeric</span></span>
<span id="cb20-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># double</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] "numeric"
#&gt; [1] "double"
#&gt; [1] "integer"
#&gt; [1] "integer"
#&gt; [1] "numeric"
#&gt; [1] "double"</code></pre>
</div>
</div>
<p><strong>– Check numeric/float</strong><br>
Bu yerda ham yuqorida Integer uchun keltirilgan funksiyalardan foydalanish mumkin, R-da <em>is.</em>-dan keyin integerni o’rniga <em>numeric</em> yoku <em>double</em> qoyiladi: <strong><code>is.numeric(*obj*)</code></strong> yoki <strong><code>is.double(*obj*)</code></strong> yoki <strong><code>inherits(*obj*, "numeric")</code></strong>. Python-da ham yuqoridagi integer uchun qollangan funksiyadan foydalanish mumkin: <strong><code>type(*obj*)</code></strong>, yoki mantiqiy taqqoslash orqali: <strong><code>type(*obj*) is float</code></strong> yoki <strong><code>type(*obj*) == float</code></strong> yoki <strong><code>isinstance(*obj*, float)</code></strong>.</p>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">rf1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14</span></span>
<span id="cb22-2">rf2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span></span>
<span id="cb22-3">rf3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>L</span>
<span id="cb22-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf2))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class()-Type of 17</span></span>
<span id="cb22-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "numeric"</span></span>
<span id="cb22-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf3))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class()-Type of 20L</span></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb22-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(rf2)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># typeof()-Type of 17</span></span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "double"</span></span>
<span id="cb22-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(rf3)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># typeof()-Type of 20L</span></span>
<span id="cb22-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb22-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.numeric</span>(rf1)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 3.14 numeric?</span></span>
<span id="cb22-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb22-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.double</span>(rf2)     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 17 double?</span></span>
<span id="cb22-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb22-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.numeric</span>(rf3)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 20L numeric?</span></span>
<span id="cb22-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb22-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(rf3)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 20L integer?</span></span>
<span id="cb22-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">pf1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14</span></span>
<span id="cb23-2">pf2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span></span>
<span id="cb23-3">pf3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb23-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf1))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 3.14</span></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'float'&gt;</span></span>
<span id="cb23-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf2))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 17</span></span>
<span id="cb23-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb23-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf3))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 20</span></span>
<span id="cb23-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb23-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pf1, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 3.14 float?</span></span>
<span id="cb23-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb23-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pf1, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 3.14 int?</span></span>
<span id="cb23-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb23-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 17 float?</span></span>
<span id="cb23-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb23-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf3) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 20 float?</span></span>
<span id="cb23-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb23-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pf2, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 17 float?</span></span>
<span id="cb23-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout="[[50,50], [100]]">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>R</em></strong></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>Python</em></strong></p>
</div>
</div>
</div>
<p><strong>– Convert to numeric/float</strong><br>
O’nlik sonlar, ya’ni R-da numeric yoki float hosil qilish uchun yuqoridagi <em>as.</em> funksiyani bu yerda ham qollaymiz, buning uchun funksiyani shunday yozamiz: <strong><code>as.numeric(*obj*)</code></strong> oder <strong><code>as.double(*obj*)</code></strong>.</p>
<div class="code-r">
<p><strong><em>R</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making R treat the object as an integer</span></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf2))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 17</span></span>
<span id="cb24-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf3))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 20L</span></span>
<span id="cb24-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(rf2)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 17 to nomeric</span></span>
<span id="cb24-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.double</span>(rf3)))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 20L to nomeric</span></span>
<span id="cb24-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as numeric</span></span>
<span id="cb24-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.double</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as numeric</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] "numeric"
#&gt; [1] "integer"
#&gt; [1] "numeric"
#&gt; [1] "numeric"
#&gt; [1] 0
#&gt; [1] 1</code></pre>
</div>
</div>
</div>
<p>Pythonda buni <strong><code>float(*obj*)</code></strong> funksiyasi yordamida amalga oshirishim mumkin.</p>
<div class="code-py">
<p><strong><em>Python</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making Python treat the object as an integer</span></span>
<span id="cb26-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf2))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 17</span></span>
<span id="cb26-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf3))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 20</span></span>
<span id="cb26-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(pf2))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 17 to float</span></span>
<span id="cb26-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(pf3))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 20 to float</span></span>
<span id="cb26-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as float</span></span>
<span id="cb26-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as float</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'float'&gt;
#&gt; &lt;class 'float'&gt;
#&gt; 0.0
#&gt; 1.0</code></pre>
</div>
</div>
</div>
</section>
<section id="characterstr" class="level3">
<h3 class="anchored" data-anchor-id="characterstr">character/str</h3>
<p>Nomidan ko’rinib turibdiki, bunday ma’lumotlar belgilar, harflarni, satr va matnlarni o’z ichiga olgan ma’lumot turlaridir. R-da ular <code>character</code> va Python-da <code>str</code> sifatida tavsiflanadi. Amalda, matnli ma’lumotlar raqamli ma’lumotlar ya’ni sonlar kabi ko’p qo’llaniladigan ma’lumot turlaridandir. Masalan, tahlil qilinadigan ma’lumotlar to’plamida kategorik o’zgaruvchilar misol uchun “erkak’ yoki”ayol” bo’lishi mumkin va hokozo<br>
</p>
<p>Wie der Name schon sagt, solche Daten sind Strings, die Zeichen, Buchstaben enthalten. In R werden sie als <code>character</code> und in Python als <code>str</code> charakteresiert. Mit Strings hat man in der Praxis auch wie mit numerischen Daten häufig zu tun. Beispielweise können im zu analysierenden Datensatz auch kategoriale Variablen: “männlich”, “weiblich” vorhanden sein usw.<br>
Satrlar yoki matn ko’rinishidagi ma’lumotlar R va Python-da qo’sh apostrof ichida <code>'matn'</code> yoki qo’shtirnoq ichida <code>"matn"</code> ko’rsatilishi mumkin. Satr uzunligi funksiyasi R uchun: <strong><em><code>nchar()</code></em></strong> va Python <strong><em><code>len()</code></em></strong> uchun. R-da <em>stringr</em> paketidan <code>str_lenght("matn")</code> funksiyasini ham ishlatisch mumkin.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examples for Characters</span></span>
<span id="cb28-2">rt1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb28-3">rt2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span> </span>
<span id="cb28-4">rt3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span></span>
<span id="cb28-5">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Class of rt1: {class(rt1)}"</span>)</span>
<span id="cb28-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding Strings </span></span>
<span id="cb28-7">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue() funksiyasi orqali: {rt2} {rt3}"</span>)</span>
<span id="cb28-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paste() funksiyasi orqali:"</span>, rt2, rt3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)</span>
<span id="cb28-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare Strings</span></span>
<span id="cb28-10">rt2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span></span>
<span id="cb28-11">rt2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HELLO"</span></span>
<span id="cb28-12">rt1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb28-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Length of String</span></span>
<span id="cb28-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">123</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> satrining uzunligi: {nchar(rt1)}"</span>)</span>
<span id="cb28-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Hello</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> satrining uzunligi: {nchar(rt2)}"</span>)</span>
<span id="cb28-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(rt1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; Class of rt1: character
#&gt; glue() funksiyasi orqali: Hello World
#&gt; [1] "paste() funksiyasi orqali: Hello World"
#&gt; [1] TRUE
#&gt; [1] FALSE
#&gt; [1] TRUE
#&gt; "123" satrining uzunligi: 3
#&gt; "Hello" satrining uzunligi: 5
#&gt; [1] 1</code></pre>
</div>
</div>
</div>
<p>Matnlarni bir-biriga qo’shish yoki matnlarni sonla bilan kopaytirish R uchun qiyinchilik tugdiradi</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More about string operations in R
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Agar biz ikkita matnni birga qo’shmoqchi bo’lsak yoki satr yoki matnni raqamga ko’paytirmoqchi bo’lsak, R hatolik qaytaradi. Ehtimol, bunga imkon beradigan ba’zi paketlar bordir, qarab/izlab korish kerak. Shunday qilib, Python-da ikkita matnni bir biriga qoshish yoki matnni songa kopaytirish ishlagani kabi, R da bu ishlamaydi. <em>glue</em> paketidagi <strong><code>glue(*obj*)</code></strong> funksiyasi yoki <code>paste</code> funksiyasi orqali matnlarni bir biriga qoshib korsatish mumkin. Bu funksiya <code>stringr</code> paketida ham mavjud va uni quyidagicha ishlatish mumkin: <code>stringr::str_glue()</code>. <code>glue("The value of text is {text})</code> funksiyasi Python-dagi <code>print(f"The value of text is {text}")</code> funksiyaga o’xshaydi.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># R engine</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Satrlarni bir biriga qo'shish yoki ularni songa ko'paytirish</span></span>
<span id="cb30-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ishlamaydi!</span></span>
<span id="cb30-4">satr1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assalomu"</span></span>
<span id="cb30-5">satr2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alaykum"</span></span>
<span id="cb30-6">satr1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> satr2</span>
<span id="cb30-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Error in satr1 + satr2: nicht-numerisches Argument für binären Operator</span></span>
<span id="cb30-8">satr1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb30-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Error in satr1 * 3: nicht-numerisches Argument für binären Operator</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Python engine</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examples for Characters</span></span>
<span id="cb31-3">pt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb31-4">pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span> </span>
<span id="cb31-5">pt3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span></span>
<span id="cb31-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Type of pt1: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pt1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding Strings / matnlarni qoshish</span></span>
<span id="cb31-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pt3) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or</span></span>
<span id="cb31-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pt2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pt3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiply a string by 3 / matnlarni songa kopaytirish</span></span>
<span id="cb31-11">pt3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb31-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare</span></span>
<span id="cb31-13">pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span></span>
<span id="cb31-14">pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HELLO"</span></span>
<span id="cb31-15">pt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb31-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Length of String</span></span>
<span id="cb31-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Länge von </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">123</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pt1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Länge von </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Hallo</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pt2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; Type of pt1: &lt;class 'str'&gt;
#&gt; Hello world
#&gt; Hello world
#&gt; 'worldworldworld'
#&gt; True
#&gt; False
#&gt; False
#&gt; Länge von "123": 3
#&gt; Länge von "Hallo": 5</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Strings - bu keng mavzu. Bu erda faqat ma’lumotlar turi bilan bog’liq tomonlari qaraldi. Balki alohida content ham bo’lar .</p>
</section>
<section id="logicalbool" class="level3">
<h3 class="anchored" data-anchor-id="logicalbool">logical/bool</h3>
<p>Mantiqiy turdagi ob’ektlar TRUE/FALSE yoki 1/0 qiymatlarini olishi mumkin. Bular R da <code>logical</code> va Pythonda <code>bool</code> sifatida saqlanadi. Ofodalash tarsi ham R va Python-da farq qiladi: R-da ular katta harflarda yoziladi: <span style="color: red;">TRUE/FALSE</span>, Python-da esa birinchisi katta va qolganlari kichik harflarda boladi:<span style="color: red;">True/False</span>.</p>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># R engine</span></span>
<span id="cb33-2">rt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb33-3">rf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb33-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rt)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of TRUE</span></span>
<span id="cb33-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "logical"</span></span>
<span id="cb33-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of FALSE</span></span>
<span id="cb33-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "logical"</span></span>
<span id="cb33-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.logical</span>(rt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is TRUE logical</span></span>
<span id="cb33-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb33-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(rt) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as character</span></span>
<span id="cb33-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "TRUE"</span></span>
<span id="cb33-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(rf) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as character</span></span>
<span id="cb33-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "FALSE"</span></span>
<span id="cb33-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(rt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as integer</span></span>
<span id="cb33-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1</span></span>
<span id="cb33-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(rf)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as integer</span></span>
<span id="cb33-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 0</span></span>
<span id="cb33-18">rt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> rf          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rt AND rf</span></span>
<span id="cb33-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb33-20">rt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> rf          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rt OR rf</span></span>
<span id="cb33-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb33-22"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>rt              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is not TRUE</span></span>
<span id="cb33-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Python engine</span></span>
<span id="cb34-2">pt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb34-3">pf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb34-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pt)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of True</span></span>
<span id="cb34-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'bool'&gt;</span></span>
<span id="cb34-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of False</span></span>
<span id="cb34-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'bool'&gt;</span></span>
<span id="cb34-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pt) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is bool</span></span>
<span id="cb34-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb34-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(pt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True as String</span></span>
<span id="cb34-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'True'</span></span>
<span id="cb34-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(pf)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># False as String</span></span>
<span id="cb34-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'False'</span></span>
<span id="cb34-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True as Integer</span></span>
<span id="cb34-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1</span></span>
<span id="cb34-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pf)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># False as Integer</span></span>
<span id="cb34-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0</span></span>
<span id="cb34-18">pt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> pf <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pt AND pf</span></span>
<span id="cb34-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb34-20">pt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> pf  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pt OR pf</span></span>
<span id="cb34-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb34-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> pt    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is not True</span></span>
<span id="cb34-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout="[[50,50], [100]]">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>R</em></strong></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>Python</em></strong></p>
</div>
</div>
</div>
<p>Kimgadir qayerdadir qaysidir manoda qanchadir yordami tegkan bo’lsa, bundan faqat xursand bolaman. Keyingi mavzu ma’lumotlar tuzilmasi haqida bo’ladi.</p>
</section>
</section>
<section id="references" class="level2">




</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-LearnR" class="csl-entry">
Aphalo, Pedro J. 2020. <em><span class="nocase">Learn R As a Language</span></em>. CRC Press.
</div>
<div id="ref-Braineo" class="csl-entry">
Aust, Holger. Mar 2020. <span>“<span class="nocase">Datentypen in R – Einfach erklärt</span>.”</span> https://databraineo.com/ki-training-resources/r-programmierung/datentypen-in-r-einfach-erklaert/, [Accessed on 2022-12-11].
</div>
<div id="ref-randpy" class="csl-entry">
Boyan Angelov, Rick J. Scavetta. 2021. <em><span class="nocase">Python and R for the Modern Data Scientist</span></em>. O’Reilly Media, Inc.
</div>
<div id="ref-LearnPy" class="csl-entry">
Dimitrios Xanthidis, Ourania K. Xanthidou, Christos Manolas. 2022. <em>Handbook of Computer Programming with Python</em>. Chapman; Hall/CRC.
</div>
<div id="ref-AhilanS" class="csl-entry">
Srivishnumohan, Ahilan. Jun 2020. <span>“<span class="nocase">Bilingual Data Scientist: Python to R (Part 1)</span>.”</span> https://towardsdatascience.com/bilingual-data-scientist-python-to-r-part-1-70438fcdc155, [Accessed on 2022-12-16].
</div>
<div id="ref-WangMe" class="csl-entry">
WANG, Mena Ning. Dec 2021. <span>“R &amp; Python Basics 1: Data Type.”</span> https://rpubs.com/MenaWANG/RnPython_DataType, [Accessed on 2022-12-01].
</div>
<div id="ref-WouterCo" class="csl-entry">
Wouter van Atteveldt, Carlos Arcila Calderon, Damian Trilling. 2022. <em>Computational Analysis of Communication</em>. Wiley-Blackwell.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Python</category>
  <category>Data Types</category>
  <category>Uzbek</category>
  <guid>https://sultanov.quarto.pub/blog/posts/DataTypes/datatypes_uz.html</guid>
  <pubDate>Fri, 12 Jan 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>R &amp; Python: Types of Data
 in German</title>
  <dc:creator>Fazliddin Sultonov</dc:creator>
  <link>https://sultanov.quarto.pub/blog/posts/DataTypes/datatypes_de.html</link>
  <description><![CDATA[ 





<p><img src="https://sultanov.quarto.pub/blog/posts/DataTypes/datatype_de.jpg" class="img-fluid"></p>
<blockquote class="blockquote">
<p>Wer immer tut, was er schon kann, bleibt immer das, was er schon ist.</p>
<p>— Henry Ford</p>
</blockquote>
<p>Zuerst kurze Darstellung, wie das Ganze hier aufgebaut ist, wie der Input(Codeblock), Output(Ergebnis), Hinweis, … aussehen, also die</p>
<section id="struktur" class="level2">
<h2 class="anchored" data-anchor-id="struktur">Struktur</h2>
<p>Der Input und Output für R und Python können nebeneinander oder in Tabsets, wobei <span style="background-color: lightcyan">R-Sourse in hellcyan</span> und <span style="background-color: yellow">Python-Sourse in gelb</span> dargestellt werden. Zeilenanfang im Output ist mit <code>#&gt;</code> belegt.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hallo R Lover!"</span>)</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Hallo R Lover!</span></span></code></pre></div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hallo Python Lover!"</span>)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Hallo Python Lover!</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<p>Wo ich was Wichtiges zusagen habe, habe ich dementsprechend gefärbt und markiert:</p>
<div class="callout callout-style-default callout-caution no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Expand for more
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Wenn die Sachen in R und Python nicht in den Vergleich gezogen werden und z.B. wenn ich nur eine Variable erzeuge oder Berechnungen ausführe, werden die Code-Blocks nicht gefärbt dargestellt.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Den Variablen a und b die Werte 42, 13 zuweisen und sie zusammen addieren</span></span>
<span id="cb3-2">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb3-3">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span></span>
<span id="cb3-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; 55</code></pre>
</div>
</div>
<p>Das Paket <code>reticulate</code> hilft die in Python erzeugten Variablen weiterhin in R zu benutzen z.B. Berechnungen durchzuführen.</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Variablen a und b miteinander multiplizieren</span></span>
<span id="cb5-2">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>b</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] 546</code></pre>
</div>
</div>
</div>
</div>
</div>
<p>Wenn ich was lerne, schreibe ich mir auf oder mache ich mir Notizen, ist nicht jedermanns Sache;). Hier gebe ich nur das wieder, was ich bei meinem Lernen verstanden habe und hoffe, dass das ein oder anderem, der R oder Python lernen möchte, von Interesse/Nutzen sein könnte. Die grammatische und/oder orthographischen Fehler im Text bitte ich vorab zu entschuldigen;). In diesem Sinne stelle ich zunächst vor,</p>
</section>
<section id="worum-es-geht" class="level2">
<h2 class="anchored" data-anchor-id="worum-es-geht">Worum es geht</h2>
<p>In diesem Stück geht es darum, was die Typen von Daten sind, warum sie unterschieden werden. Mehr werde ich versuchen, zu zeigen wie R und Python mit Datentypen umgehen. Ich habe mich auf Wichtige aus Richtigen konzentriert und habe versucht, die Datentypen mir aufzunehmen, mit denen man auch meistens zu tun haben könnte. Auf solche Datentypen, über die ich erstmal gelesen habe, wahrscheinlich auch zukunftig nicht brauchen werde wie komplexe Datentypen oder solche Raw Typen in R oder byts in Python, habe keine Beachtung geschenkt. Wie gesagt, habe ich mein Lernfokus auf die Datentypen, die ich für gebräuchlch halte, gelegt.</p>
<p>So möchte ich aber zuerst kurz erklären,</p>
</section>
<section id="was-die-datentypen-sind" class="level2">
<h2 class="anchored" data-anchor-id="was-die-datentypen-sind">Was die Datentypen sind</h2>
<p>Es geht darum, welche Unterscheidungsmöglichkeiten es zwischen verschiedenen Arten von Daten gibt und warum die Datentypen überhaupt unterschieden werden. Ich denke gleich an der Unterscheidung zwischen Zahlen und Zeichenketten, mit denen man im Alltag am meisten zu tun hat, wenn man mit Daten arbeitet. Die Unterscheidung ist auch insofern von Bedeutung, wenn wir mit den Daten weiter arbeiten, Berechnungen durchführen wollen. Dabei werden die Daten in Variablen gespeichert, damit das Programm diese Daten anprechen kann. Also der Komputer muss verstehen ob es sich z.B. um die Zahlen oder Text handelt, wenn er was damit anstellen muss. Diese Variable können wir in R oder Python <strong><code>Objekte</code></strong> nennen. Der Typ dieser Objekte bestimmt, auf welche Art und Weise die Daten gespeichert und dargestellt werden. So ermöglicht beispielweise der Typ <em>Integer</em> eine ganze Zahl 42 als z.B <em>var</em> zu speichern und diese Zahl wird durch das Objekt <em>var</em> repräsentiert. Im Gegensatz zu vielen Programmiersprachen muss man bei Python und R den Typ nicht angeben oder deklarieren. Sie emitteln automatisch, um welchen Typ es sich handelt, wenn man ein Objekt erstellt. Daher fallen sie unter <strong>OOP</strong>(<em>Object Oriented Programming</em>)-Programmiersprachen.</p>
<p>Jetzt weiß ich mehr oder weniger, was Data Type ist . Im Folgenden handelt es sich um</p>
</section>
<section id="häufig-verwendete-basic-data-types-in-python-und-r" class="level2">
<h2 class="anchored" data-anchor-id="häufig-verwendete-basic-data-types-in-python-und-r">Häufig verwendete Basic Data Types in Python und R</h2>
<p>Wie ich oben gesagt habe, werden Daten sowohl in R als auch in Python als Objekte gespeichert. Jedes Objekt bekommt einen Namen durch Zuweisung eines Werts diesem Namen. So kann ich z.B. die Zahl 42 mit dem Namen <em>val</em>, oder das Wort “world” mit dem Namen <em>txt</em> speichern. R oder Python erkennt beispielweise, dass 42 eine Zahl ist, also numerisch. Diese Zahl kann als <em>Integer</em> dargestellt werden. Aber beim Speichern dieser numerischen Zahl verhalten sich Python und R anders, R speichert sie als <em>numeric</em>, was Gleitkommazahl oder Float ist. Wenn ich die Zahl als Integer haben will, muss ich R dazu zwingen. Python macht umgekehrt, speichert diese Zahl als <em>int</em>, wenn ich als Float haben will, muss ich den Typ angeben bzw umwandeln.<br>
Hier ist ein Überblick über die gängigen Basic Data Types in Python und R <span class="citation" data-cites="WouterCo">(In Anlehnung an Wouter van Atteveldt 2022)</span>:</p>
<table class="caption-top table">
<colgroup>
<col style="width: 14%">
<col style="width: 18%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 39%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: left;">Example</th>
<th style="text-align: left;"></th>
<th style="text-align: left;">Example</th>
<th style="text-align: right;">Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><span style="color: blue;">integer</span></td>
<td style="text-align: left;"><span style="color: red;">42L</span></td>
<td style="text-align: left;"><span style="color: blue;">int</span></td>
<td style="text-align: left;"><span style="color: red;">42</span></td>
<td style="text-align: right;">ganze Zahlen</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span style="color: blue;">double</span></td>
<td style="text-align: left;"><span style="color: red;">42.33</span></td>
<td style="text-align: left;"><span style="color: blue;">float</span></td>
<td style="text-align: left;"><span style="color: red;">42.33</span></td>
<td style="text-align: right;">reelle Zahlen, Kommazahlen</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><span style="color: blue;">character</span></td>
<td style="text-align: left;"><span style="color: red;">“Text”</span></td>
<td style="text-align: left;"><span style="color: blue;">str</span></td>
<td style="text-align: left;"><span style="color: red;">“Text”</span></td>
<td style="text-align: right;">Zeichenketten, Texte</td>
</tr>
<tr class="even">
<td style="text-align: left;"><span style="color: blue;">logical</span></td>
<td style="text-align: left;"><span style="color: red;">TRUE, FALSE</span></td>
<td style="text-align: left;"><span style="color: blue;">bool</span></td>
<td style="text-align: left;"><span style="color: red;">True, False</span></td>
<td style="text-align: right;">die Wahrheitswerte</td>
</tr>
</tbody>
</table>
<p><em>Integer</em> und <em>Double</em> werden in R als <strong>numeric</strong> zusammengefasst bzw. dargestellt. Aus der Tabelle kann ich sagen, dass ich mit drei grundlegenden gängigen Datentypen in Python und R am meisten zu tun habe. Das sind: <strong>numerische</strong> - zusammengesetzt aus <em>Integer</em> und <em>Float</em>, <strong>logische</strong> und <strong>textuelle</strong> Datentypen.</p>
<p>Jetzt gehen wir einzelne Typen durch.</p>
<section id="integerint" class="level3">
<h3 class="anchored" data-anchor-id="integerint">integer/int</h3>
<p>Integer stellt eine ganze Zahl dar, z.B. 7, -7. In R wird die ganze Zahl mit einem <code>L</code> hinter der Zahl gekennzeichnet. Warum L dahinter stehen soll, weiß auch nicht;). R soll ja bekanntlich auf Programmiersprache C aufgebaut sein und da soll L für <em>long integer</em> stehen. In Python werden die ganze Zahlen normal als integer gespeichert.</p>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">ri1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>L</span>
<span id="cb7-2">ri2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>L</span>
<span id="cb7-3">ri3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">13.0</span></span>
<span id="cb7-4">ri4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri1))</span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri2))</span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri3))</span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "numeric"</span></span>
<span id="cb7-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri4))</span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "character"</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">pi1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span></span>
<span id="cb8-2">pi2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb8-3">pi3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">13.0</span></span>
<span id="cb8-4">pi4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb8-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi1))</span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb8-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi2))</span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb8-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi3))</span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'float'&gt;</span></span>
<span id="cb8-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi4))</span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'str'&gt;</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout="[[50,50], [100]]">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>R</em></strong></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>Python</em></strong></p>
</div>
</div>
</div>
<p>Um herauszufinden oder anzeigen zu lassen, welchen Typ ein Objekt hat, gibt es Funktion <strong><em><code>class()</code></em></strong> in R und <strong><em><code>type()</code></em></strong> in Python. In R werden Objekte mit <strong><code>&lt;-</code></strong> und in Python mit <strong><code>=</code></strong> zugewiesen. Generell geht eas auch in R mit <code>=</code>, aber mit Pfeil ist üblich</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More about assignment in R: <code>&lt;-</code> or <code>=</code> ?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>In R ist üblich, Objekte mit <code>&lt;-</code> zuzuweisen, während man in Python mit <code>=</code> zuweist. Generell geht auch in R mit Gleichheitszeichen. Aber man bevorzugt Zuweisungspfeil. Gleichheitszeichen wird zur Zuweisung eher innerhalb einer Funktion benutzt. Hier eine kleine Demonstration:<br>
Den Vektor von 1 bis 15 weise ich <em>vec</em> zu und rechne ich Summe:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vec =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] 45</code></pre>
</div>
</div>
<p>Wenn ich das Objekt <em>vec</em> abfrage, kommt Fehlermeldung, weil dieses Objekt nur in der Funktion existiert:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(vec)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>#&gt; Error in eval(expr, envir, enclos): Objekt 'vec' nicht gefunden</code></pre>
</div>
</div>
<p>Das Gleiche mache ich mit <code>&lt;-</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 45</span></span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(vec)</span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1 2 3 4 5 6 7 8 9</span></span></code></pre></div>
</div>
<p>Der Zuweisungspfeil wird aber meistens empfohlen und verwendet. Hier zum Nachlesen: <a href="http://adv-r.had.co.nz/Style.html">Style guide von Hadley Wickham</a> und hier: <a href="https://google.github.io/styleguide/Rguide.html">Google’s R Style Guide</a></p>
</div>
</div>
</div>
<p><strong> <img src="https://latex.codecogs.com/png.latex?~~"> – <img src="https://latex.codecogs.com/png.latex?~~"> Prüfen, ob der Typ des Objekts integer ist</strong><br>
In R kann man den Typ des Objekts durch die Funktion <strong><em><code>is.integer()</code></em></strong> oder <strong><em><code>inherits(object, "type")</code></em></strong> prüfen.</p>
<div class="code-r">
<p><strong><em>R</em></strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check in R if a number is integer</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(ri1)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 11L integer?</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb14-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inherits</span>(ri2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integer"</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is -12 integer?</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb14-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(ri3)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 13.0 integer?</span></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(ri4)            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is "123" integer?</span></span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb14-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inherits</span>(ri4, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"character"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is "123"character?</span></span>
<span id="cb14-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span></code></pre></div>
</div>
</div>
<p><strong>– in integer umwandeln</strong><br>
Wie gesagt, ohne L speichert R die Zahl als numeric, also als Kommazahl bzw. Float <em>(Sieh Objekt ri3 im BSP oben)</em>. Ich muss R dazu bringen, dass er die Zahl als Integer behandelt. Dafür kann ich die Funktion <strong><em><code>as.integer()</code></em></strong> benutzen.</p>
<div class="code-r">
<p><strong><em>R</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making R treat the object as an integer</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri3))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 13.0</span></span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(ri4))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of "123"</span></span>
<span id="cb15-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(ri3)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 13.0 to integer</span></span>
<span id="cb15-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(ri3)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing "123" to integer</span></span>
<span id="cb15-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of FALSE</span></span>
<span id="cb15-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of True</span></span>
<span id="cb15-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as Integer</span></span>
<span id="cb15-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as Integer</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] "numeric"
#&gt; [1] "character"
#&gt; [1] "integer"
#&gt; [1] "integer"
#&gt; [1] "logical"
#&gt; [1] "logical"
#&gt; [1] 0
#&gt; [1] 1</code></pre>
</div>
</div>
</div>
<p><strong> <img src="https://latex.codecogs.com/png.latex?~~"> – <img src="https://latex.codecogs.com/png.latex?~~"> Prüfen, ob der Typ des Objekts int ist</strong> Um zu prüfen gibt es in Python auch mehrere Wege: durch die Funktion <strong><em><code>isinstance(object, type)</code></em></strong> (wie <code>inherits(object, ""type")</code> bei R) oder kann mann auch prüfen, indem man den Objekttyp dem Datentyp gleichsetzt z.B. <strong><em><code>type(objekt) ==/is int()</code></em></strong>. Es gibt auch die Funktion <strong><em><code>is_integer()</code></em></strong>. Diese Funktion ist zum Checken, ob Float vom Typ Integer ist, bei anderer Typen funktioniert nicht, zumindest tat bei mir nicht. Außerdem braucht man dafür Modul sumpy, denkeich, worauf ich hier verzichtet habe. Daher habe ich nicht tief gesucht, denn ich kenne ja schon einen Weg, der nach Rom führt. </p>
<div class="code-py">
<p><strong><em>Python</em></strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check in Python if a number is integer</span></span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pi1, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 11 integer?</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb17-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is -12 integer?</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb17-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pi3, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 13.0 integer?</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb17-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi4) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is '123' integer?</span></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span></code></pre></div>
</div>
</div>
<p><strong>– in int umwandeln</strong><br>
Python speichrt die Zahlen als Integer. Wenn ich sie als Float will, muss ich den Typ umwandeln in Float. Wenn ich Daten von Typ z.B. Text, Float oder Logical habe, kann ich ihn umwandeln in Integer in Python, indem ich Objekt in die Funktion <strong><em><code>int()</code></em></strong> übergebe.</p>
<div class="code-py">
<p><strong><em>Python</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making Python treat the object as an integer</span></span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi3))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 13.0</span></span>
<span id="cb18-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pi4))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of "123"</span></span>
<span id="cb18-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pi3)))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 13.0 to integer</span></span>
<span id="cb18-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pi3)))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing "123" to integer</span></span>
<span id="cb18-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of FALSE</span></span>
<span id="cb18-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of True</span></span>
<span id="cb18-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as Integer</span></span>
<span id="cb18-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as Integer</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; &lt;class 'float'&gt;
#&gt; &lt;class 'str'&gt;
#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'bool'&gt;
#&gt; &lt;class 'bool'&gt;
#&gt; 0
#&gt; 1</code></pre>
</div>
</div>
</div>
</section>
<section id="numericfloat" class="level3">
<h3 class="anchored" data-anchor-id="numericfloat">numeric/float</h3>
<p>Die Kommazahlen mit Nachkommastellen sind die Floats. R speichert die Zahlen normalerweise als Float (ohne diese L nach der Zahl). Generell werden Zahlen in R als <code>numeric</code> dargestellt. Sie können auch Integer oder Float sein. Beispielweise speichert R die Zahl 10 als Float, mit der Funktion <code>class()</code> stellt er den Typ als <em><code>numeric</code></em> dar. Es gibt auch noch eine Funktion in R, mit der man den Typ prüfen kann: <strong><em><code>typeof()</code></em></strong>. Diese gibt den Typ von 10 als <code>double</code> an, vermutlich kommt das auch von der C Sprache. Ich denke, durchs folgende Beispiel wird deutlicher, was ich meine;).</p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class() und typeof()</span></span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numeric</span></span>
<span id="cb20-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># double</span></span>
<span id="cb20-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>L)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># integer</span></span>
<span id="cb20-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>L)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># integer</span></span>
<span id="cb20-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numeric</span></span>
<span id="cb20-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># double</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] "numeric"
#&gt; [1] "double"
#&gt; [1] "integer"
#&gt; [1] "integer"
#&gt; [1] "numeric"
#&gt; [1] "double"</code></pre>
</div>
</div>
<p><strong>– Prüfen, ob der Typ des Objekts numeric/float ist</strong><br>
Wie beim Integer, kann man hier auch ähnliche Funktionen benutzen <strong><em><code>is.numeric()</code></em></strong> oder <strong><em><code>is.double()</code></em></strong> oder auch <code>inherits(obj, "type")</code> für R, und gleiche wie oben für Python.</p>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">rf1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14</span></span>
<span id="cb22-2">rf2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span></span>
<span id="cb22-3">rf3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>L</span>
<span id="cb22-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf2))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class()-Type of 17</span></span>
<span id="cb22-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "numeric"</span></span>
<span id="cb22-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf3))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class()-Type of 20L</span></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb22-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(rf2)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># typeof()-Type of 17</span></span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "double"</span></span>
<span id="cb22-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(rf3)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># typeof()-Type of 20L</span></span>
<span id="cb22-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "integer"</span></span>
<span id="cb22-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.numeric</span>(rf1)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 3.14 numeric?</span></span>
<span id="cb22-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb22-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.double</span>(rf2)     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 17 double?</span></span>
<span id="cb22-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb22-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.numeric</span>(rf3)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 20L numeric?</span></span>
<span id="cb22-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb22-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.integer</span>(rf3)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 20L integer?</span></span>
<span id="cb22-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">pf1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14</span></span>
<span id="cb23-2">pf2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span></span>
<span id="cb23-3">pf3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb23-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf1))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 3.14</span></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'float'&gt;</span></span>
<span id="cb23-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf2))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 17</span></span>
<span id="cb23-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb23-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf3))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 20</span></span>
<span id="cb23-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'int'&gt;</span></span>
<span id="cb23-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pf1, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 3.14 float?</span></span>
<span id="cb23-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb23-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pf1, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 3.14 int?</span></span>
<span id="cb23-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb23-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 17 float?</span></span>
<span id="cb23-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb23-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf3) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 20 float?</span></span>
<span id="cb23-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb23-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(pf2, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is 17 float?</span></span>
<span id="cb23-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout="[[50,50], [100]]">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>R</em></strong></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>Python</em></strong></p>
</div>
</div>
</div>
<p><strong>– in numeric/float umwandeln</strong><br>
Das Gleiche gilt auch hier, wenn ich den Datentyp in numeric oder float haben will.<br>
In R benutze ich dafur die Funktion <strong><em><code>as.numeric()</code></em></strong> oder <strong><em><code>as.double</code></em></strong>.</p>
<div class="code-r">
<p><strong><em>R</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making R treat the object as an integer</span></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf2))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 17</span></span>
<span id="cb24-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf3))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 20L</span></span>
<span id="cb24-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(rf2)))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 17 to nomeric</span></span>
<span id="cb24-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.double</span>(rf3)))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 20L to nomeric</span></span>
<span id="cb24-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as numeric</span></span>
<span id="cb24-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.double</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as numeric</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; [1] "numeric"
#&gt; [1] "integer"
#&gt; [1] "numeric"
#&gt; [1] "numeric"
#&gt; [1] 0
#&gt; [1] 1</code></pre>
</div>
</div>
</div>
<p>In Python kann ich dies mit der Funktion <strong><em><code>float()</code></em></strong> anstellen.</p>
<div class="code-py">
<p><strong><em>Python</em></strong></p>
<div class="cell">
<details class="code-fold">
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Making Python treat the object as an integer</span></span>
<span id="cb26-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf2))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 17</span></span>
<span id="cb26-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf3))        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of 20</span></span>
<span id="cb26-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(pf2))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 17 to float</span></span>
<span id="cb26-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(pf3))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Forsing 20 to float</span></span>
<span id="cb26-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as float</span></span>
<span id="cb26-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as float</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'int'&gt;
#&gt; &lt;class 'float'&gt;
#&gt; &lt;class 'float'&gt;
#&gt; 0.0
#&gt; 1.0</code></pre>
</div>
</div>
</div>
</section>
<section id="characterstr" class="level3">
<h3 class="anchored" data-anchor-id="characterstr">character/str</h3>
<p>Wie der Name schon sagt, solche Daten sind Strings, die Zeichen, Buchstaben enthalten. In R werden sie als <code>character</code> und in Python als <code>str</code> charakteresiert. Mit Strings hat man in der Praxis auch wie mit numerischen Daten häufig zu tun. Beispielweise können im zu analysierenden Datensatz auch kategoriale Variablen: “männlich”, “weiblich” vorhanden sein usw.<br>
Strings können im doppelten Apostroph <code>'text'</code> oder in Anführungszeichen oder Gänsefüßchen <code>"text"</code> angegeben werden/sein in R auch in Python. Die Funktion für die Länge des Strings ist für R: <strong><em><code>nchar()</code></em></strong> und für Python <strong><em><code>len()</code></em></strong>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true"></a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false"></a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="code-r">
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examples for Characters</span></span>
<span id="cb28-2">rt1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb28-3">rt2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span> </span>
<span id="cb28-4">rt3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span></span>
<span id="cb28-5">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Class of rt1: {class(rt1)}"</span>)</span>
<span id="cb28-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding Strings </span></span>
<span id="cb28-7">glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mit der Funktion glue(): {rt2} {rt3}"</span>)</span>
<span id="cb28-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mit der Funktion paste():"</span>, rt2, rt3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)</span>
<span id="cb28-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare Strings</span></span>
<span id="cb28-10">rt2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span></span>
<span id="cb28-11">rt2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HELLO"</span></span>
<span id="cb28-12">rt1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb28-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Length of String</span></span>
<span id="cb28-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Länge von </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">123</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">: {nchar(rt1)}"</span>)</span>
<span id="cb28-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Länge von </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Hello</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">: {nchar(rt2)}"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; Class of rt1: character
#&gt; Mit der Funktion glue(): Hello World
#&gt; [1] "Mit der Funktion paste(): Hello World"
#&gt; [1] TRUE
#&gt; [1] FALSE
#&gt; [1] TRUE
#&gt; Länge von "123": 3
#&gt; Länge von "Hello": 5</code></pre>
</div>
</div>
</div>
<p>R hat es schwer mit Zusammenaddieren von Strings und multiplizieren von Strings mit einer Zahl.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
More about string operations in R
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Wenn man in R zwei Strings zusammen addieren will oder String mit einer Zahl multiplizieren will, gibt R Error zurück, also kann es nicht. Vielleich gibt es irgendein Paket, das dies ermöglichen, müsste man mal schauen. Also einfach Addieren von zwei Strings wie in Python geht in R nicht. Mit der Funktion <strong><em><code>glue()</code></em></strong> aus dem Paket <code>glue</code> oder mit der Funktion <code>paste</code> konnte ich zwei Strings zusammen addierend anzeigen lassen. Diese Funktion gibt es auch im Paket <code>stringr</code> kann so angewendet werden: <code>stringr::str_glue()</code>. Die Funktion <code>glue("The value of text is {text})</code> ist wie f-String in Python <code>print(f"The value of text is {text}")</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">rt1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> rt2</span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Error in rt1 + rt2: nicht-numerisches Argument für binären Operator</span></span>
<span id="cb30-3">rt3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; Error in rt3 * 3: nicht-numerisches Argument für binären Operator</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="code-py">
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examples for Characters</span></span>
<span id="cb31-2">pt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span></span>
<span id="cb31-3">pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span> </span>
<span id="cb31-4">pt3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span></span>
<span id="cb31-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Type of pt1: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pt1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding Strings</span></span>
<span id="cb31-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pt3) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or</span></span>
<span id="cb31-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pt2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pt3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiply a string by 3</span></span>
<span id="cb31-10">pt3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb31-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare</span></span>
<span id="cb31-12">pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span></span>
<span id="cb31-13">pt2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HELLO"</span></span>
<span id="cb31-14">pt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb31-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Length of String</span></span>
<span id="cb31-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Länge von </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">123</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pt1)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Länge von </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Hallo</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pt2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre class="code-output"><code>#&gt; Type of pt1: &lt;class 'str'&gt;
#&gt; Hello world
#&gt; Hello world
#&gt; 'worldworldworld'
#&gt; True
#&gt; False
#&gt; False
#&gt; Länge von "123": 3
#&gt; Länge von "Hallo": 5</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<p>Strings sing ein umfangreiches Thema. Hier waren nur Sachen bezogen auf Datentyp. Vielleicht wird es zudem ein separates Notizbuch geben .</p>
</section>
<section id="logicalbool" class="level3">
<h3 class="anchored" data-anchor-id="logicalbool">logical/bool</h3>
<p>Die Objekt vom logischen Typ können die Werte WAHR/FALSCH oder 1/0 annehmen. Diese werden in R als <code>logical</code> und in Python als <code>bool</code> gespeichert. Schreibweisen unterscheiden sich auch, geschrieben bzw. dargestellt werden sie in R mit Großbuchstaben: <span style="color: red;">TRUE/FALSE</span> und in Python klein geschrieben mit Großbuchstaben am Anfang: <span style="color: red;">True/False</span>.</p>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">rt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb33-2">rf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb33-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rt)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of TRUE</span></span>
<span id="cb33-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "logical"</span></span>
<span id="cb33-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(rf)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of FALSE</span></span>
<span id="cb33-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "logical"</span></span>
<span id="cb33-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.logical</span>(rt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is TRUE logical</span></span>
<span id="cb33-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb33-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(rt) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as character</span></span>
<span id="cb33-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "TRUE"</span></span>
<span id="cb33-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(rf) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as character</span></span>
<span id="cb33-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] "FALSE"</span></span>
<span id="cb33-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(rt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TRUE as integer</span></span>
<span id="cb33-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 1</span></span>
<span id="cb33-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(rf)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE as integer</span></span>
<span id="cb33-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 0</span></span>
<span id="cb33-17">rt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> rf          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rt AND rf</span></span>
<span id="cb33-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span>
<span id="cb33-19">rt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> rf          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rt OR rf</span></span>
<span id="cb33-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] TRUE</span></span>
<span id="cb33-21"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>rt              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is not TRUE</span></span>
<span id="cb33-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] FALSE</span></span></code></pre></div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">pt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb34-2">pf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb34-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pt)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of True</span></span>
<span id="cb34-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'bool'&gt;</span></span>
<span id="cb34-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pf)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type of False</span></span>
<span id="cb34-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; &lt;class 'bool'&gt;</span></span>
<span id="cb34-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(pt) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is bool</span></span>
<span id="cb34-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb34-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(pt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True as String</span></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'True'</span></span>
<span id="cb34-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(pf)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># False as String</span></span>
<span id="cb34-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 'False'</span></span>
<span id="cb34-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pt)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True as Integer</span></span>
<span id="cb34-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 1</span></span>
<span id="cb34-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pf)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># False as Integer</span></span>
<span id="cb34-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; 0</span></span>
<span id="cb34-17">pt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> pf <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pt AND pf</span></span>
<span id="cb34-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span>
<span id="cb34-19">pt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> pf  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pt OR pf</span></span>
<span id="cb34-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; True</span></span>
<span id="cb34-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> pt    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is not True</span></span>
<span id="cb34-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; False</span></span></code></pre></div>
<div class="quarto-layout-panel" data-layout="[[50,50], [100]]">
<div class="quarto-layout-row">
<div class="code-r quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>R</em></strong></p>
</div>
<div class="code-py quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong><em>Python</em></strong></p>
</div>
</div>
</div>
<p>Hoffentlich ist mir gelungen, meine Notizen einigermaßen verständänlich und anständig darzustellen . Next Topic will be about data structures.</p>
</section>
</section>
<section id="references" class="level2">




</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-LearnR" class="csl-entry">
Aphalo, Pedro J. 2020. <em><span class="nocase">Learn R As a Language</span></em>. CRC Press.
</div>
<div id="ref-Braineo" class="csl-entry">
Aust, Holger. Mar 2020. <span>“<span class="nocase">Datentypen in R – Einfach erklärt</span>.”</span> https://databraineo.com/ki-training-resources/r-programmierung/datentypen-in-r-einfach-erklaert/, [Accessed on 2022-12-11].
</div>
<div id="ref-randpy" class="csl-entry">
Boyan Angelov, Rick J. Scavetta. 2021. <em><span class="nocase">Python and R for the Modern Data Scientist</span></em>. O’Reilly Media, Inc.
</div>
<div id="ref-LearnPy" class="csl-entry">
Dimitrios Xanthidis, Ourania K. Xanthidou, Christos Manolas. 2022. <em>Handbook of Computer Programming with Python</em>. Chapman; Hall/CRC.
</div>
<div id="ref-AhilanS" class="csl-entry">
Srivishnumohan, Ahilan. Jun 2020. <span>“<span class="nocase">Bilingual Data Scientist: Python to R (Part 1)</span>.”</span> https://towardsdatascience.com/bilingual-data-scientist-python-to-r-part-1-70438fcdc155, [Accessed on 2022-12-16].
</div>
<div id="ref-WangMe" class="csl-entry">
WANG, Mena Ning. Dec 2021. <span>“R &amp; Python Basics 1: Data Type.”</span> https://rpubs.com/MenaWANG/RnPython_DataType, [Accessed on 2022-12-01].
</div>
<div id="ref-WouterCo" class="csl-entry">
Wouter van Atteveldt, Carlos Arcila Calderon, Damian Trilling. 2022. <em>Computational Analysis of Communication</em>. Wiley-Blackwell.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Python</category>
  <category>Data Types</category>
  <category>German</category>
  <guid>https://sultanov.quarto.pub/blog/posts/DataTypes/datatypes_de.html</guid>
  <pubDate>Sun, 11 Dec 2022 23:00:00 GMT</pubDate>
</item>
</channel>
</rss>
